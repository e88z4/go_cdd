// Code generated by go-swagger; DO NOT EDIT.

package email_notification_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteEmailNotificationServerUsingDELETEParams creates a new DeleteEmailNotificationServerUsingDELETEParams object
// with the default values initialized.
func NewDeleteEmailNotificationServerUsingDELETEParams() *DeleteEmailNotificationServerUsingDELETEParams {
	var ()
	return &DeleteEmailNotificationServerUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteEmailNotificationServerUsingDELETEParamsWithTimeout creates a new DeleteEmailNotificationServerUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteEmailNotificationServerUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteEmailNotificationServerUsingDELETEParams {
	var ()
	return &DeleteEmailNotificationServerUsingDELETEParams{

		timeout: timeout,
	}
}

// NewDeleteEmailNotificationServerUsingDELETEParamsWithContext creates a new DeleteEmailNotificationServerUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteEmailNotificationServerUsingDELETEParamsWithContext(ctx context.Context) *DeleteEmailNotificationServerUsingDELETEParams {
	var ()
	return &DeleteEmailNotificationServerUsingDELETEParams{

		Context: ctx,
	}
}

// NewDeleteEmailNotificationServerUsingDELETEParamsWithHTTPClient creates a new DeleteEmailNotificationServerUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteEmailNotificationServerUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteEmailNotificationServerUsingDELETEParams {
	var ()
	return &DeleteEmailNotificationServerUsingDELETEParams{
		HTTPClient: client,
	}
}

/*DeleteEmailNotificationServerUsingDELETEParams contains all the parameters to send to the API endpoint
for the delete email notification server using d e l e t e operation typically these are written to a http.Request
*/
type DeleteEmailNotificationServerUsingDELETEParams struct {

	/*EmailNotificationServerID
	  emailNotificationServerId

	*/
	EmailNotificationServerID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteEmailNotificationServerUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) WithContext(ctx context.Context) *DeleteEmailNotificationServerUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteEmailNotificationServerUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmailNotificationServerID adds the emailNotificationServerID to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) WithEmailNotificationServerID(emailNotificationServerID int64) *DeleteEmailNotificationServerUsingDELETEParams {
	o.SetEmailNotificationServerID(emailNotificationServerID)
	return o
}

// SetEmailNotificationServerID adds the emailNotificationServerId to the delete email notification server using d e l e t e params
func (o *DeleteEmailNotificationServerUsingDELETEParams) SetEmailNotificationServerID(emailNotificationServerID int64) {
	o.EmailNotificationServerID = emailNotificationServerID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteEmailNotificationServerUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param emailNotificationServerId
	if err := r.SetPathParam("emailNotificationServerId", swag.FormatInt64(o.EmailNotificationServerID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
