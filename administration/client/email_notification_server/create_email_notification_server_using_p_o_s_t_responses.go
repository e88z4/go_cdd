// Code generated by go-swagger; DO NOT EDIT.

package email_notification_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// CreateEmailNotificationServerUsingPOSTReader is a Reader for the CreateEmailNotificationServerUsingPOST structure.
type CreateEmailNotificationServerUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEmailNotificationServerUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateEmailNotificationServerUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateEmailNotificationServerUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateEmailNotificationServerUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateEmailNotificationServerUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateEmailNotificationServerUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateEmailNotificationServerUsingPOSTOK creates a CreateEmailNotificationServerUsingPOSTOK with default headers values
func NewCreateEmailNotificationServerUsingPOSTOK() *CreateEmailNotificationServerUsingPOSTOK {
	return &CreateEmailNotificationServerUsingPOSTOK{}
}

/*CreateEmailNotificationServerUsingPOSTOK handles this case with default header values.

OK
*/
type CreateEmailNotificationServerUsingPOSTOK struct {
	Payload *models.EmailNotificationServerDto
}

func (o *CreateEmailNotificationServerUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /email-notification-servers][%d] createEmailNotificationServerUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateEmailNotificationServerUsingPOSTOK) GetPayload() *models.EmailNotificationServerDto {
	return o.Payload
}

func (o *CreateEmailNotificationServerUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailNotificationServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEmailNotificationServerUsingPOSTCreated creates a CreateEmailNotificationServerUsingPOSTCreated with default headers values
func NewCreateEmailNotificationServerUsingPOSTCreated() *CreateEmailNotificationServerUsingPOSTCreated {
	return &CreateEmailNotificationServerUsingPOSTCreated{}
}

/*CreateEmailNotificationServerUsingPOSTCreated handles this case with default header values.

Created
*/
type CreateEmailNotificationServerUsingPOSTCreated struct {
}

func (o *CreateEmailNotificationServerUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /email-notification-servers][%d] createEmailNotificationServerUsingPOSTCreated ", 201)
}

func (o *CreateEmailNotificationServerUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEmailNotificationServerUsingPOSTUnauthorized creates a CreateEmailNotificationServerUsingPOSTUnauthorized with default headers values
func NewCreateEmailNotificationServerUsingPOSTUnauthorized() *CreateEmailNotificationServerUsingPOSTUnauthorized {
	return &CreateEmailNotificationServerUsingPOSTUnauthorized{}
}

/*CreateEmailNotificationServerUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateEmailNotificationServerUsingPOSTUnauthorized struct {
}

func (o *CreateEmailNotificationServerUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /email-notification-servers][%d] createEmailNotificationServerUsingPOSTUnauthorized ", 401)
}

func (o *CreateEmailNotificationServerUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEmailNotificationServerUsingPOSTForbidden creates a CreateEmailNotificationServerUsingPOSTForbidden with default headers values
func NewCreateEmailNotificationServerUsingPOSTForbidden() *CreateEmailNotificationServerUsingPOSTForbidden {
	return &CreateEmailNotificationServerUsingPOSTForbidden{}
}

/*CreateEmailNotificationServerUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateEmailNotificationServerUsingPOSTForbidden struct {
}

func (o *CreateEmailNotificationServerUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /email-notification-servers][%d] createEmailNotificationServerUsingPOSTForbidden ", 403)
}

func (o *CreateEmailNotificationServerUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEmailNotificationServerUsingPOSTNotFound creates a CreateEmailNotificationServerUsingPOSTNotFound with default headers values
func NewCreateEmailNotificationServerUsingPOSTNotFound() *CreateEmailNotificationServerUsingPOSTNotFound {
	return &CreateEmailNotificationServerUsingPOSTNotFound{}
}

/*CreateEmailNotificationServerUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateEmailNotificationServerUsingPOSTNotFound struct {
}

func (o *CreateEmailNotificationServerUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /email-notification-servers][%d] createEmailNotificationServerUsingPOSTNotFound ", 404)
}

func (o *CreateEmailNotificationServerUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
