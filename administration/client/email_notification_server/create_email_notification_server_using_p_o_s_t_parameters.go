// Code generated by go-swagger; DO NOT EDIT.

package email_notification_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewCreateEmailNotificationServerUsingPOSTParams creates a new CreateEmailNotificationServerUsingPOSTParams object
// with the default values initialized.
func NewCreateEmailNotificationServerUsingPOSTParams() *CreateEmailNotificationServerUsingPOSTParams {
	var ()
	return &CreateEmailNotificationServerUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateEmailNotificationServerUsingPOSTParamsWithTimeout creates a new CreateEmailNotificationServerUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateEmailNotificationServerUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateEmailNotificationServerUsingPOSTParams {
	var ()
	return &CreateEmailNotificationServerUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateEmailNotificationServerUsingPOSTParamsWithContext creates a new CreateEmailNotificationServerUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateEmailNotificationServerUsingPOSTParamsWithContext(ctx context.Context) *CreateEmailNotificationServerUsingPOSTParams {
	var ()
	return &CreateEmailNotificationServerUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateEmailNotificationServerUsingPOSTParamsWithHTTPClient creates a new CreateEmailNotificationServerUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateEmailNotificationServerUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateEmailNotificationServerUsingPOSTParams {
	var ()
	return &CreateEmailNotificationServerUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateEmailNotificationServerUsingPOSTParams contains all the parameters to send to the API endpoint
for the create email notification server using p o s t operation typically these are written to a http.Request
*/
type CreateEmailNotificationServerUsingPOSTParams struct {

	/*EmailNotificationServerDto
	  emailNotificationServerDto

	*/
	EmailNotificationServerDto *models.EmailNotificationServerDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateEmailNotificationServerUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) WithContext(ctx context.Context) *CreateEmailNotificationServerUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateEmailNotificationServerUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmailNotificationServerDto adds the emailNotificationServerDto to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) WithEmailNotificationServerDto(emailNotificationServerDto *models.EmailNotificationServerDto) *CreateEmailNotificationServerUsingPOSTParams {
	o.SetEmailNotificationServerDto(emailNotificationServerDto)
	return o
}

// SetEmailNotificationServerDto adds the emailNotificationServerDto to the create email notification server using p o s t params
func (o *CreateEmailNotificationServerUsingPOSTParams) SetEmailNotificationServerDto(emailNotificationServerDto *models.EmailNotificationServerDto) {
	o.EmailNotificationServerDto = emailNotificationServerDto
}

// WriteToRequest writes these params to a swagger request
func (o *CreateEmailNotificationServerUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EmailNotificationServerDto != nil {
		if err := r.SetBodyParam(o.EmailNotificationServerDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
