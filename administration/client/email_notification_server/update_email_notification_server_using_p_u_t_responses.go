// Code generated by go-swagger; DO NOT EDIT.

package email_notification_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateEmailNotificationServerUsingPUTReader is a Reader for the UpdateEmailNotificationServerUsingPUT structure.
type UpdateEmailNotificationServerUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEmailNotificationServerUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEmailNotificationServerUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateEmailNotificationServerUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateEmailNotificationServerUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEmailNotificationServerUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEmailNotificationServerUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateEmailNotificationServerUsingPUTOK creates a UpdateEmailNotificationServerUsingPUTOK with default headers values
func NewUpdateEmailNotificationServerUsingPUTOK() *UpdateEmailNotificationServerUsingPUTOK {
	return &UpdateEmailNotificationServerUsingPUTOK{}
}

/*UpdateEmailNotificationServerUsingPUTOK handles this case with default header values.

OK
*/
type UpdateEmailNotificationServerUsingPUTOK struct {
	Payload *models.EmailNotificationServerDto
}

func (o *UpdateEmailNotificationServerUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /email-notification-servers/{emailNotificationServerId}][%d] updateEmailNotificationServerUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateEmailNotificationServerUsingPUTOK) GetPayload() *models.EmailNotificationServerDto {
	return o.Payload
}

func (o *UpdateEmailNotificationServerUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailNotificationServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEmailNotificationServerUsingPUTCreated creates a UpdateEmailNotificationServerUsingPUTCreated with default headers values
func NewUpdateEmailNotificationServerUsingPUTCreated() *UpdateEmailNotificationServerUsingPUTCreated {
	return &UpdateEmailNotificationServerUsingPUTCreated{}
}

/*UpdateEmailNotificationServerUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateEmailNotificationServerUsingPUTCreated struct {
}

func (o *UpdateEmailNotificationServerUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /email-notification-servers/{emailNotificationServerId}][%d] updateEmailNotificationServerUsingPUTCreated ", 201)
}

func (o *UpdateEmailNotificationServerUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailNotificationServerUsingPUTUnauthorized creates a UpdateEmailNotificationServerUsingPUTUnauthorized with default headers values
func NewUpdateEmailNotificationServerUsingPUTUnauthorized() *UpdateEmailNotificationServerUsingPUTUnauthorized {
	return &UpdateEmailNotificationServerUsingPUTUnauthorized{}
}

/*UpdateEmailNotificationServerUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateEmailNotificationServerUsingPUTUnauthorized struct {
}

func (o *UpdateEmailNotificationServerUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /email-notification-servers/{emailNotificationServerId}][%d] updateEmailNotificationServerUsingPUTUnauthorized ", 401)
}

func (o *UpdateEmailNotificationServerUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailNotificationServerUsingPUTForbidden creates a UpdateEmailNotificationServerUsingPUTForbidden with default headers values
func NewUpdateEmailNotificationServerUsingPUTForbidden() *UpdateEmailNotificationServerUsingPUTForbidden {
	return &UpdateEmailNotificationServerUsingPUTForbidden{}
}

/*UpdateEmailNotificationServerUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateEmailNotificationServerUsingPUTForbidden struct {
}

func (o *UpdateEmailNotificationServerUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /email-notification-servers/{emailNotificationServerId}][%d] updateEmailNotificationServerUsingPUTForbidden ", 403)
}

func (o *UpdateEmailNotificationServerUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEmailNotificationServerUsingPUTNotFound creates a UpdateEmailNotificationServerUsingPUTNotFound with default headers values
func NewUpdateEmailNotificationServerUsingPUTNotFound() *UpdateEmailNotificationServerUsingPUTNotFound {
	return &UpdateEmailNotificationServerUsingPUTNotFound{}
}

/*UpdateEmailNotificationServerUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateEmailNotificationServerUsingPUTNotFound struct {
}

func (o *UpdateEmailNotificationServerUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /email-notification-servers/{emailNotificationServerId}][%d] updateEmailNotificationServerUsingPUTNotFound ", 404)
}

func (o *UpdateEmailNotificationServerUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
