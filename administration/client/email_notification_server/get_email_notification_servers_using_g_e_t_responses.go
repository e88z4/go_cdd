// Code generated by go-swagger; DO NOT EDIT.

package email_notification_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetEmailNotificationServersUsingGETReader is a Reader for the GetEmailNotificationServersUsingGET structure.
type GetEmailNotificationServersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEmailNotificationServersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEmailNotificationServersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEmailNotificationServersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEmailNotificationServersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEmailNotificationServersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetEmailNotificationServersUsingGETOK creates a GetEmailNotificationServersUsingGETOK with default headers values
func NewGetEmailNotificationServersUsingGETOK() *GetEmailNotificationServersUsingGETOK {
	return &GetEmailNotificationServersUsingGETOK{}
}

/*GetEmailNotificationServersUsingGETOK handles this case with default header values.

OK
*/
type GetEmailNotificationServersUsingGETOK struct {
	Payload *models.ListHolderDtoEmailNotificationServerDto
}

func (o *GetEmailNotificationServersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /email-notification-servers][%d] getEmailNotificationServersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetEmailNotificationServersUsingGETOK) GetPayload() *models.ListHolderDtoEmailNotificationServerDto {
	return o.Payload
}

func (o *GetEmailNotificationServersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListHolderDtoEmailNotificationServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmailNotificationServersUsingGETUnauthorized creates a GetEmailNotificationServersUsingGETUnauthorized with default headers values
func NewGetEmailNotificationServersUsingGETUnauthorized() *GetEmailNotificationServersUsingGETUnauthorized {
	return &GetEmailNotificationServersUsingGETUnauthorized{}
}

/*GetEmailNotificationServersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetEmailNotificationServersUsingGETUnauthorized struct {
}

func (o *GetEmailNotificationServersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /email-notification-servers][%d] getEmailNotificationServersUsingGETUnauthorized ", 401)
}

func (o *GetEmailNotificationServersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEmailNotificationServersUsingGETForbidden creates a GetEmailNotificationServersUsingGETForbidden with default headers values
func NewGetEmailNotificationServersUsingGETForbidden() *GetEmailNotificationServersUsingGETForbidden {
	return &GetEmailNotificationServersUsingGETForbidden{}
}

/*GetEmailNotificationServersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetEmailNotificationServersUsingGETForbidden struct {
}

func (o *GetEmailNotificationServersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /email-notification-servers][%d] getEmailNotificationServersUsingGETForbidden ", 403)
}

func (o *GetEmailNotificationServersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEmailNotificationServersUsingGETNotFound creates a GetEmailNotificationServersUsingGETNotFound with default headers values
func NewGetEmailNotificationServersUsingGETNotFound() *GetEmailNotificationServersUsingGETNotFound {
	return &GetEmailNotificationServersUsingGETNotFound{}
}

/*GetEmailNotificationServersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetEmailNotificationServersUsingGETNotFound struct {
}

func (o *GetEmailNotificationServersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /email-notification-servers][%d] getEmailNotificationServersUsingGETNotFound ", 404)
}

func (o *GetEmailNotificationServersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
