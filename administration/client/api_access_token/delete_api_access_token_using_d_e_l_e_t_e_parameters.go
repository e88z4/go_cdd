// Code generated by go-swagger; DO NOT EDIT.

package api_access_token

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteAPIAccessTokenUsingDELETEParams creates a new DeleteAPIAccessTokenUsingDELETEParams object
// with the default values initialized.
func NewDeleteAPIAccessTokenUsingDELETEParams() *DeleteAPIAccessTokenUsingDELETEParams {
	var ()
	return &DeleteAPIAccessTokenUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPIAccessTokenUsingDELETEParamsWithTimeout creates a new DeleteAPIAccessTokenUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAPIAccessTokenUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteAPIAccessTokenUsingDELETEParams {
	var ()
	return &DeleteAPIAccessTokenUsingDELETEParams{

		timeout: timeout,
	}
}

// NewDeleteAPIAccessTokenUsingDELETEParamsWithContext creates a new DeleteAPIAccessTokenUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAPIAccessTokenUsingDELETEParamsWithContext(ctx context.Context) *DeleteAPIAccessTokenUsingDELETEParams {
	var ()
	return &DeleteAPIAccessTokenUsingDELETEParams{

		Context: ctx,
	}
}

// NewDeleteAPIAccessTokenUsingDELETEParamsWithHTTPClient creates a new DeleteAPIAccessTokenUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAPIAccessTokenUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteAPIAccessTokenUsingDELETEParams {
	var ()
	return &DeleteAPIAccessTokenUsingDELETEParams{
		HTTPClient: client,
	}
}

/*DeleteAPIAccessTokenUsingDELETEParams contains all the parameters to send to the API endpoint
for the delete Api access token using d e l e t e operation typically these are written to a http.Request
*/
type DeleteAPIAccessTokenUsingDELETEParams struct {

	/*APIAccessTokenID
	  apiAccessTokenId

	*/
	APIAccessTokenID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteAPIAccessTokenUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) WithContext(ctx context.Context) *DeleteAPIAccessTokenUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteAPIAccessTokenUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIAccessTokenID adds the aPIAccessTokenID to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) WithAPIAccessTokenID(aPIAccessTokenID int64) *DeleteAPIAccessTokenUsingDELETEParams {
	o.SetAPIAccessTokenID(aPIAccessTokenID)
	return o
}

// SetAPIAccessTokenID adds the apiAccessTokenId to the delete Api access token using d e l e t e params
func (o *DeleteAPIAccessTokenUsingDELETEParams) SetAPIAccessTokenID(aPIAccessTokenID int64) {
	o.APIAccessTokenID = aPIAccessTokenID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPIAccessTokenUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param apiAccessTokenId
	if err := r.SetPathParam("apiAccessTokenId", swag.FormatInt64(o.APIAccessTokenID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
