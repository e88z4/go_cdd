// Code generated by go-swagger; DO NOT EDIT.

package email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// TryEmailNotificationTemplateUsingPOSTReader is a Reader for the TryEmailNotificationTemplateUsingPOST structure.
type TryEmailNotificationTemplateUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TryEmailNotificationTemplateUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTryEmailNotificationTemplateUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewTryEmailNotificationTemplateUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTryEmailNotificationTemplateUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTryEmailNotificationTemplateUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTryEmailNotificationTemplateUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTryEmailNotificationTemplateUsingPOSTOK creates a TryEmailNotificationTemplateUsingPOSTOK with default headers values
func NewTryEmailNotificationTemplateUsingPOSTOK() *TryEmailNotificationTemplateUsingPOSTOK {
	return &TryEmailNotificationTemplateUsingPOSTOK{}
}

/*TryEmailNotificationTemplateUsingPOSTOK handles this case with default header values.

OK
*/
type TryEmailNotificationTemplateUsingPOSTOK struct {
	Payload *models.EmailNotificationTemplateDto
}

func (o *TryEmailNotificationTemplateUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /email-notification-templates/{emailNotificationTemplateName}/{languageTag}/test-email][%d] tryEmailNotificationTemplateUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *TryEmailNotificationTemplateUsingPOSTOK) GetPayload() *models.EmailNotificationTemplateDto {
	return o.Payload
}

func (o *TryEmailNotificationTemplateUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EmailNotificationTemplateDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTryEmailNotificationTemplateUsingPOSTCreated creates a TryEmailNotificationTemplateUsingPOSTCreated with default headers values
func NewTryEmailNotificationTemplateUsingPOSTCreated() *TryEmailNotificationTemplateUsingPOSTCreated {
	return &TryEmailNotificationTemplateUsingPOSTCreated{}
}

/*TryEmailNotificationTemplateUsingPOSTCreated handles this case with default header values.

Created
*/
type TryEmailNotificationTemplateUsingPOSTCreated struct {
}

func (o *TryEmailNotificationTemplateUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /email-notification-templates/{emailNotificationTemplateName}/{languageTag}/test-email][%d] tryEmailNotificationTemplateUsingPOSTCreated ", 201)
}

func (o *TryEmailNotificationTemplateUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTryEmailNotificationTemplateUsingPOSTUnauthorized creates a TryEmailNotificationTemplateUsingPOSTUnauthorized with default headers values
func NewTryEmailNotificationTemplateUsingPOSTUnauthorized() *TryEmailNotificationTemplateUsingPOSTUnauthorized {
	return &TryEmailNotificationTemplateUsingPOSTUnauthorized{}
}

/*TryEmailNotificationTemplateUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type TryEmailNotificationTemplateUsingPOSTUnauthorized struct {
}

func (o *TryEmailNotificationTemplateUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /email-notification-templates/{emailNotificationTemplateName}/{languageTag}/test-email][%d] tryEmailNotificationTemplateUsingPOSTUnauthorized ", 401)
}

func (o *TryEmailNotificationTemplateUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTryEmailNotificationTemplateUsingPOSTForbidden creates a TryEmailNotificationTemplateUsingPOSTForbidden with default headers values
func NewTryEmailNotificationTemplateUsingPOSTForbidden() *TryEmailNotificationTemplateUsingPOSTForbidden {
	return &TryEmailNotificationTemplateUsingPOSTForbidden{}
}

/*TryEmailNotificationTemplateUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type TryEmailNotificationTemplateUsingPOSTForbidden struct {
}

func (o *TryEmailNotificationTemplateUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /email-notification-templates/{emailNotificationTemplateName}/{languageTag}/test-email][%d] tryEmailNotificationTemplateUsingPOSTForbidden ", 403)
}

func (o *TryEmailNotificationTemplateUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTryEmailNotificationTemplateUsingPOSTNotFound creates a TryEmailNotificationTemplateUsingPOSTNotFound with default headers values
func NewTryEmailNotificationTemplateUsingPOSTNotFound() *TryEmailNotificationTemplateUsingPOSTNotFound {
	return &TryEmailNotificationTemplateUsingPOSTNotFound{}
}

/*TryEmailNotificationTemplateUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type TryEmailNotificationTemplateUsingPOSTNotFound struct {
}

func (o *TryEmailNotificationTemplateUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /email-notification-templates/{emailNotificationTemplateName}/{languageTag}/test-email][%d] tryEmailNotificationTemplateUsingPOSTNotFound ", 404)
}

func (o *TryEmailNotificationTemplateUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
