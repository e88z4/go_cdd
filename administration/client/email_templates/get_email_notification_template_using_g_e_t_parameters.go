// Code generated by go-swagger; DO NOT EDIT.

package email_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetEmailNotificationTemplateUsingGETParams creates a new GetEmailNotificationTemplateUsingGETParams object
// with the default values initialized.
func NewGetEmailNotificationTemplateUsingGETParams() *GetEmailNotificationTemplateUsingGETParams {
	var ()
	return &GetEmailNotificationTemplateUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetEmailNotificationTemplateUsingGETParamsWithTimeout creates a new GetEmailNotificationTemplateUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetEmailNotificationTemplateUsingGETParamsWithTimeout(timeout time.Duration) *GetEmailNotificationTemplateUsingGETParams {
	var ()
	return &GetEmailNotificationTemplateUsingGETParams{

		timeout: timeout,
	}
}

// NewGetEmailNotificationTemplateUsingGETParamsWithContext creates a new GetEmailNotificationTemplateUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetEmailNotificationTemplateUsingGETParamsWithContext(ctx context.Context) *GetEmailNotificationTemplateUsingGETParams {
	var ()
	return &GetEmailNotificationTemplateUsingGETParams{

		Context: ctx,
	}
}

// NewGetEmailNotificationTemplateUsingGETParamsWithHTTPClient creates a new GetEmailNotificationTemplateUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetEmailNotificationTemplateUsingGETParamsWithHTTPClient(client *http.Client) *GetEmailNotificationTemplateUsingGETParams {
	var ()
	return &GetEmailNotificationTemplateUsingGETParams{
		HTTPClient: client,
	}
}

/*GetEmailNotificationTemplateUsingGETParams contains all the parameters to send to the API endpoint
for the get email notification template using g e t operation typically these are written to a http.Request
*/
type GetEmailNotificationTemplateUsingGETParams struct {

	/*EmailNotificationTemplateName
	  templateName

	*/
	EmailNotificationTemplateName string
	/*LanguageTag
	  language

	*/
	LanguageTag string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) WithTimeout(timeout time.Duration) *GetEmailNotificationTemplateUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) WithContext(ctx context.Context) *GetEmailNotificationTemplateUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) WithHTTPClient(client *http.Client) *GetEmailNotificationTemplateUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmailNotificationTemplateName adds the emailNotificationTemplateName to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) WithEmailNotificationTemplateName(emailNotificationTemplateName string) *GetEmailNotificationTemplateUsingGETParams {
	o.SetEmailNotificationTemplateName(emailNotificationTemplateName)
	return o
}

// SetEmailNotificationTemplateName adds the emailNotificationTemplateName to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) SetEmailNotificationTemplateName(emailNotificationTemplateName string) {
	o.EmailNotificationTemplateName = emailNotificationTemplateName
}

// WithLanguageTag adds the languageTag to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) WithLanguageTag(languageTag string) *GetEmailNotificationTemplateUsingGETParams {
	o.SetLanguageTag(languageTag)
	return o
}

// SetLanguageTag adds the languageTag to the get email notification template using g e t params
func (o *GetEmailNotificationTemplateUsingGETParams) SetLanguageTag(languageTag string) {
	o.LanguageTag = languageTag
}

// WriteToRequest writes these params to a swagger request
func (o *GetEmailNotificationTemplateUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param emailNotificationTemplateName
	if err := r.SetPathParam("emailNotificationTemplateName", o.EmailNotificationTemplateName); err != nil {
		return err
	}

	// path param languageTag
	if err := r.SetPathParam("languageTag", o.LanguageTag); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
