// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteRoleUsingDELETEReader is a Reader for the DeleteRoleUsingDELETE structure.
type DeleteRoleUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoleUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoleUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteRoleUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteRoleUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRoleUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRoleUsingDELETEOK creates a DeleteRoleUsingDELETEOK with default headers values
func NewDeleteRoleUsingDELETEOK() *DeleteRoleUsingDELETEOK {
	return &DeleteRoleUsingDELETEOK{}
}

/*DeleteRoleUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteRoleUsingDELETEOK struct {
}

func (o *DeleteRoleUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /roles/{roleId}][%d] deleteRoleUsingDELETEOK ", 200)
}

func (o *DeleteRoleUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleUsingDELETENoContent creates a DeleteRoleUsingDELETENoContent with default headers values
func NewDeleteRoleUsingDELETENoContent() *DeleteRoleUsingDELETENoContent {
	return &DeleteRoleUsingDELETENoContent{}
}

/*DeleteRoleUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteRoleUsingDELETENoContent struct {
}

func (o *DeleteRoleUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /roles/{roleId}][%d] deleteRoleUsingDELETENoContent ", 204)
}

func (o *DeleteRoleUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleUsingDELETEUnauthorized creates a DeleteRoleUsingDELETEUnauthorized with default headers values
func NewDeleteRoleUsingDELETEUnauthorized() *DeleteRoleUsingDELETEUnauthorized {
	return &DeleteRoleUsingDELETEUnauthorized{}
}

/*DeleteRoleUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteRoleUsingDELETEUnauthorized struct {
}

func (o *DeleteRoleUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /roles/{roleId}][%d] deleteRoleUsingDELETEUnauthorized ", 401)
}

func (o *DeleteRoleUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRoleUsingDELETEForbidden creates a DeleteRoleUsingDELETEForbidden with default headers values
func NewDeleteRoleUsingDELETEForbidden() *DeleteRoleUsingDELETEForbidden {
	return &DeleteRoleUsingDELETEForbidden{}
}

/*DeleteRoleUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteRoleUsingDELETEForbidden struct {
}

func (o *DeleteRoleUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /roles/{roleId}][%d] deleteRoleUsingDELETEForbidden ", 403)
}

func (o *DeleteRoleUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
