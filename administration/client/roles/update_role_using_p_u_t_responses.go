// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateRoleUsingPUTReader is a Reader for the UpdateRoleUsingPUT structure.
type UpdateRoleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateRoleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateRoleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRoleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateRoleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateRoleUsingPUTOK creates a UpdateRoleUsingPUTOK with default headers values
func NewUpdateRoleUsingPUTOK() *UpdateRoleUsingPUTOK {
	return &UpdateRoleUsingPUTOK{}
}

/*UpdateRoleUsingPUTOK handles this case with default header values.

OK
*/
type UpdateRoleUsingPUTOK struct {
	Payload *models.RoleDto
}

func (o *UpdateRoleUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /roles/{roleId}][%d] updateRoleUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateRoleUsingPUTOK) GetPayload() *models.RoleDto {
	return o.Payload
}

func (o *UpdateRoleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoleUsingPUTCreated creates a UpdateRoleUsingPUTCreated with default headers values
func NewUpdateRoleUsingPUTCreated() *UpdateRoleUsingPUTCreated {
	return &UpdateRoleUsingPUTCreated{}
}

/*UpdateRoleUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateRoleUsingPUTCreated struct {
}

func (o *UpdateRoleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /roles/{roleId}][%d] updateRoleUsingPUTCreated ", 201)
}

func (o *UpdateRoleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleUsingPUTUnauthorized creates a UpdateRoleUsingPUTUnauthorized with default headers values
func NewUpdateRoleUsingPUTUnauthorized() *UpdateRoleUsingPUTUnauthorized {
	return &UpdateRoleUsingPUTUnauthorized{}
}

/*UpdateRoleUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRoleUsingPUTUnauthorized struct {
}

func (o *UpdateRoleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /roles/{roleId}][%d] updateRoleUsingPUTUnauthorized ", 401)
}

func (o *UpdateRoleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleUsingPUTForbidden creates a UpdateRoleUsingPUTForbidden with default headers values
func NewUpdateRoleUsingPUTForbidden() *UpdateRoleUsingPUTForbidden {
	return &UpdateRoleUsingPUTForbidden{}
}

/*UpdateRoleUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateRoleUsingPUTForbidden struct {
}

func (o *UpdateRoleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /roles/{roleId}][%d] updateRoleUsingPUTForbidden ", 403)
}

func (o *UpdateRoleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoleUsingPUTNotFound creates a UpdateRoleUsingPUTNotFound with default headers values
func NewUpdateRoleUsingPUTNotFound() *UpdateRoleUsingPUTNotFound {
	return &UpdateRoleUsingPUTNotFound{}
}

/*UpdateRoleUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateRoleUsingPUTNotFound struct {
}

func (o *UpdateRoleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /roles/{roleId}][%d] updateRoleUsingPUTNotFound ", 404)
}

func (o *UpdateRoleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
