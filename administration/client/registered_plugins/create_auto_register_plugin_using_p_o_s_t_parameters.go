// Code generated by go-swagger; DO NOT EDIT.

package registered_plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewCreateAutoRegisterPluginUsingPOSTParams creates a new CreateAutoRegisterPluginUsingPOSTParams object
// with the default values initialized.
func NewCreateAutoRegisterPluginUsingPOSTParams() *CreateAutoRegisterPluginUsingPOSTParams {
	var ()
	return &CreateAutoRegisterPluginUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateAutoRegisterPluginUsingPOSTParamsWithTimeout creates a new CreateAutoRegisterPluginUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateAutoRegisterPluginUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateAutoRegisterPluginUsingPOSTParams {
	var ()
	return &CreateAutoRegisterPluginUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateAutoRegisterPluginUsingPOSTParamsWithContext creates a new CreateAutoRegisterPluginUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateAutoRegisterPluginUsingPOSTParamsWithContext(ctx context.Context) *CreateAutoRegisterPluginUsingPOSTParams {
	var ()
	return &CreateAutoRegisterPluginUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateAutoRegisterPluginUsingPOSTParamsWithHTTPClient creates a new CreateAutoRegisterPluginUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateAutoRegisterPluginUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateAutoRegisterPluginUsingPOSTParams {
	var ()
	return &CreateAutoRegisterPluginUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateAutoRegisterPluginUsingPOSTParams contains all the parameters to send to the API endpoint
for the create auto register plugin using p o s t operation typically these are written to a http.Request
*/
type CreateAutoRegisterPluginUsingPOSTParams struct {

	/*RegisteredPluginDto
	  registeredPluginDto

	*/
	RegisteredPluginDto *models.RegisteredPluginDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateAutoRegisterPluginUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) WithContext(ctx context.Context) *CreateAutoRegisterPluginUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateAutoRegisterPluginUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRegisteredPluginDto adds the registeredPluginDto to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) WithRegisteredPluginDto(registeredPluginDto *models.RegisteredPluginDto) *CreateAutoRegisterPluginUsingPOSTParams {
	o.SetRegisteredPluginDto(registeredPluginDto)
	return o
}

// SetRegisteredPluginDto adds the registeredPluginDto to the create auto register plugin using p o s t params
func (o *CreateAutoRegisterPluginUsingPOSTParams) SetRegisteredPluginDto(registeredPluginDto *models.RegisteredPluginDto) {
	o.RegisteredPluginDto = registeredPluginDto
}

// WriteToRequest writes these params to a swagger request
func (o *CreateAutoRegisterPluginUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RegisteredPluginDto != nil {
		if err := r.SetBodyParam(o.RegisteredPluginDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
