// Code generated by go-swagger; DO NOT EDIT.

package dsl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewImportEntitiesUsingPOST1Params creates a new ImportEntitiesUsingPOST1Params object
// with the default values initialized.
func NewImportEntitiesUsingPOST1Params() *ImportEntitiesUsingPOST1Params {
	var ()
	return &ImportEntitiesUsingPOST1Params{

		timeout: cr.DefaultTimeout,
	}
}

// NewImportEntitiesUsingPOST1ParamsWithTimeout creates a new ImportEntitiesUsingPOST1Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewImportEntitiesUsingPOST1ParamsWithTimeout(timeout time.Duration) *ImportEntitiesUsingPOST1Params {
	var ()
	return &ImportEntitiesUsingPOST1Params{

		timeout: timeout,
	}
}

// NewImportEntitiesUsingPOST1ParamsWithContext creates a new ImportEntitiesUsingPOST1Params object
// with the default values initialized, and the ability to set a context for a request
func NewImportEntitiesUsingPOST1ParamsWithContext(ctx context.Context) *ImportEntitiesUsingPOST1Params {
	var ()
	return &ImportEntitiesUsingPOST1Params{

		Context: ctx,
	}
}

// NewImportEntitiesUsingPOST1ParamsWithHTTPClient creates a new ImportEntitiesUsingPOST1Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewImportEntitiesUsingPOST1ParamsWithHTTPClient(client *http.Client) *ImportEntitiesUsingPOST1Params {
	var ()
	return &ImportEntitiesUsingPOST1Params{
		HTTPClient: client,
	}
}

/*ImportEntitiesUsingPOST1Params contains all the parameters to send to the API endpoint
for the import entities using p o s t 1 operation typically these are written to a http.Request
*/
type ImportEntitiesUsingPOST1Params struct {

	/*DslEntities
	  dslEntities

	*/
	DslEntities *models.DslTemplateDto
	/*Kind
	  availableKinds

	*/
	Kind []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) WithTimeout(timeout time.Duration) *ImportEntitiesUsingPOST1Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) WithContext(ctx context.Context) *ImportEntitiesUsingPOST1Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) WithHTTPClient(client *http.Client) *ImportEntitiesUsingPOST1Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDslEntities adds the dslEntities to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) WithDslEntities(dslEntities *models.DslTemplateDto) *ImportEntitiesUsingPOST1Params {
	o.SetDslEntities(dslEntities)
	return o
}

// SetDslEntities adds the dslEntities to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) SetDslEntities(dslEntities *models.DslTemplateDto) {
	o.DslEntities = dslEntities
}

// WithKind adds the kind to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) WithKind(kind []string) *ImportEntitiesUsingPOST1Params {
	o.SetKind(kind)
	return o
}

// SetKind adds the kind to the import entities using p o s t 1 params
func (o *ImportEntitiesUsingPOST1Params) SetKind(kind []string) {
	o.Kind = kind
}

// WriteToRequest writes these params to a swagger request
func (o *ImportEntitiesUsingPOST1Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DslEntities != nil {
		if err := r.SetBodyParam(o.DslEntities); err != nil {
			return err
		}
	}

	valuesKind := o.Kind

	joinedKind := swag.JoinByFormat(valuesKind, "multi")
	// query array param kind
	if err := r.SetQueryParam("kind", joinedKind...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
