// Code generated by go-swagger; DO NOT EDIT.

package dsl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// ExportTestSourcesUsingGETReader is a Reader for the ExportTestSourcesUsingGET structure.
type ExportTestSourcesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportTestSourcesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportTestSourcesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportTestSourcesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportTestSourcesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportTestSourcesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportTestSourcesUsingGETOK creates a ExportTestSourcesUsingGETOK with default headers values
func NewExportTestSourcesUsingGETOK() *ExportTestSourcesUsingGETOK {
	return &ExportTestSourcesUsingGETOK{}
}

/*ExportTestSourcesUsingGETOK handles this case with default header values.

OK
*/
type ExportTestSourcesUsingGETOK struct {
	Payload *models.DslTemplateDto
}

func (o *ExportTestSourcesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/dsl-manifest][%d] exportTestSourcesUsingGETOK  %+v", 200, o.Payload)
}

func (o *ExportTestSourcesUsingGETOK) GetPayload() *models.DslTemplateDto {
	return o.Payload
}

func (o *ExportTestSourcesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DslTemplateDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTestSourcesUsingGETUnauthorized creates a ExportTestSourcesUsingGETUnauthorized with default headers values
func NewExportTestSourcesUsingGETUnauthorized() *ExportTestSourcesUsingGETUnauthorized {
	return &ExportTestSourcesUsingGETUnauthorized{}
}

/*ExportTestSourcesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type ExportTestSourcesUsingGETUnauthorized struct {
}

func (o *ExportTestSourcesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/dsl-manifest][%d] exportTestSourcesUsingGETUnauthorized ", 401)
}

func (o *ExportTestSourcesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportTestSourcesUsingGETForbidden creates a ExportTestSourcesUsingGETForbidden with default headers values
func NewExportTestSourcesUsingGETForbidden() *ExportTestSourcesUsingGETForbidden {
	return &ExportTestSourcesUsingGETForbidden{}
}

/*ExportTestSourcesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ExportTestSourcesUsingGETForbidden struct {
}

func (o *ExportTestSourcesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/dsl-manifest][%d] exportTestSourcesUsingGETForbidden ", 403)
}

func (o *ExportTestSourcesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportTestSourcesUsingGETNotFound creates a ExportTestSourcesUsingGETNotFound with default headers values
func NewExportTestSourcesUsingGETNotFound() *ExportTestSourcesUsingGETNotFound {
	return &ExportTestSourcesUsingGETNotFound{}
}

/*ExportTestSourcesUsingGETNotFound handles this case with default header values.

Not Found
*/
type ExportTestSourcesUsingGETNotFound struct {
}

func (o *ExportTestSourcesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/dsl-manifest][%d] exportTestSourcesUsingGETNotFound ", 404)
}

func (o *ExportTestSourcesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
