// Code generated by go-swagger; DO NOT EDIT.

package dsl

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// ExportTestSourceUsingGETReader is a Reader for the ExportTestSourceUsingGET structure.
type ExportTestSourceUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportTestSourceUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportTestSourceUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExportTestSourceUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportTestSourceUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportTestSourceUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExportTestSourceUsingGETOK creates a ExportTestSourceUsingGETOK with default headers values
func NewExportTestSourceUsingGETOK() *ExportTestSourceUsingGETOK {
	return &ExportTestSourceUsingGETOK{}
}

/*ExportTestSourceUsingGETOK handles this case with default header values.

OK
*/
type ExportTestSourceUsingGETOK struct {
	Payload *models.DslTemplateDto
}

func (o *ExportTestSourceUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/{testSourceId}/dsl-manifest][%d] exportTestSourceUsingGETOK  %+v", 200, o.Payload)
}

func (o *ExportTestSourceUsingGETOK) GetPayload() *models.DslTemplateDto {
	return o.Payload
}

func (o *ExportTestSourceUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DslTemplateDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTestSourceUsingGETUnauthorized creates a ExportTestSourceUsingGETUnauthorized with default headers values
func NewExportTestSourceUsingGETUnauthorized() *ExportTestSourceUsingGETUnauthorized {
	return &ExportTestSourceUsingGETUnauthorized{}
}

/*ExportTestSourceUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type ExportTestSourceUsingGETUnauthorized struct {
}

func (o *ExportTestSourceUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/{testSourceId}/dsl-manifest][%d] exportTestSourceUsingGETUnauthorized ", 401)
}

func (o *ExportTestSourceUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportTestSourceUsingGETForbidden creates a ExportTestSourceUsingGETForbidden with default headers values
func NewExportTestSourceUsingGETForbidden() *ExportTestSourceUsingGETForbidden {
	return &ExportTestSourceUsingGETForbidden{}
}

/*ExportTestSourceUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ExportTestSourceUsingGETForbidden struct {
}

func (o *ExportTestSourceUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/{testSourceId}/dsl-manifest][%d] exportTestSourceUsingGETForbidden ", 403)
}

func (o *ExportTestSourceUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportTestSourceUsingGETNotFound creates a ExportTestSourceUsingGETNotFound with default headers values
func NewExportTestSourceUsingGETNotFound() *ExportTestSourceUsingGETNotFound {
	return &ExportTestSourceUsingGETNotFound{}
}

/*ExportTestSourceUsingGETNotFound handles this case with default header values.

Not Found
*/
type ExportTestSourceUsingGETNotFound struct {
}

func (o *ExportTestSourceUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-sources/{testSourceId}/dsl-manifest][%d] exportTestSourceUsingGETNotFound ", 404)
}

func (o *ExportTestSourceUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
