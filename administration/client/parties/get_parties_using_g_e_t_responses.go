// Code generated by go-swagger; DO NOT EDIT.

package parties

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetPartiesUsingGETReader is a Reader for the GetPartiesUsingGET structure.
type GetPartiesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPartiesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPartiesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPartiesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPartiesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPartiesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPartiesUsingGETOK creates a GetPartiesUsingGETOK with default headers values
func NewGetPartiesUsingGETOK() *GetPartiesUsingGETOK {
	return &GetPartiesUsingGETOK{}
}

/*GetPartiesUsingGETOK handles this case with default header values.

OK
*/
type GetPartiesUsingGETOK struct {
	Payload *models.PagedResultDtoPartyDto
}

func (o *GetPartiesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /parties][%d] getPartiesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetPartiesUsingGETOK) GetPayload() *models.PagedResultDtoPartyDto {
	return o.Payload
}

func (o *GetPartiesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoPartyDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartiesUsingGETUnauthorized creates a GetPartiesUsingGETUnauthorized with default headers values
func NewGetPartiesUsingGETUnauthorized() *GetPartiesUsingGETUnauthorized {
	return &GetPartiesUsingGETUnauthorized{}
}

/*GetPartiesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPartiesUsingGETUnauthorized struct {
}

func (o *GetPartiesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /parties][%d] getPartiesUsingGETUnauthorized ", 401)
}

func (o *GetPartiesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartiesUsingGETForbidden creates a GetPartiesUsingGETForbidden with default headers values
func NewGetPartiesUsingGETForbidden() *GetPartiesUsingGETForbidden {
	return &GetPartiesUsingGETForbidden{}
}

/*GetPartiesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetPartiesUsingGETForbidden struct {
}

func (o *GetPartiesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /parties][%d] getPartiesUsingGETForbidden ", 403)
}

func (o *GetPartiesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartiesUsingGETNotFound creates a GetPartiesUsingGETNotFound with default headers values
func NewGetPartiesUsingGETNotFound() *GetPartiesUsingGETNotFound {
	return &GetPartiesUsingGETNotFound{}
}

/*GetPartiesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetPartiesUsingGETNotFound struct {
}

func (o *GetPartiesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /parties][%d] getPartiesUsingGETNotFound ", 404)
}

func (o *GetPartiesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
