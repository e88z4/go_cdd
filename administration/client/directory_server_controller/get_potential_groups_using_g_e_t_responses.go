// Code generated by go-swagger; DO NOT EDIT.

package directory_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetPotentialGroupsUsingGETReader is a Reader for the GetPotentialGroupsUsingGET structure.
type GetPotentialGroupsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPotentialGroupsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPotentialGroupsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPotentialGroupsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPotentialGroupsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPotentialGroupsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPotentialGroupsUsingGETOK creates a GetPotentialGroupsUsingGETOK with default headers values
func NewGetPotentialGroupsUsingGETOK() *GetPotentialGroupsUsingGETOK {
	return &GetPotentialGroupsUsingGETOK{}
}

/*GetPotentialGroupsUsingGETOK handles this case with default header values.

OK
*/
type GetPotentialGroupsUsingGETOK struct {
	Payload *models.ListHolderDtoUserGroupDto
}

func (o *GetPotentialGroupsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /directory-user-groups][%d] getPotentialGroupsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetPotentialGroupsUsingGETOK) GetPayload() *models.ListHolderDtoUserGroupDto {
	return o.Payload
}

func (o *GetPotentialGroupsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListHolderDtoUserGroupDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPotentialGroupsUsingGETUnauthorized creates a GetPotentialGroupsUsingGETUnauthorized with default headers values
func NewGetPotentialGroupsUsingGETUnauthorized() *GetPotentialGroupsUsingGETUnauthorized {
	return &GetPotentialGroupsUsingGETUnauthorized{}
}

/*GetPotentialGroupsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPotentialGroupsUsingGETUnauthorized struct {
}

func (o *GetPotentialGroupsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /directory-user-groups][%d] getPotentialGroupsUsingGETUnauthorized ", 401)
}

func (o *GetPotentialGroupsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPotentialGroupsUsingGETForbidden creates a GetPotentialGroupsUsingGETForbidden with default headers values
func NewGetPotentialGroupsUsingGETForbidden() *GetPotentialGroupsUsingGETForbidden {
	return &GetPotentialGroupsUsingGETForbidden{}
}

/*GetPotentialGroupsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetPotentialGroupsUsingGETForbidden struct {
}

func (o *GetPotentialGroupsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /directory-user-groups][%d] getPotentialGroupsUsingGETForbidden ", 403)
}

func (o *GetPotentialGroupsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPotentialGroupsUsingGETNotFound creates a GetPotentialGroupsUsingGETNotFound with default headers values
func NewGetPotentialGroupsUsingGETNotFound() *GetPotentialGroupsUsingGETNotFound {
	return &GetPotentialGroupsUsingGETNotFound{}
}

/*GetPotentialGroupsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetPotentialGroupsUsingGETNotFound struct {
}

func (o *GetPotentialGroupsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /directory-user-groups][%d] getPotentialGroupsUsingGETNotFound ", 404)
}

func (o *GetPotentialGroupsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
