// Code generated by go-swagger; DO NOT EDIT.

package directory_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// CreateDirectoryServerUsingPOSTReader is a Reader for the CreateDirectoryServerUsingPOST structure.
type CreateDirectoryServerUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDirectoryServerUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDirectoryServerUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateDirectoryServerUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateDirectoryServerUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDirectoryServerUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDirectoryServerUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateDirectoryServerUsingPOSTOK creates a CreateDirectoryServerUsingPOSTOK with default headers values
func NewCreateDirectoryServerUsingPOSTOK() *CreateDirectoryServerUsingPOSTOK {
	return &CreateDirectoryServerUsingPOSTOK{}
}

/*CreateDirectoryServerUsingPOSTOK handles this case with default header values.

OK
*/
type CreateDirectoryServerUsingPOSTOK struct {
	Payload *models.DirectoryServerDto
}

func (o *CreateDirectoryServerUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /directory-servers][%d] createDirectoryServerUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateDirectoryServerUsingPOSTOK) GetPayload() *models.DirectoryServerDto {
	return o.Payload
}

func (o *CreateDirectoryServerUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDirectoryServerUsingPOSTCreated creates a CreateDirectoryServerUsingPOSTCreated with default headers values
func NewCreateDirectoryServerUsingPOSTCreated() *CreateDirectoryServerUsingPOSTCreated {
	return &CreateDirectoryServerUsingPOSTCreated{}
}

/*CreateDirectoryServerUsingPOSTCreated handles this case with default header values.

Created
*/
type CreateDirectoryServerUsingPOSTCreated struct {
}

func (o *CreateDirectoryServerUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /directory-servers][%d] createDirectoryServerUsingPOSTCreated ", 201)
}

func (o *CreateDirectoryServerUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDirectoryServerUsingPOSTUnauthorized creates a CreateDirectoryServerUsingPOSTUnauthorized with default headers values
func NewCreateDirectoryServerUsingPOSTUnauthorized() *CreateDirectoryServerUsingPOSTUnauthorized {
	return &CreateDirectoryServerUsingPOSTUnauthorized{}
}

/*CreateDirectoryServerUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateDirectoryServerUsingPOSTUnauthorized struct {
}

func (o *CreateDirectoryServerUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /directory-servers][%d] createDirectoryServerUsingPOSTUnauthorized ", 401)
}

func (o *CreateDirectoryServerUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDirectoryServerUsingPOSTForbidden creates a CreateDirectoryServerUsingPOSTForbidden with default headers values
func NewCreateDirectoryServerUsingPOSTForbidden() *CreateDirectoryServerUsingPOSTForbidden {
	return &CreateDirectoryServerUsingPOSTForbidden{}
}

/*CreateDirectoryServerUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateDirectoryServerUsingPOSTForbidden struct {
}

func (o *CreateDirectoryServerUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /directory-servers][%d] createDirectoryServerUsingPOSTForbidden ", 403)
}

func (o *CreateDirectoryServerUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDirectoryServerUsingPOSTNotFound creates a CreateDirectoryServerUsingPOSTNotFound with default headers values
func NewCreateDirectoryServerUsingPOSTNotFound() *CreateDirectoryServerUsingPOSTNotFound {
	return &CreateDirectoryServerUsingPOSTNotFound{}
}

/*CreateDirectoryServerUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateDirectoryServerUsingPOSTNotFound struct {
}

func (o *CreateDirectoryServerUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /directory-servers][%d] createDirectoryServerUsingPOSTNotFound ", 404)
}

func (o *CreateDirectoryServerUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
