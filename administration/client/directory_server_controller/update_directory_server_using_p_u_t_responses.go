// Code generated by go-swagger; DO NOT EDIT.

package directory_server_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateDirectoryServerUsingPUTReader is a Reader for the UpdateDirectoryServerUsingPUT structure.
type UpdateDirectoryServerUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDirectoryServerUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDirectoryServerUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateDirectoryServerUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateDirectoryServerUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateDirectoryServerUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDirectoryServerUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateDirectoryServerUsingPUTOK creates a UpdateDirectoryServerUsingPUTOK with default headers values
func NewUpdateDirectoryServerUsingPUTOK() *UpdateDirectoryServerUsingPUTOK {
	return &UpdateDirectoryServerUsingPUTOK{}
}

/*UpdateDirectoryServerUsingPUTOK handles this case with default header values.

OK
*/
type UpdateDirectoryServerUsingPUTOK struct {
	Payload *models.DirectoryServerDto
}

func (o *UpdateDirectoryServerUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /directory-servers/{directoryServerId}][%d] updateDirectoryServerUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateDirectoryServerUsingPUTOK) GetPayload() *models.DirectoryServerDto {
	return o.Payload
}

func (o *UpdateDirectoryServerUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DirectoryServerDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDirectoryServerUsingPUTCreated creates a UpdateDirectoryServerUsingPUTCreated with default headers values
func NewUpdateDirectoryServerUsingPUTCreated() *UpdateDirectoryServerUsingPUTCreated {
	return &UpdateDirectoryServerUsingPUTCreated{}
}

/*UpdateDirectoryServerUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateDirectoryServerUsingPUTCreated struct {
}

func (o *UpdateDirectoryServerUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /directory-servers/{directoryServerId}][%d] updateDirectoryServerUsingPUTCreated ", 201)
}

func (o *UpdateDirectoryServerUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDirectoryServerUsingPUTUnauthorized creates a UpdateDirectoryServerUsingPUTUnauthorized with default headers values
func NewUpdateDirectoryServerUsingPUTUnauthorized() *UpdateDirectoryServerUsingPUTUnauthorized {
	return &UpdateDirectoryServerUsingPUTUnauthorized{}
}

/*UpdateDirectoryServerUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateDirectoryServerUsingPUTUnauthorized struct {
}

func (o *UpdateDirectoryServerUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /directory-servers/{directoryServerId}][%d] updateDirectoryServerUsingPUTUnauthorized ", 401)
}

func (o *UpdateDirectoryServerUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDirectoryServerUsingPUTForbidden creates a UpdateDirectoryServerUsingPUTForbidden with default headers values
func NewUpdateDirectoryServerUsingPUTForbidden() *UpdateDirectoryServerUsingPUTForbidden {
	return &UpdateDirectoryServerUsingPUTForbidden{}
}

/*UpdateDirectoryServerUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateDirectoryServerUsingPUTForbidden struct {
}

func (o *UpdateDirectoryServerUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /directory-servers/{directoryServerId}][%d] updateDirectoryServerUsingPUTForbidden ", 403)
}

func (o *UpdateDirectoryServerUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDirectoryServerUsingPUTNotFound creates a UpdateDirectoryServerUsingPUTNotFound with default headers values
func NewUpdateDirectoryServerUsingPUTNotFound() *UpdateDirectoryServerUsingPUTNotFound {
	return &UpdateDirectoryServerUsingPUTNotFound{}
}

/*UpdateDirectoryServerUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateDirectoryServerUsingPUTNotFound struct {
}

func (o *UpdateDirectoryServerUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /directory-servers/{directoryServerId}][%d] updateDirectoryServerUsingPUTNotFound ", 404)
}

func (o *UpdateDirectoryServerUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
