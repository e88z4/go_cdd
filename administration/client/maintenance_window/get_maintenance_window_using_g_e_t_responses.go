// Code generated by go-swagger; DO NOT EDIT.

package maintenance_window

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetMaintenanceWindowUsingGETReader is a Reader for the GetMaintenanceWindowUsingGET structure.
type GetMaintenanceWindowUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMaintenanceWindowUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMaintenanceWindowUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMaintenanceWindowUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMaintenanceWindowUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMaintenanceWindowUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMaintenanceWindowUsingGETOK creates a GetMaintenanceWindowUsingGETOK with default headers values
func NewGetMaintenanceWindowUsingGETOK() *GetMaintenanceWindowUsingGETOK {
	return &GetMaintenanceWindowUsingGETOK{}
}

/*GetMaintenanceWindowUsingGETOK handles this case with default header values.

OK
*/
type GetMaintenanceWindowUsingGETOK struct {
	Payload *models.MaintenanceWindowDto
}

func (o *GetMaintenanceWindowUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /maintenance-windows/{maintenanceWindowId}][%d] getMaintenanceWindowUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetMaintenanceWindowUsingGETOK) GetPayload() *models.MaintenanceWindowDto {
	return o.Payload
}

func (o *GetMaintenanceWindowUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceWindowDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMaintenanceWindowUsingGETUnauthorized creates a GetMaintenanceWindowUsingGETUnauthorized with default headers values
func NewGetMaintenanceWindowUsingGETUnauthorized() *GetMaintenanceWindowUsingGETUnauthorized {
	return &GetMaintenanceWindowUsingGETUnauthorized{}
}

/*GetMaintenanceWindowUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetMaintenanceWindowUsingGETUnauthorized struct {
}

func (o *GetMaintenanceWindowUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /maintenance-windows/{maintenanceWindowId}][%d] getMaintenanceWindowUsingGETUnauthorized ", 401)
}

func (o *GetMaintenanceWindowUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaintenanceWindowUsingGETForbidden creates a GetMaintenanceWindowUsingGETForbidden with default headers values
func NewGetMaintenanceWindowUsingGETForbidden() *GetMaintenanceWindowUsingGETForbidden {
	return &GetMaintenanceWindowUsingGETForbidden{}
}

/*GetMaintenanceWindowUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetMaintenanceWindowUsingGETForbidden struct {
}

func (o *GetMaintenanceWindowUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /maintenance-windows/{maintenanceWindowId}][%d] getMaintenanceWindowUsingGETForbidden ", 403)
}

func (o *GetMaintenanceWindowUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMaintenanceWindowUsingGETNotFound creates a GetMaintenanceWindowUsingGETNotFound with default headers values
func NewGetMaintenanceWindowUsingGETNotFound() *GetMaintenanceWindowUsingGETNotFound {
	return &GetMaintenanceWindowUsingGETNotFound{}
}

/*GetMaintenanceWindowUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetMaintenanceWindowUsingGETNotFound struct {
}

func (o *GetMaintenanceWindowUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /maintenance-windows/{maintenanceWindowId}][%d] getMaintenanceWindowUsingGETNotFound ", 404)
}

func (o *GetMaintenanceWindowUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
