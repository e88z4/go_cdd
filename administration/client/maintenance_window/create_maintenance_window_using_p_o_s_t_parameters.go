// Code generated by go-swagger; DO NOT EDIT.

package maintenance_window

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewCreateMaintenanceWindowUsingPOSTParams creates a new CreateMaintenanceWindowUsingPOSTParams object
// with the default values initialized.
func NewCreateMaintenanceWindowUsingPOSTParams() *CreateMaintenanceWindowUsingPOSTParams {
	var ()
	return &CreateMaintenanceWindowUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateMaintenanceWindowUsingPOSTParamsWithTimeout creates a new CreateMaintenanceWindowUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateMaintenanceWindowUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateMaintenanceWindowUsingPOSTParams {
	var ()
	return &CreateMaintenanceWindowUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateMaintenanceWindowUsingPOSTParamsWithContext creates a new CreateMaintenanceWindowUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateMaintenanceWindowUsingPOSTParamsWithContext(ctx context.Context) *CreateMaintenanceWindowUsingPOSTParams {
	var ()
	return &CreateMaintenanceWindowUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateMaintenanceWindowUsingPOSTParamsWithHTTPClient creates a new CreateMaintenanceWindowUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateMaintenanceWindowUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateMaintenanceWindowUsingPOSTParams {
	var ()
	return &CreateMaintenanceWindowUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateMaintenanceWindowUsingPOSTParams contains all the parameters to send to the API endpoint
for the create maintenance window using p o s t operation typically these are written to a http.Request
*/
type CreateMaintenanceWindowUsingPOSTParams struct {

	/*MaintenanceWindowDto
	  maintenanceWindowDto

	*/
	MaintenanceWindowDto *models.MaintenanceWindowDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateMaintenanceWindowUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) WithContext(ctx context.Context) *CreateMaintenanceWindowUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateMaintenanceWindowUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMaintenanceWindowDto adds the maintenanceWindowDto to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) WithMaintenanceWindowDto(maintenanceWindowDto *models.MaintenanceWindowDto) *CreateMaintenanceWindowUsingPOSTParams {
	o.SetMaintenanceWindowDto(maintenanceWindowDto)
	return o
}

// SetMaintenanceWindowDto adds the maintenanceWindowDto to the create maintenance window using p o s t params
func (o *CreateMaintenanceWindowUsingPOSTParams) SetMaintenanceWindowDto(maintenanceWindowDto *models.MaintenanceWindowDto) {
	o.MaintenanceWindowDto = maintenanceWindowDto
}

// WriteToRequest writes these params to a swagger request
func (o *CreateMaintenanceWindowUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MaintenanceWindowDto != nil {
		if err := r.SetBodyParam(o.MaintenanceWindowDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
