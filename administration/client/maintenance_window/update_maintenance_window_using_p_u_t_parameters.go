// Code generated by go-swagger; DO NOT EDIT.

package maintenance_window

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewUpdateMaintenanceWindowUsingPUTParams creates a new UpdateMaintenanceWindowUsingPUTParams object
// with the default values initialized.
func NewUpdateMaintenanceWindowUsingPUTParams() *UpdateMaintenanceWindowUsingPUTParams {
	var ()
	return &UpdateMaintenanceWindowUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateMaintenanceWindowUsingPUTParamsWithTimeout creates a new UpdateMaintenanceWindowUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateMaintenanceWindowUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateMaintenanceWindowUsingPUTParams {
	var ()
	return &UpdateMaintenanceWindowUsingPUTParams{

		timeout: timeout,
	}
}

// NewUpdateMaintenanceWindowUsingPUTParamsWithContext creates a new UpdateMaintenanceWindowUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateMaintenanceWindowUsingPUTParamsWithContext(ctx context.Context) *UpdateMaintenanceWindowUsingPUTParams {
	var ()
	return &UpdateMaintenanceWindowUsingPUTParams{

		Context: ctx,
	}
}

// NewUpdateMaintenanceWindowUsingPUTParamsWithHTTPClient creates a new UpdateMaintenanceWindowUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateMaintenanceWindowUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateMaintenanceWindowUsingPUTParams {
	var ()
	return &UpdateMaintenanceWindowUsingPUTParams{
		HTTPClient: client,
	}
}

/*UpdateMaintenanceWindowUsingPUTParams contains all the parameters to send to the API endpoint
for the update maintenance window using p u t operation typically these are written to a http.Request
*/
type UpdateMaintenanceWindowUsingPUTParams struct {

	/*MaintenanceWindowDto
	  maintenanceWindowDto

	*/
	MaintenanceWindowDto *models.MaintenanceWindowDto
	/*MaintenanceWindowID
	  maintenanceWindowId

	*/
	MaintenanceWindowID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateMaintenanceWindowUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) WithContext(ctx context.Context) *UpdateMaintenanceWindowUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateMaintenanceWindowUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMaintenanceWindowDto adds the maintenanceWindowDto to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) WithMaintenanceWindowDto(maintenanceWindowDto *models.MaintenanceWindowDto) *UpdateMaintenanceWindowUsingPUTParams {
	o.SetMaintenanceWindowDto(maintenanceWindowDto)
	return o
}

// SetMaintenanceWindowDto adds the maintenanceWindowDto to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) SetMaintenanceWindowDto(maintenanceWindowDto *models.MaintenanceWindowDto) {
	o.MaintenanceWindowDto = maintenanceWindowDto
}

// WithMaintenanceWindowID adds the maintenanceWindowID to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) WithMaintenanceWindowID(maintenanceWindowID int64) *UpdateMaintenanceWindowUsingPUTParams {
	o.SetMaintenanceWindowID(maintenanceWindowID)
	return o
}

// SetMaintenanceWindowID adds the maintenanceWindowId to the update maintenance window using p u t params
func (o *UpdateMaintenanceWindowUsingPUTParams) SetMaintenanceWindowID(maintenanceWindowID int64) {
	o.MaintenanceWindowID = maintenanceWindowID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateMaintenanceWindowUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MaintenanceWindowDto != nil {
		if err := r.SetBodyParam(o.MaintenanceWindowDto); err != nil {
			return err
		}
	}

	// path param maintenanceWindowId
	if err := r.SetPathParam("maintenanceWindowId", swag.FormatInt64(o.MaintenanceWindowID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
