// Code generated by go-swagger; DO NOT EDIT.

package maintenance_window

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// PatchMaintenanceWindowUsingPATCHReader is a Reader for the PatchMaintenanceWindowUsingPATCH structure.
type PatchMaintenanceWindowUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchMaintenanceWindowUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchMaintenanceWindowUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchMaintenanceWindowUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchMaintenanceWindowUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchMaintenanceWindowUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchMaintenanceWindowUsingPATCHOK creates a PatchMaintenanceWindowUsingPATCHOK with default headers values
func NewPatchMaintenanceWindowUsingPATCHOK() *PatchMaintenanceWindowUsingPATCHOK {
	return &PatchMaintenanceWindowUsingPATCHOK{}
}

/*PatchMaintenanceWindowUsingPATCHOK handles this case with default header values.

OK
*/
type PatchMaintenanceWindowUsingPATCHOK struct {
	Payload *models.MaintenanceWindowDto
}

func (o *PatchMaintenanceWindowUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /maintenance-windows/{maintenanceWindowId}][%d] patchMaintenanceWindowUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PatchMaintenanceWindowUsingPATCHOK) GetPayload() *models.MaintenanceWindowDto {
	return o.Payload
}

func (o *PatchMaintenanceWindowUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceWindowDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchMaintenanceWindowUsingPATCHNoContent creates a PatchMaintenanceWindowUsingPATCHNoContent with default headers values
func NewPatchMaintenanceWindowUsingPATCHNoContent() *PatchMaintenanceWindowUsingPATCHNoContent {
	return &PatchMaintenanceWindowUsingPATCHNoContent{}
}

/*PatchMaintenanceWindowUsingPATCHNoContent handles this case with default header values.

No Content
*/
type PatchMaintenanceWindowUsingPATCHNoContent struct {
}

func (o *PatchMaintenanceWindowUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /maintenance-windows/{maintenanceWindowId}][%d] patchMaintenanceWindowUsingPATCHNoContent ", 204)
}

func (o *PatchMaintenanceWindowUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchMaintenanceWindowUsingPATCHUnauthorized creates a PatchMaintenanceWindowUsingPATCHUnauthorized with default headers values
func NewPatchMaintenanceWindowUsingPATCHUnauthorized() *PatchMaintenanceWindowUsingPATCHUnauthorized {
	return &PatchMaintenanceWindowUsingPATCHUnauthorized{}
}

/*PatchMaintenanceWindowUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchMaintenanceWindowUsingPATCHUnauthorized struct {
}

func (o *PatchMaintenanceWindowUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /maintenance-windows/{maintenanceWindowId}][%d] patchMaintenanceWindowUsingPATCHUnauthorized ", 401)
}

func (o *PatchMaintenanceWindowUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchMaintenanceWindowUsingPATCHForbidden creates a PatchMaintenanceWindowUsingPATCHForbidden with default headers values
func NewPatchMaintenanceWindowUsingPATCHForbidden() *PatchMaintenanceWindowUsingPATCHForbidden {
	return &PatchMaintenanceWindowUsingPATCHForbidden{}
}

/*PatchMaintenanceWindowUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type PatchMaintenanceWindowUsingPATCHForbidden struct {
}

func (o *PatchMaintenanceWindowUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /maintenance-windows/{maintenanceWindowId}][%d] patchMaintenanceWindowUsingPATCHForbidden ", 403)
}

func (o *PatchMaintenanceWindowUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
