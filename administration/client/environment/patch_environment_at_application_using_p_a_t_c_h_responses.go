// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// PatchEnvironmentAtApplicationUsingPATCHReader is a Reader for the PatchEnvironmentAtApplicationUsingPATCH structure.
type PatchEnvironmentAtApplicationUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchEnvironmentAtApplicationUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchEnvironmentAtApplicationUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchEnvironmentAtApplicationUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchEnvironmentAtApplicationUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchEnvironmentAtApplicationUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchEnvironmentAtApplicationUsingPATCHOK creates a PatchEnvironmentAtApplicationUsingPATCHOK with default headers values
func NewPatchEnvironmentAtApplicationUsingPATCHOK() *PatchEnvironmentAtApplicationUsingPATCHOK {
	return &PatchEnvironmentAtApplicationUsingPATCHOK{}
}

/*PatchEnvironmentAtApplicationUsingPATCHOK handles this case with default header values.

OK
*/
type PatchEnvironmentAtApplicationUsingPATCHOK struct {
	Payload *models.EnvironmentDto
}

func (o *PatchEnvironmentAtApplicationUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /applications/{applicationId}/environments/{environmentId}][%d] patchEnvironmentAtApplicationUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PatchEnvironmentAtApplicationUsingPATCHOK) GetPayload() *models.EnvironmentDto {
	return o.Payload
}

func (o *PatchEnvironmentAtApplicationUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEnvironmentAtApplicationUsingPATCHNoContent creates a PatchEnvironmentAtApplicationUsingPATCHNoContent with default headers values
func NewPatchEnvironmentAtApplicationUsingPATCHNoContent() *PatchEnvironmentAtApplicationUsingPATCHNoContent {
	return &PatchEnvironmentAtApplicationUsingPATCHNoContent{}
}

/*PatchEnvironmentAtApplicationUsingPATCHNoContent handles this case with default header values.

No Content
*/
type PatchEnvironmentAtApplicationUsingPATCHNoContent struct {
}

func (o *PatchEnvironmentAtApplicationUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /applications/{applicationId}/environments/{environmentId}][%d] patchEnvironmentAtApplicationUsingPATCHNoContent ", 204)
}

func (o *PatchEnvironmentAtApplicationUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchEnvironmentAtApplicationUsingPATCHUnauthorized creates a PatchEnvironmentAtApplicationUsingPATCHUnauthorized with default headers values
func NewPatchEnvironmentAtApplicationUsingPATCHUnauthorized() *PatchEnvironmentAtApplicationUsingPATCHUnauthorized {
	return &PatchEnvironmentAtApplicationUsingPATCHUnauthorized{}
}

/*PatchEnvironmentAtApplicationUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchEnvironmentAtApplicationUsingPATCHUnauthorized struct {
}

func (o *PatchEnvironmentAtApplicationUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /applications/{applicationId}/environments/{environmentId}][%d] patchEnvironmentAtApplicationUsingPATCHUnauthorized ", 401)
}

func (o *PatchEnvironmentAtApplicationUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchEnvironmentAtApplicationUsingPATCHForbidden creates a PatchEnvironmentAtApplicationUsingPATCHForbidden with default headers values
func NewPatchEnvironmentAtApplicationUsingPATCHForbidden() *PatchEnvironmentAtApplicationUsingPATCHForbidden {
	return &PatchEnvironmentAtApplicationUsingPATCHForbidden{}
}

/*PatchEnvironmentAtApplicationUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type PatchEnvironmentAtApplicationUsingPATCHForbidden struct {
}

func (o *PatchEnvironmentAtApplicationUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /applications/{applicationId}/environments/{environmentId}][%d] patchEnvironmentAtApplicationUsingPATCHForbidden ", 403)
}

func (o *PatchEnvironmentAtApplicationUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
