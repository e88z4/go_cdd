// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewPatchEnvironmentUsingPATCHParams creates a new PatchEnvironmentUsingPATCHParams object
// with the default values initialized.
func NewPatchEnvironmentUsingPATCHParams() *PatchEnvironmentUsingPATCHParams {
	var ()
	return &PatchEnvironmentUsingPATCHParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchEnvironmentUsingPATCHParamsWithTimeout creates a new PatchEnvironmentUsingPATCHParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchEnvironmentUsingPATCHParamsWithTimeout(timeout time.Duration) *PatchEnvironmentUsingPATCHParams {
	var ()
	return &PatchEnvironmentUsingPATCHParams{

		timeout: timeout,
	}
}

// NewPatchEnvironmentUsingPATCHParamsWithContext creates a new PatchEnvironmentUsingPATCHParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchEnvironmentUsingPATCHParamsWithContext(ctx context.Context) *PatchEnvironmentUsingPATCHParams {
	var ()
	return &PatchEnvironmentUsingPATCHParams{

		Context: ctx,
	}
}

// NewPatchEnvironmentUsingPATCHParamsWithHTTPClient creates a new PatchEnvironmentUsingPATCHParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchEnvironmentUsingPATCHParamsWithHTTPClient(client *http.Client) *PatchEnvironmentUsingPATCHParams {
	var ()
	return &PatchEnvironmentUsingPATCHParams{
		HTTPClient: client,
	}
}

/*PatchEnvironmentUsingPATCHParams contains all the parameters to send to the API endpoint
for the patch environment using p a t c h operation typically these are written to a http.Request
*/
type PatchEnvironmentUsingPATCHParams struct {

	/*EnvironmentDto
	  environmentDto

	*/
	EnvironmentDto *models.EnvironmentDto
	/*EnvironmentID
	  environmentId

	*/
	EnvironmentID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) WithTimeout(timeout time.Duration) *PatchEnvironmentUsingPATCHParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) WithContext(ctx context.Context) *PatchEnvironmentUsingPATCHParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) WithHTTPClient(client *http.Client) *PatchEnvironmentUsingPATCHParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironmentDto adds the environmentDto to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) WithEnvironmentDto(environmentDto *models.EnvironmentDto) *PatchEnvironmentUsingPATCHParams {
	o.SetEnvironmentDto(environmentDto)
	return o
}

// SetEnvironmentDto adds the environmentDto to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) SetEnvironmentDto(environmentDto *models.EnvironmentDto) {
	o.EnvironmentDto = environmentDto
}

// WithEnvironmentID adds the environmentID to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) WithEnvironmentID(environmentID int64) *PatchEnvironmentUsingPATCHParams {
	o.SetEnvironmentID(environmentID)
	return o
}

// SetEnvironmentID adds the environmentId to the patch environment using p a t c h params
func (o *PatchEnvironmentUsingPATCHParams) SetEnvironmentID(environmentID int64) {
	o.EnvironmentID = environmentID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchEnvironmentUsingPATCHParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EnvironmentDto != nil {
		if err := r.SetBodyParam(o.EnvironmentDto); err != nil {
			return err
		}
	}

	// path param environmentId
	if err := r.SetPathParam("environmentId", swag.FormatInt64(o.EnvironmentID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
