// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateEnvironmentAtApplicationUsingPUTReader is a Reader for the UpdateEnvironmentAtApplicationUsingPUT structure.
type UpdateEnvironmentAtApplicationUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateEnvironmentAtApplicationUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateEnvironmentAtApplicationUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateEnvironmentAtApplicationUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateEnvironmentAtApplicationUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateEnvironmentAtApplicationUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateEnvironmentAtApplicationUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateEnvironmentAtApplicationUsingPUTOK creates a UpdateEnvironmentAtApplicationUsingPUTOK with default headers values
func NewUpdateEnvironmentAtApplicationUsingPUTOK() *UpdateEnvironmentAtApplicationUsingPUTOK {
	return &UpdateEnvironmentAtApplicationUsingPUTOK{}
}

/*UpdateEnvironmentAtApplicationUsingPUTOK handles this case with default header values.

OK
*/
type UpdateEnvironmentAtApplicationUsingPUTOK struct {
	Payload *models.EnvironmentDto
}

func (o *UpdateEnvironmentAtApplicationUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /applications/{applicationId}/environments/{environmentId}][%d] updateEnvironmentAtApplicationUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateEnvironmentAtApplicationUsingPUTOK) GetPayload() *models.EnvironmentDto {
	return o.Payload
}

func (o *UpdateEnvironmentAtApplicationUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EnvironmentDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateEnvironmentAtApplicationUsingPUTCreated creates a UpdateEnvironmentAtApplicationUsingPUTCreated with default headers values
func NewUpdateEnvironmentAtApplicationUsingPUTCreated() *UpdateEnvironmentAtApplicationUsingPUTCreated {
	return &UpdateEnvironmentAtApplicationUsingPUTCreated{}
}

/*UpdateEnvironmentAtApplicationUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateEnvironmentAtApplicationUsingPUTCreated struct {
}

func (o *UpdateEnvironmentAtApplicationUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /applications/{applicationId}/environments/{environmentId}][%d] updateEnvironmentAtApplicationUsingPUTCreated ", 201)
}

func (o *UpdateEnvironmentAtApplicationUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAtApplicationUsingPUTUnauthorized creates a UpdateEnvironmentAtApplicationUsingPUTUnauthorized with default headers values
func NewUpdateEnvironmentAtApplicationUsingPUTUnauthorized() *UpdateEnvironmentAtApplicationUsingPUTUnauthorized {
	return &UpdateEnvironmentAtApplicationUsingPUTUnauthorized{}
}

/*UpdateEnvironmentAtApplicationUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateEnvironmentAtApplicationUsingPUTUnauthorized struct {
}

func (o *UpdateEnvironmentAtApplicationUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /applications/{applicationId}/environments/{environmentId}][%d] updateEnvironmentAtApplicationUsingPUTUnauthorized ", 401)
}

func (o *UpdateEnvironmentAtApplicationUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAtApplicationUsingPUTForbidden creates a UpdateEnvironmentAtApplicationUsingPUTForbidden with default headers values
func NewUpdateEnvironmentAtApplicationUsingPUTForbidden() *UpdateEnvironmentAtApplicationUsingPUTForbidden {
	return &UpdateEnvironmentAtApplicationUsingPUTForbidden{}
}

/*UpdateEnvironmentAtApplicationUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateEnvironmentAtApplicationUsingPUTForbidden struct {
}

func (o *UpdateEnvironmentAtApplicationUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /applications/{applicationId}/environments/{environmentId}][%d] updateEnvironmentAtApplicationUsingPUTForbidden ", 403)
}

func (o *UpdateEnvironmentAtApplicationUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateEnvironmentAtApplicationUsingPUTNotFound creates a UpdateEnvironmentAtApplicationUsingPUTNotFound with default headers values
func NewUpdateEnvironmentAtApplicationUsingPUTNotFound() *UpdateEnvironmentAtApplicationUsingPUTNotFound {
	return &UpdateEnvironmentAtApplicationUsingPUTNotFound{}
}

/*UpdateEnvironmentAtApplicationUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateEnvironmentAtApplicationUsingPUTNotFound struct {
}

func (o *UpdateEnvironmentAtApplicationUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /applications/{applicationId}/environments/{environmentId}][%d] updateEnvironmentAtApplicationUsingPUTNotFound ", 404)
}

func (o *UpdateEnvironmentAtApplicationUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
