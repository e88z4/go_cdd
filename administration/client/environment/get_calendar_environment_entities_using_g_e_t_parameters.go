// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCalendarEnvironmentEntitiesUsingGETParams creates a new GetCalendarEnvironmentEntitiesUsingGETParams object
// with the default values initialized.
func NewGetCalendarEnvironmentEntitiesUsingGETParams() *GetCalendarEnvironmentEntitiesUsingGETParams {
	var ()
	return &GetCalendarEnvironmentEntitiesUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCalendarEnvironmentEntitiesUsingGETParamsWithTimeout creates a new GetCalendarEnvironmentEntitiesUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCalendarEnvironmentEntitiesUsingGETParamsWithTimeout(timeout time.Duration) *GetCalendarEnvironmentEntitiesUsingGETParams {
	var ()
	return &GetCalendarEnvironmentEntitiesUsingGETParams{

		timeout: timeout,
	}
}

// NewGetCalendarEnvironmentEntitiesUsingGETParamsWithContext creates a new GetCalendarEnvironmentEntitiesUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCalendarEnvironmentEntitiesUsingGETParamsWithContext(ctx context.Context) *GetCalendarEnvironmentEntitiesUsingGETParams {
	var ()
	return &GetCalendarEnvironmentEntitiesUsingGETParams{

		Context: ctx,
	}
}

// NewGetCalendarEnvironmentEntitiesUsingGETParamsWithHTTPClient creates a new GetCalendarEnvironmentEntitiesUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCalendarEnvironmentEntitiesUsingGETParamsWithHTTPClient(client *http.Client) *GetCalendarEnvironmentEntitiesUsingGETParams {
	var ()
	return &GetCalendarEnvironmentEntitiesUsingGETParams{
		HTTPClient: client,
	}
}

/*GetCalendarEnvironmentEntitiesUsingGETParams contains all the parameters to send to the API endpoint
for the get calendar environment entities using g e t operation typically these are written to a http.Request
*/
type GetCalendarEnvironmentEntitiesUsingGETParams struct {

	/*Embed
	  embedFields

	*/
	Embed []string
	/*EndDate
	  endDate

	*/
	EndDate int64
	/*Environment
	  environmentIds

	*/
	Environment []int64
	/*StartDate
	  startDate

	*/
	StartDate int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithTimeout(timeout time.Duration) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithContext(ctx context.Context) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithHTTPClient(client *http.Client) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmbed adds the embed to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithEmbed(embed []string) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetEmbed(embed)
	return o
}

// SetEmbed adds the embed to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetEmbed(embed []string) {
	o.Embed = embed
}

// WithEndDate adds the endDate to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithEndDate(endDate int64) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetEndDate(endDate int64) {
	o.EndDate = endDate
}

// WithEnvironment adds the environment to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithEnvironment(environment []int64) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetEnvironment(environment []int64) {
	o.Environment = environment
}

// WithStartDate adds the startDate to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WithStartDate(startDate int64) *GetCalendarEnvironmentEntitiesUsingGETParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the get calendar environment entities using g e t params
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) SetStartDate(startDate int64) {
	o.StartDate = startDate
}

// WriteToRequest writes these params to a swagger request
func (o *GetCalendarEnvironmentEntitiesUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesEmbed := o.Embed

	joinedEmbed := swag.JoinByFormat(valuesEmbed, "multi")
	// query array param embed
	if err := r.SetQueryParam("embed", joinedEmbed...); err != nil {
		return err
	}

	// query param end_date
	qrEndDate := o.EndDate
	qEndDate := swag.FormatInt64(qrEndDate)
	if qEndDate != "" {
		if err := r.SetQueryParam("end_date", qEndDate); err != nil {
			return err
		}
	}

	var valuesEnvironment []string
	for _, v := range o.Environment {
		valuesEnvironment = append(valuesEnvironment, swag.FormatInt64(v))
	}

	joinedEnvironment := swag.JoinByFormat(valuesEnvironment, "multi")
	// query array param environment
	if err := r.SetQueryParam("environment", joinedEnvironment...); err != nil {
		return err
	}

	// query param start_date
	qrStartDate := o.StartDate
	qStartDate := swag.FormatInt64(qrStartDate)
	if qStartDate != "" {
		if err := r.SetQueryParam("start_date", qStartDate); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
