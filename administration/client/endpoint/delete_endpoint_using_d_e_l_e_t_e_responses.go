// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteEndpointUsingDELETEReader is a Reader for the DeleteEndpointUsingDELETE structure.
type DeleteEndpointUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEndpointUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteEndpointUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteEndpointUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteEndpointUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteEndpointUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteEndpointUsingDELETEOK creates a DeleteEndpointUsingDELETEOK with default headers values
func NewDeleteEndpointUsingDELETEOK() *DeleteEndpointUsingDELETEOK {
	return &DeleteEndpointUsingDELETEOK{}
}

/*DeleteEndpointUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteEndpointUsingDELETEOK struct {
}

func (o *DeleteEndpointUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{endpointId}][%d] deleteEndpointUsingDELETEOK ", 200)
}

func (o *DeleteEndpointUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointUsingDELETENoContent creates a DeleteEndpointUsingDELETENoContent with default headers values
func NewDeleteEndpointUsingDELETENoContent() *DeleteEndpointUsingDELETENoContent {
	return &DeleteEndpointUsingDELETENoContent{}
}

/*DeleteEndpointUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteEndpointUsingDELETENoContent struct {
}

func (o *DeleteEndpointUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{endpointId}][%d] deleteEndpointUsingDELETENoContent ", 204)
}

func (o *DeleteEndpointUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointUsingDELETEUnauthorized creates a DeleteEndpointUsingDELETEUnauthorized with default headers values
func NewDeleteEndpointUsingDELETEUnauthorized() *DeleteEndpointUsingDELETEUnauthorized {
	return &DeleteEndpointUsingDELETEUnauthorized{}
}

/*DeleteEndpointUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteEndpointUsingDELETEUnauthorized struct {
}

func (o *DeleteEndpointUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{endpointId}][%d] deleteEndpointUsingDELETEUnauthorized ", 401)
}

func (o *DeleteEndpointUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEndpointUsingDELETEForbidden creates a DeleteEndpointUsingDELETEForbidden with default headers values
func NewDeleteEndpointUsingDELETEForbidden() *DeleteEndpointUsingDELETEForbidden {
	return &DeleteEndpointUsingDELETEForbidden{}
}

/*DeleteEndpointUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteEndpointUsingDELETEForbidden struct {
}

func (o *DeleteEndpointUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /endpoints/{endpointId}][%d] deleteEndpointUsingDELETEForbidden ", 403)
}

func (o *DeleteEndpointUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
