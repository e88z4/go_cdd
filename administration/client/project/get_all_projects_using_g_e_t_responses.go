// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetAllProjectsUsingGETReader is a Reader for the GetAllProjectsUsingGET structure.
type GetAllProjectsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllProjectsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllProjectsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllProjectsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllProjectsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllProjectsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllProjectsUsingGETOK creates a GetAllProjectsUsingGETOK with default headers values
func NewGetAllProjectsUsingGETOK() *GetAllProjectsUsingGETOK {
	return &GetAllProjectsUsingGETOK{}
}

/*GetAllProjectsUsingGETOK handles this case with default header values.

OK
*/
type GetAllProjectsUsingGETOK struct {
	Payload *models.PagedResultDtoProjectDto
}

func (o *GetAllProjectsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /projects][%d] getAllProjectsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllProjectsUsingGETOK) GetPayload() *models.PagedResultDtoProjectDto {
	return o.Payload
}

func (o *GetAllProjectsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoProjectDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllProjectsUsingGETUnauthorized creates a GetAllProjectsUsingGETUnauthorized with default headers values
func NewGetAllProjectsUsingGETUnauthorized() *GetAllProjectsUsingGETUnauthorized {
	return &GetAllProjectsUsingGETUnauthorized{}
}

/*GetAllProjectsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllProjectsUsingGETUnauthorized struct {
}

func (o *GetAllProjectsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects][%d] getAllProjectsUsingGETUnauthorized ", 401)
}

func (o *GetAllProjectsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProjectsUsingGETForbidden creates a GetAllProjectsUsingGETForbidden with default headers values
func NewGetAllProjectsUsingGETForbidden() *GetAllProjectsUsingGETForbidden {
	return &GetAllProjectsUsingGETForbidden{}
}

/*GetAllProjectsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllProjectsUsingGETForbidden struct {
}

func (o *GetAllProjectsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /projects][%d] getAllProjectsUsingGETForbidden ", 403)
}

func (o *GetAllProjectsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProjectsUsingGETNotFound creates a GetAllProjectsUsingGETNotFound with default headers values
func NewGetAllProjectsUsingGETNotFound() *GetAllProjectsUsingGETNotFound {
	return &GetAllProjectsUsingGETNotFound{}
}

/*GetAllProjectsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllProjectsUsingGETNotFound struct {
}

func (o *GetAllProjectsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /projects][%d] getAllProjectsUsingGETNotFound ", 404)
}

func (o *GetAllProjectsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
