// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetAllProjectUserGroupsUsingGETReader is a Reader for the GetAllProjectUserGroupsUsingGET structure.
type GetAllProjectUserGroupsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllProjectUserGroupsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllProjectUserGroupsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllProjectUserGroupsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllProjectUserGroupsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllProjectUserGroupsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllProjectUserGroupsUsingGETOK creates a GetAllProjectUserGroupsUsingGETOK with default headers values
func NewGetAllProjectUserGroupsUsingGETOK() *GetAllProjectUserGroupsUsingGETOK {
	return &GetAllProjectUserGroupsUsingGETOK{}
}

/*GetAllProjectUserGroupsUsingGETOK handles this case with default header values.

OK
*/
type GetAllProjectUserGroupsUsingGETOK struct {
	Payload *models.PagedResultDtoProjectUserGroupDto
}

func (o *GetAllProjectUserGroupsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /projects/user-groups][%d] getAllProjectUserGroupsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllProjectUserGroupsUsingGETOK) GetPayload() *models.PagedResultDtoProjectUserGroupDto {
	return o.Payload
}

func (o *GetAllProjectUserGroupsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoProjectUserGroupDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllProjectUserGroupsUsingGETUnauthorized creates a GetAllProjectUserGroupsUsingGETUnauthorized with default headers values
func NewGetAllProjectUserGroupsUsingGETUnauthorized() *GetAllProjectUserGroupsUsingGETUnauthorized {
	return &GetAllProjectUserGroupsUsingGETUnauthorized{}
}

/*GetAllProjectUserGroupsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllProjectUserGroupsUsingGETUnauthorized struct {
}

func (o *GetAllProjectUserGroupsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/user-groups][%d] getAllProjectUserGroupsUsingGETUnauthorized ", 401)
}

func (o *GetAllProjectUserGroupsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProjectUserGroupsUsingGETForbidden creates a GetAllProjectUserGroupsUsingGETForbidden with default headers values
func NewGetAllProjectUserGroupsUsingGETForbidden() *GetAllProjectUserGroupsUsingGETForbidden {
	return &GetAllProjectUserGroupsUsingGETForbidden{}
}

/*GetAllProjectUserGroupsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllProjectUserGroupsUsingGETForbidden struct {
}

func (o *GetAllProjectUserGroupsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/user-groups][%d] getAllProjectUserGroupsUsingGETForbidden ", 403)
}

func (o *GetAllProjectUserGroupsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllProjectUserGroupsUsingGETNotFound creates a GetAllProjectUserGroupsUsingGETNotFound with default headers values
func NewGetAllProjectUserGroupsUsingGETNotFound() *GetAllProjectUserGroupsUsingGETNotFound {
	return &GetAllProjectUserGroupsUsingGETNotFound{}
}

/*GetAllProjectUserGroupsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllProjectUserGroupsUsingGETNotFound struct {
}

func (o *GetAllProjectUserGroupsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/user-groups][%d] getAllProjectUserGroupsUsingGETNotFound ", 404)
}

func (o *GetAllProjectUserGroupsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
