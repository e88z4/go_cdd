// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteProjectUsingDELETEReader is a Reader for the DeleteProjectUsingDELETE structure.
type DeleteProjectUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProjectUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteProjectUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteProjectUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteProjectUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteProjectUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteProjectUsingDELETEOK creates a DeleteProjectUsingDELETEOK with default headers values
func NewDeleteProjectUsingDELETEOK() *DeleteProjectUsingDELETEOK {
	return &DeleteProjectUsingDELETEOK{}
}

/*DeleteProjectUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteProjectUsingDELETEOK struct {
}

func (o *DeleteProjectUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectUsingDELETEOK ", 200)
}

func (o *DeleteProjectUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectUsingDELETENoContent creates a DeleteProjectUsingDELETENoContent with default headers values
func NewDeleteProjectUsingDELETENoContent() *DeleteProjectUsingDELETENoContent {
	return &DeleteProjectUsingDELETENoContent{}
}

/*DeleteProjectUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteProjectUsingDELETENoContent struct {
}

func (o *DeleteProjectUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectUsingDELETENoContent ", 204)
}

func (o *DeleteProjectUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectUsingDELETEUnauthorized creates a DeleteProjectUsingDELETEUnauthorized with default headers values
func NewDeleteProjectUsingDELETEUnauthorized() *DeleteProjectUsingDELETEUnauthorized {
	return &DeleteProjectUsingDELETEUnauthorized{}
}

/*DeleteProjectUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteProjectUsingDELETEUnauthorized struct {
}

func (o *DeleteProjectUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectUsingDELETEUnauthorized ", 401)
}

func (o *DeleteProjectUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProjectUsingDELETEForbidden creates a DeleteProjectUsingDELETEForbidden with default headers values
func NewDeleteProjectUsingDELETEForbidden() *DeleteProjectUsingDELETEForbidden {
	return &DeleteProjectUsingDELETEForbidden{}
}

/*DeleteProjectUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteProjectUsingDELETEForbidden struct {
}

func (o *DeleteProjectUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}][%d] deleteProjectUsingDELETEForbidden ", 403)
}

func (o *DeleteProjectUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
