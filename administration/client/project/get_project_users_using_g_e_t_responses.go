// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetProjectUsersUsingGETReader is a Reader for the GetProjectUsersUsingGET structure.
type GetProjectUsersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectUsersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectUsersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetProjectUsersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetProjectUsersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectUsersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProjectUsersUsingGETOK creates a GetProjectUsersUsingGETOK with default headers values
func NewGetProjectUsersUsingGETOK() *GetProjectUsersUsingGETOK {
	return &GetProjectUsersUsingGETOK{}
}

/*GetProjectUsersUsingGETOK handles this case with default header values.

OK
*/
type GetProjectUsersUsingGETOK struct {
	Payload *models.PagedResultDtoProjectUserDto
}

func (o *GetProjectUsersUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /projects/users][%d] getProjectUsersUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProjectUsersUsingGETOK) GetPayload() *models.PagedResultDtoProjectUserDto {
	return o.Payload
}

func (o *GetProjectUsersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoProjectUserDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectUsersUsingGETUnauthorized creates a GetProjectUsersUsingGETUnauthorized with default headers values
func NewGetProjectUsersUsingGETUnauthorized() *GetProjectUsersUsingGETUnauthorized {
	return &GetProjectUsersUsingGETUnauthorized{}
}

/*GetProjectUsersUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetProjectUsersUsingGETUnauthorized struct {
}

func (o *GetProjectUsersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /projects/users][%d] getProjectUsersUsingGETUnauthorized ", 401)
}

func (o *GetProjectUsersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectUsersUsingGETForbidden creates a GetProjectUsersUsingGETForbidden with default headers values
func NewGetProjectUsersUsingGETForbidden() *GetProjectUsersUsingGETForbidden {
	return &GetProjectUsersUsingGETForbidden{}
}

/*GetProjectUsersUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetProjectUsersUsingGETForbidden struct {
}

func (o *GetProjectUsersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /projects/users][%d] getProjectUsersUsingGETForbidden ", 403)
}

func (o *GetProjectUsersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProjectUsersUsingGETNotFound creates a GetProjectUsersUsingGETNotFound with default headers values
func NewGetProjectUsersUsingGETNotFound() *GetProjectUsersUsingGETNotFound {
	return &GetProjectUsersUsingGETNotFound{}
}

/*GetProjectUsersUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetProjectUsersUsingGETNotFound struct {
}

func (o *GetProjectUsersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /projects/users][%d] getProjectUsersUsingGETNotFound ", 404)
}

func (o *GetProjectUsersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
