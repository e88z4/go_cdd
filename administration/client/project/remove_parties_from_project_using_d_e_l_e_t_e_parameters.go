// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemovePartiesFromProjectUsingDELETEParams creates a new RemovePartiesFromProjectUsingDELETEParams object
// with the default values initialized.
func NewRemovePartiesFromProjectUsingDELETEParams() *RemovePartiesFromProjectUsingDELETEParams {
	var ()
	return &RemovePartiesFromProjectUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemovePartiesFromProjectUsingDELETEParamsWithTimeout creates a new RemovePartiesFromProjectUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemovePartiesFromProjectUsingDELETEParamsWithTimeout(timeout time.Duration) *RemovePartiesFromProjectUsingDELETEParams {
	var ()
	return &RemovePartiesFromProjectUsingDELETEParams{

		timeout: timeout,
	}
}

// NewRemovePartiesFromProjectUsingDELETEParamsWithContext creates a new RemovePartiesFromProjectUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemovePartiesFromProjectUsingDELETEParamsWithContext(ctx context.Context) *RemovePartiesFromProjectUsingDELETEParams {
	var ()
	return &RemovePartiesFromProjectUsingDELETEParams{

		Context: ctx,
	}
}

// NewRemovePartiesFromProjectUsingDELETEParamsWithHTTPClient creates a new RemovePartiesFromProjectUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemovePartiesFromProjectUsingDELETEParamsWithHTTPClient(client *http.Client) *RemovePartiesFromProjectUsingDELETEParams {
	var ()
	return &RemovePartiesFromProjectUsingDELETEParams{
		HTTPClient: client,
	}
}

/*RemovePartiesFromProjectUsingDELETEParams contains all the parameters to send to the API endpoint
for the remove parties from project using d e l e t e operation typically these are written to a http.Request
*/
type RemovePartiesFromProjectUsingDELETEParams struct {

	/*Party
	  parties

	*/
	Party []int64
	/*ProjectID
	  projectId

	*/
	ProjectID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) WithTimeout(timeout time.Duration) *RemovePartiesFromProjectUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) WithContext(ctx context.Context) *RemovePartiesFromProjectUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) WithHTTPClient(client *http.Client) *RemovePartiesFromProjectUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithParty adds the party to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) WithParty(party []int64) *RemovePartiesFromProjectUsingDELETEParams {
	o.SetParty(party)
	return o
}

// SetParty adds the party to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) SetParty(party []int64) {
	o.Party = party
}

// WithProjectID adds the projectID to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) WithProjectID(projectID int64) *RemovePartiesFromProjectUsingDELETEParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the remove parties from project using d e l e t e params
func (o *RemovePartiesFromProjectUsingDELETEParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *RemovePartiesFromProjectUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	var valuesParty []string
	for _, v := range o.Party {
		valuesParty = append(valuesParty, swag.FormatInt64(v))
	}

	joinedParty := swag.JoinByFormat(valuesParty, "multi")
	// query array param party
	if err := r.SetQueryParam("party", joinedParty...); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
