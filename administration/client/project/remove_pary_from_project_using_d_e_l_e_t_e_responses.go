// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveParyFromProjectUsingDELETEReader is a Reader for the RemoveParyFromProjectUsingDELETE structure.
type RemoveParyFromProjectUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveParyFromProjectUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveParyFromProjectUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewRemoveParyFromProjectUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRemoveParyFromProjectUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveParyFromProjectUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveParyFromProjectUsingDELETEOK creates a RemoveParyFromProjectUsingDELETEOK with default headers values
func NewRemoveParyFromProjectUsingDELETEOK() *RemoveParyFromProjectUsingDELETEOK {
	return &RemoveParyFromProjectUsingDELETEOK{}
}

/*RemoveParyFromProjectUsingDELETEOK handles this case with default header values.

OK
*/
type RemoveParyFromProjectUsingDELETEOK struct {
}

func (o *RemoveParyFromProjectUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/parties/{partyId}][%d] removeParyFromProjectUsingDELETEOK ", 200)
}

func (o *RemoveParyFromProjectUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveParyFromProjectUsingDELETENoContent creates a RemoveParyFromProjectUsingDELETENoContent with default headers values
func NewRemoveParyFromProjectUsingDELETENoContent() *RemoveParyFromProjectUsingDELETENoContent {
	return &RemoveParyFromProjectUsingDELETENoContent{}
}

/*RemoveParyFromProjectUsingDELETENoContent handles this case with default header values.

No Content
*/
type RemoveParyFromProjectUsingDELETENoContent struct {
}

func (o *RemoveParyFromProjectUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/parties/{partyId}][%d] removeParyFromProjectUsingDELETENoContent ", 204)
}

func (o *RemoveParyFromProjectUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveParyFromProjectUsingDELETEUnauthorized creates a RemoveParyFromProjectUsingDELETEUnauthorized with default headers values
func NewRemoveParyFromProjectUsingDELETEUnauthorized() *RemoveParyFromProjectUsingDELETEUnauthorized {
	return &RemoveParyFromProjectUsingDELETEUnauthorized{}
}

/*RemoveParyFromProjectUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type RemoveParyFromProjectUsingDELETEUnauthorized struct {
}

func (o *RemoveParyFromProjectUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/parties/{partyId}][%d] removeParyFromProjectUsingDELETEUnauthorized ", 401)
}

func (o *RemoveParyFromProjectUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveParyFromProjectUsingDELETEForbidden creates a RemoveParyFromProjectUsingDELETEForbidden with default headers values
func NewRemoveParyFromProjectUsingDELETEForbidden() *RemoveParyFromProjectUsingDELETEForbidden {
	return &RemoveParyFromProjectUsingDELETEForbidden{}
}

/*RemoveParyFromProjectUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type RemoveParyFromProjectUsingDELETEForbidden struct {
}

func (o *RemoveParyFromProjectUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /projects/{projectId}/parties/{partyId}][%d] removeParyFromProjectUsingDELETEForbidden ", 403)
}

func (o *RemoveParyFromProjectUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
