// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateProjectUsingPUTReader is a Reader for the UpdateProjectUsingPUT structure.
type UpdateProjectUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProjectUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProjectUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateProjectUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateProjectUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateProjectUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProjectUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateProjectUsingPUTOK creates a UpdateProjectUsingPUTOK with default headers values
func NewUpdateProjectUsingPUTOK() *UpdateProjectUsingPUTOK {
	return &UpdateProjectUsingPUTOK{}
}

/*UpdateProjectUsingPUTOK handles this case with default header values.

OK
*/
type UpdateProjectUsingPUTOK struct {
	Payload *models.ProjectDto
}

func (o *UpdateProjectUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] updateProjectUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateProjectUsingPUTOK) GetPayload() *models.ProjectDto {
	return o.Payload
}

func (o *UpdateProjectUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProjectUsingPUTCreated creates a UpdateProjectUsingPUTCreated with default headers values
func NewUpdateProjectUsingPUTCreated() *UpdateProjectUsingPUTCreated {
	return &UpdateProjectUsingPUTCreated{}
}

/*UpdateProjectUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateProjectUsingPUTCreated struct {
}

func (o *UpdateProjectUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] updateProjectUsingPUTCreated ", 201)
}

func (o *UpdateProjectUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectUsingPUTUnauthorized creates a UpdateProjectUsingPUTUnauthorized with default headers values
func NewUpdateProjectUsingPUTUnauthorized() *UpdateProjectUsingPUTUnauthorized {
	return &UpdateProjectUsingPUTUnauthorized{}
}

/*UpdateProjectUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateProjectUsingPUTUnauthorized struct {
}

func (o *UpdateProjectUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] updateProjectUsingPUTUnauthorized ", 401)
}

func (o *UpdateProjectUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectUsingPUTForbidden creates a UpdateProjectUsingPUTForbidden with default headers values
func NewUpdateProjectUsingPUTForbidden() *UpdateProjectUsingPUTForbidden {
	return &UpdateProjectUsingPUTForbidden{}
}

/*UpdateProjectUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateProjectUsingPUTForbidden struct {
}

func (o *UpdateProjectUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] updateProjectUsingPUTForbidden ", 403)
}

func (o *UpdateProjectUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectUsingPUTNotFound creates a UpdateProjectUsingPUTNotFound with default headers values
func NewUpdateProjectUsingPUTNotFound() *UpdateProjectUsingPUTNotFound {
	return &UpdateProjectUsingPUTNotFound{}
}

/*UpdateProjectUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateProjectUsingPUTNotFound struct {
}

func (o *UpdateProjectUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /projects/{projectId}][%d] updateProjectUsingPUTNotFound ", 404)
}

func (o *UpdateProjectUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
