// Code generated by go-swagger; DO NOT EDIT.

package payment_plan_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateFirstSubscriptionUsingGETReader is a Reader for the CreateFirstSubscriptionUsingGET structure.
type CreateFirstSubscriptionUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFirstSubscriptionUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateFirstSubscriptionUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateFirstSubscriptionUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateFirstSubscriptionUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateFirstSubscriptionUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateFirstSubscriptionUsingGETOK creates a CreateFirstSubscriptionUsingGETOK with default headers values
func NewCreateFirstSubscriptionUsingGETOK() *CreateFirstSubscriptionUsingGETOK {
	return &CreateFirstSubscriptionUsingGETOK{}
}

/*CreateFirstSubscriptionUsingGETOK handles this case with default header values.

OK
*/
type CreateFirstSubscriptionUsingGETOK struct {
}

func (o *CreateFirstSubscriptionUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /payment-plans/subscription][%d] createFirstSubscriptionUsingGETOK ", 200)
}

func (o *CreateFirstSubscriptionUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateFirstSubscriptionUsingGETUnauthorized creates a CreateFirstSubscriptionUsingGETUnauthorized with default headers values
func NewCreateFirstSubscriptionUsingGETUnauthorized() *CreateFirstSubscriptionUsingGETUnauthorized {
	return &CreateFirstSubscriptionUsingGETUnauthorized{}
}

/*CreateFirstSubscriptionUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateFirstSubscriptionUsingGETUnauthorized struct {
}

func (o *CreateFirstSubscriptionUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /payment-plans/subscription][%d] createFirstSubscriptionUsingGETUnauthorized ", 401)
}

func (o *CreateFirstSubscriptionUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateFirstSubscriptionUsingGETForbidden creates a CreateFirstSubscriptionUsingGETForbidden with default headers values
func NewCreateFirstSubscriptionUsingGETForbidden() *CreateFirstSubscriptionUsingGETForbidden {
	return &CreateFirstSubscriptionUsingGETForbidden{}
}

/*CreateFirstSubscriptionUsingGETForbidden handles this case with default header values.

Forbidden
*/
type CreateFirstSubscriptionUsingGETForbidden struct {
}

func (o *CreateFirstSubscriptionUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /payment-plans/subscription][%d] createFirstSubscriptionUsingGETForbidden ", 403)
}

func (o *CreateFirstSubscriptionUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateFirstSubscriptionUsingGETNotFound creates a CreateFirstSubscriptionUsingGETNotFound with default headers values
func NewCreateFirstSubscriptionUsingGETNotFound() *CreateFirstSubscriptionUsingGETNotFound {
	return &CreateFirstSubscriptionUsingGETNotFound{}
}

/*CreateFirstSubscriptionUsingGETNotFound handles this case with default header values.

Not Found
*/
type CreateFirstSubscriptionUsingGETNotFound struct {
}

func (o *CreateFirstSubscriptionUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /payment-plans/subscription][%d] createFirstSubscriptionUsingGETNotFound ", 404)
}

func (o *CreateFirstSubscriptionUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
