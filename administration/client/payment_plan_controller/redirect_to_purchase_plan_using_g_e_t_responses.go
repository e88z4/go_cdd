// Code generated by go-swagger; DO NOT EDIT.

package payment_plan_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RedirectToPurchasePlanUsingGETReader is a Reader for the RedirectToPurchasePlanUsingGET structure.
type RedirectToPurchasePlanUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedirectToPurchasePlanUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedirectToPurchasePlanUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRedirectToPurchasePlanUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRedirectToPurchasePlanUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRedirectToPurchasePlanUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRedirectToPurchasePlanUsingGETOK creates a RedirectToPurchasePlanUsingGETOK with default headers values
func NewRedirectToPurchasePlanUsingGETOK() *RedirectToPurchasePlanUsingGETOK {
	return &RedirectToPurchasePlanUsingGETOK{}
}

/*RedirectToPurchasePlanUsingGETOK handles this case with default header values.

OK
*/
type RedirectToPurchasePlanUsingGETOK struct {
}

func (o *RedirectToPurchasePlanUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /payment-plans][%d] redirectToPurchasePlanUsingGETOK ", 200)
}

func (o *RedirectToPurchasePlanUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectToPurchasePlanUsingGETUnauthorized creates a RedirectToPurchasePlanUsingGETUnauthorized with default headers values
func NewRedirectToPurchasePlanUsingGETUnauthorized() *RedirectToPurchasePlanUsingGETUnauthorized {
	return &RedirectToPurchasePlanUsingGETUnauthorized{}
}

/*RedirectToPurchasePlanUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type RedirectToPurchasePlanUsingGETUnauthorized struct {
}

func (o *RedirectToPurchasePlanUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /payment-plans][%d] redirectToPurchasePlanUsingGETUnauthorized ", 401)
}

func (o *RedirectToPurchasePlanUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectToPurchasePlanUsingGETForbidden creates a RedirectToPurchasePlanUsingGETForbidden with default headers values
func NewRedirectToPurchasePlanUsingGETForbidden() *RedirectToPurchasePlanUsingGETForbidden {
	return &RedirectToPurchasePlanUsingGETForbidden{}
}

/*RedirectToPurchasePlanUsingGETForbidden handles this case with default header values.

Forbidden
*/
type RedirectToPurchasePlanUsingGETForbidden struct {
}

func (o *RedirectToPurchasePlanUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /payment-plans][%d] redirectToPurchasePlanUsingGETForbidden ", 403)
}

func (o *RedirectToPurchasePlanUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedirectToPurchasePlanUsingGETNotFound creates a RedirectToPurchasePlanUsingGETNotFound with default headers values
func NewRedirectToPurchasePlanUsingGETNotFound() *RedirectToPurchasePlanUsingGETNotFound {
	return &RedirectToPurchasePlanUsingGETNotFound{}
}

/*RedirectToPurchasePlanUsingGETNotFound handles this case with default header values.

Not Found
*/
type RedirectToPurchasePlanUsingGETNotFound struct {
}

func (o *RedirectToPurchasePlanUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /payment-plans][%d] redirectToPurchasePlanUsingGETNotFound ", 404)
}

func (o *RedirectToPurchasePlanUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
