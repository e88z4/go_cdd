// Code generated by go-swagger; DO NOT EDIT.

package application_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetAllApplicationSourcesUsingGETReader is a Reader for the GetAllApplicationSourcesUsingGET structure.
type GetAllApplicationSourcesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllApplicationSourcesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllApplicationSourcesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllApplicationSourcesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllApplicationSourcesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllApplicationSourcesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllApplicationSourcesUsingGETOK creates a GetAllApplicationSourcesUsingGETOK with default headers values
func NewGetAllApplicationSourcesUsingGETOK() *GetAllApplicationSourcesUsingGETOK {
	return &GetAllApplicationSourcesUsingGETOK{}
}

/*GetAllApplicationSourcesUsingGETOK handles this case with default header values.

OK
*/
type GetAllApplicationSourcesUsingGETOK struct {
	Payload *models.ListHolderDto
}

func (o *GetAllApplicationSourcesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /application-sources][%d] getAllApplicationSourcesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllApplicationSourcesUsingGETOK) GetPayload() *models.ListHolderDto {
	return o.Payload
}

func (o *GetAllApplicationSourcesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListHolderDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllApplicationSourcesUsingGETUnauthorized creates a GetAllApplicationSourcesUsingGETUnauthorized with default headers values
func NewGetAllApplicationSourcesUsingGETUnauthorized() *GetAllApplicationSourcesUsingGETUnauthorized {
	return &GetAllApplicationSourcesUsingGETUnauthorized{}
}

/*GetAllApplicationSourcesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllApplicationSourcesUsingGETUnauthorized struct {
}

func (o *GetAllApplicationSourcesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /application-sources][%d] getAllApplicationSourcesUsingGETUnauthorized ", 401)
}

func (o *GetAllApplicationSourcesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationSourcesUsingGETForbidden creates a GetAllApplicationSourcesUsingGETForbidden with default headers values
func NewGetAllApplicationSourcesUsingGETForbidden() *GetAllApplicationSourcesUsingGETForbidden {
	return &GetAllApplicationSourcesUsingGETForbidden{}
}

/*GetAllApplicationSourcesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllApplicationSourcesUsingGETForbidden struct {
}

func (o *GetAllApplicationSourcesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /application-sources][%d] getAllApplicationSourcesUsingGETForbidden ", 403)
}

func (o *GetAllApplicationSourcesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationSourcesUsingGETNotFound creates a GetAllApplicationSourcesUsingGETNotFound with default headers values
func NewGetAllApplicationSourcesUsingGETNotFound() *GetAllApplicationSourcesUsingGETNotFound {
	return &GetAllApplicationSourcesUsingGETNotFound{}
}

/*GetAllApplicationSourcesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllApplicationSourcesUsingGETNotFound struct {
}

func (o *GetAllApplicationSourcesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /application-sources][%d] getAllApplicationSourcesUsingGETNotFound ", 404)
}

func (o *GetAllApplicationSourcesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
