// Code generated by go-swagger; DO NOT EDIT.

package application_source

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// SyncApplicationSourceUsingPATCHReader is a Reader for the SyncApplicationSourceUsingPATCH structure.
type SyncApplicationSourceUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncApplicationSourceUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncApplicationSourceUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSyncApplicationSourceUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSyncApplicationSourceUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSyncApplicationSourceUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSyncApplicationSourceUsingPATCHOK creates a SyncApplicationSourceUsingPATCHOK with default headers values
func NewSyncApplicationSourceUsingPATCHOK() *SyncApplicationSourceUsingPATCHOK {
	return &SyncApplicationSourceUsingPATCHOK{}
}

/*SyncApplicationSourceUsingPATCHOK handles this case with default header values.

OK
*/
type SyncApplicationSourceUsingPATCHOK struct {
	Payload *models.ApplicationSourceDto
}

func (o *SyncApplicationSourceUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /application-sources/{applicationSourceId}/sync][%d] syncApplicationSourceUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *SyncApplicationSourceUsingPATCHOK) GetPayload() *models.ApplicationSourceDto {
	return o.Payload
}

func (o *SyncApplicationSourceUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationSourceDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncApplicationSourceUsingPATCHNoContent creates a SyncApplicationSourceUsingPATCHNoContent with default headers values
func NewSyncApplicationSourceUsingPATCHNoContent() *SyncApplicationSourceUsingPATCHNoContent {
	return &SyncApplicationSourceUsingPATCHNoContent{}
}

/*SyncApplicationSourceUsingPATCHNoContent handles this case with default header values.

No Content
*/
type SyncApplicationSourceUsingPATCHNoContent struct {
}

func (o *SyncApplicationSourceUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /application-sources/{applicationSourceId}/sync][%d] syncApplicationSourceUsingPATCHNoContent ", 204)
}

func (o *SyncApplicationSourceUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncApplicationSourceUsingPATCHUnauthorized creates a SyncApplicationSourceUsingPATCHUnauthorized with default headers values
func NewSyncApplicationSourceUsingPATCHUnauthorized() *SyncApplicationSourceUsingPATCHUnauthorized {
	return &SyncApplicationSourceUsingPATCHUnauthorized{}
}

/*SyncApplicationSourceUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type SyncApplicationSourceUsingPATCHUnauthorized struct {
}

func (o *SyncApplicationSourceUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /application-sources/{applicationSourceId}/sync][%d] syncApplicationSourceUsingPATCHUnauthorized ", 401)
}

func (o *SyncApplicationSourceUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncApplicationSourceUsingPATCHForbidden creates a SyncApplicationSourceUsingPATCHForbidden with default headers values
func NewSyncApplicationSourceUsingPATCHForbidden() *SyncApplicationSourceUsingPATCHForbidden {
	return &SyncApplicationSourceUsingPATCHForbidden{}
}

/*SyncApplicationSourceUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type SyncApplicationSourceUsingPATCHForbidden struct {
}

func (o *SyncApplicationSourceUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /application-sources/{applicationSourceId}/sync][%d] syncApplicationSourceUsingPATCHForbidden ", 403)
}

func (o *SyncApplicationSourceUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
