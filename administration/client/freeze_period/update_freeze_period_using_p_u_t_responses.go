// Code generated by go-swagger; DO NOT EDIT.

package freeze_period

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateFreezePeriodUsingPUTReader is a Reader for the UpdateFreezePeriodUsingPUT structure.
type UpdateFreezePeriodUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFreezePeriodUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFreezePeriodUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateFreezePeriodUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateFreezePeriodUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateFreezePeriodUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateFreezePeriodUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateFreezePeriodUsingPUTOK creates a UpdateFreezePeriodUsingPUTOK with default headers values
func NewUpdateFreezePeriodUsingPUTOK() *UpdateFreezePeriodUsingPUTOK {
	return &UpdateFreezePeriodUsingPUTOK{}
}

/*UpdateFreezePeriodUsingPUTOK handles this case with default header values.

OK
*/
type UpdateFreezePeriodUsingPUTOK struct {
	Payload *models.FreezePeriodDto
}

func (o *UpdateFreezePeriodUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /freeze-periods/{freezePeriodId}][%d] updateFreezePeriodUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateFreezePeriodUsingPUTOK) GetPayload() *models.FreezePeriodDto {
	return o.Payload
}

func (o *UpdateFreezePeriodUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FreezePeriodDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFreezePeriodUsingPUTCreated creates a UpdateFreezePeriodUsingPUTCreated with default headers values
func NewUpdateFreezePeriodUsingPUTCreated() *UpdateFreezePeriodUsingPUTCreated {
	return &UpdateFreezePeriodUsingPUTCreated{}
}

/*UpdateFreezePeriodUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateFreezePeriodUsingPUTCreated struct {
}

func (o *UpdateFreezePeriodUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /freeze-periods/{freezePeriodId}][%d] updateFreezePeriodUsingPUTCreated ", 201)
}

func (o *UpdateFreezePeriodUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFreezePeriodUsingPUTUnauthorized creates a UpdateFreezePeriodUsingPUTUnauthorized with default headers values
func NewUpdateFreezePeriodUsingPUTUnauthorized() *UpdateFreezePeriodUsingPUTUnauthorized {
	return &UpdateFreezePeriodUsingPUTUnauthorized{}
}

/*UpdateFreezePeriodUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateFreezePeriodUsingPUTUnauthorized struct {
}

func (o *UpdateFreezePeriodUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /freeze-periods/{freezePeriodId}][%d] updateFreezePeriodUsingPUTUnauthorized ", 401)
}

func (o *UpdateFreezePeriodUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFreezePeriodUsingPUTForbidden creates a UpdateFreezePeriodUsingPUTForbidden with default headers values
func NewUpdateFreezePeriodUsingPUTForbidden() *UpdateFreezePeriodUsingPUTForbidden {
	return &UpdateFreezePeriodUsingPUTForbidden{}
}

/*UpdateFreezePeriodUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateFreezePeriodUsingPUTForbidden struct {
}

func (o *UpdateFreezePeriodUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /freeze-periods/{freezePeriodId}][%d] updateFreezePeriodUsingPUTForbidden ", 403)
}

func (o *UpdateFreezePeriodUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFreezePeriodUsingPUTNotFound creates a UpdateFreezePeriodUsingPUTNotFound with default headers values
func NewUpdateFreezePeriodUsingPUTNotFound() *UpdateFreezePeriodUsingPUTNotFound {
	return &UpdateFreezePeriodUsingPUTNotFound{}
}

/*UpdateFreezePeriodUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateFreezePeriodUsingPUTNotFound struct {
}

func (o *UpdateFreezePeriodUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /freeze-periods/{freezePeriodId}][%d] updateFreezePeriodUsingPUTNotFound ", 404)
}

func (o *UpdateFreezePeriodUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
