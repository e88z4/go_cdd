// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewPatchSamlDomainUsingPATCHParams creates a new PatchSamlDomainUsingPATCHParams object
// with the default values initialized.
func NewPatchSamlDomainUsingPATCHParams() *PatchSamlDomainUsingPATCHParams {
	var ()
	return &PatchSamlDomainUsingPATCHParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchSamlDomainUsingPATCHParamsWithTimeout creates a new PatchSamlDomainUsingPATCHParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchSamlDomainUsingPATCHParamsWithTimeout(timeout time.Duration) *PatchSamlDomainUsingPATCHParams {
	var ()
	return &PatchSamlDomainUsingPATCHParams{

		timeout: timeout,
	}
}

// NewPatchSamlDomainUsingPATCHParamsWithContext creates a new PatchSamlDomainUsingPATCHParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchSamlDomainUsingPATCHParamsWithContext(ctx context.Context) *PatchSamlDomainUsingPATCHParams {
	var ()
	return &PatchSamlDomainUsingPATCHParams{

		Context: ctx,
	}
}

// NewPatchSamlDomainUsingPATCHParamsWithHTTPClient creates a new PatchSamlDomainUsingPATCHParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchSamlDomainUsingPATCHParamsWithHTTPClient(client *http.Client) *PatchSamlDomainUsingPATCHParams {
	var ()
	return &PatchSamlDomainUsingPATCHParams{
		HTTPClient: client,
	}
}

/*PatchSamlDomainUsingPATCHParams contains all the parameters to send to the API endpoint
for the patch saml domain using p a t c h operation typically these are written to a http.Request
*/
type PatchSamlDomainUsingPATCHParams struct {

	/*SamlDomainDto
	  samlDomainDto

	*/
	SamlDomainDto *models.SamlDomainDto
	/*SamlDomainID
	  samlDomainId

	*/
	SamlDomainID int64
	/*TenantID
	  targetTenantId

	*/
	TenantID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithTimeout(timeout time.Duration) *PatchSamlDomainUsingPATCHParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithContext(ctx context.Context) *PatchSamlDomainUsingPATCHParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithHTTPClient(client *http.Client) *PatchSamlDomainUsingPATCHParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSamlDomainDto adds the samlDomainDto to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithSamlDomainDto(samlDomainDto *models.SamlDomainDto) *PatchSamlDomainUsingPATCHParams {
	o.SetSamlDomainDto(samlDomainDto)
	return o
}

// SetSamlDomainDto adds the samlDomainDto to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetSamlDomainDto(samlDomainDto *models.SamlDomainDto) {
	o.SamlDomainDto = samlDomainDto
}

// WithSamlDomainID adds the samlDomainID to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithSamlDomainID(samlDomainID int64) *PatchSamlDomainUsingPATCHParams {
	o.SetSamlDomainID(samlDomainID)
	return o
}

// SetSamlDomainID adds the samlDomainId to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetSamlDomainID(samlDomainID int64) {
	o.SamlDomainID = samlDomainID
}

// WithTenantID adds the tenantID to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) WithTenantID(tenantID *string) *PatchSamlDomainUsingPATCHParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the patch saml domain using p a t c h params
func (o *PatchSamlDomainUsingPATCHParams) SetTenantID(tenantID *string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchSamlDomainUsingPATCHParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SamlDomainDto != nil {
		if err := r.SetBodyParam(o.SamlDomainDto); err != nil {
			return err
		}
	}

	// path param samlDomainId
	if err := r.SetPathParam("samlDomainId", swag.FormatInt64(o.SamlDomainID)); err != nil {
		return err
	}

	if o.TenantID != nil {

		// query param tenant_id
		var qrTenantID string
		if o.TenantID != nil {
			qrTenantID = *o.TenantID
		}
		qTenantID := qrTenantID
		if qTenantID != "" {
			if err := r.SetQueryParam("tenant_id", qTenantID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
