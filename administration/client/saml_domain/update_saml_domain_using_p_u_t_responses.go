// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateSamlDomainUsingPUTReader is a Reader for the UpdateSamlDomainUsingPUT structure.
type UpdateSamlDomainUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSamlDomainUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSamlDomainUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateSamlDomainUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateSamlDomainUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSamlDomainUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSamlDomainUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSamlDomainUsingPUTOK creates a UpdateSamlDomainUsingPUTOK with default headers values
func NewUpdateSamlDomainUsingPUTOK() *UpdateSamlDomainUsingPUTOK {
	return &UpdateSamlDomainUsingPUTOK{}
}

/*UpdateSamlDomainUsingPUTOK handles this case with default header values.

OK
*/
type UpdateSamlDomainUsingPUTOK struct {
	Payload *models.SamlDomainDto
}

func (o *UpdateSamlDomainUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /saml-domains/{samlDomainId}][%d] updateSamlDomainUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateSamlDomainUsingPUTOK) GetPayload() *models.SamlDomainDto {
	return o.Payload
}

func (o *UpdateSamlDomainUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SamlDomainDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSamlDomainUsingPUTCreated creates a UpdateSamlDomainUsingPUTCreated with default headers values
func NewUpdateSamlDomainUsingPUTCreated() *UpdateSamlDomainUsingPUTCreated {
	return &UpdateSamlDomainUsingPUTCreated{}
}

/*UpdateSamlDomainUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateSamlDomainUsingPUTCreated struct {
}

func (o *UpdateSamlDomainUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /saml-domains/{samlDomainId}][%d] updateSamlDomainUsingPUTCreated ", 201)
}

func (o *UpdateSamlDomainUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSamlDomainUsingPUTUnauthorized creates a UpdateSamlDomainUsingPUTUnauthorized with default headers values
func NewUpdateSamlDomainUsingPUTUnauthorized() *UpdateSamlDomainUsingPUTUnauthorized {
	return &UpdateSamlDomainUsingPUTUnauthorized{}
}

/*UpdateSamlDomainUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateSamlDomainUsingPUTUnauthorized struct {
}

func (o *UpdateSamlDomainUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /saml-domains/{samlDomainId}][%d] updateSamlDomainUsingPUTUnauthorized ", 401)
}

func (o *UpdateSamlDomainUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSamlDomainUsingPUTForbidden creates a UpdateSamlDomainUsingPUTForbidden with default headers values
func NewUpdateSamlDomainUsingPUTForbidden() *UpdateSamlDomainUsingPUTForbidden {
	return &UpdateSamlDomainUsingPUTForbidden{}
}

/*UpdateSamlDomainUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateSamlDomainUsingPUTForbidden struct {
}

func (o *UpdateSamlDomainUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /saml-domains/{samlDomainId}][%d] updateSamlDomainUsingPUTForbidden ", 403)
}

func (o *UpdateSamlDomainUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSamlDomainUsingPUTNotFound creates a UpdateSamlDomainUsingPUTNotFound with default headers values
func NewUpdateSamlDomainUsingPUTNotFound() *UpdateSamlDomainUsingPUTNotFound {
	return &UpdateSamlDomainUsingPUTNotFound{}
}

/*UpdateSamlDomainUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateSamlDomainUsingPUTNotFound struct {
}

func (o *UpdateSamlDomainUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /saml-domains/{samlDomainId}][%d] updateSamlDomainUsingPUTNotFound ", 404)
}

func (o *UpdateSamlDomainUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
