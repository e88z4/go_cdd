// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PatchAllSamlDomainsUsingPATCHReader is a Reader for the PatchAllSamlDomainsUsingPATCH structure.
type PatchAllSamlDomainsUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAllSamlDomainsUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchAllSamlDomainsUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchAllSamlDomainsUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchAllSamlDomainsUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchAllSamlDomainsUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchAllSamlDomainsUsingPATCHOK creates a PatchAllSamlDomainsUsingPATCHOK with default headers values
func NewPatchAllSamlDomainsUsingPATCHOK() *PatchAllSamlDomainsUsingPATCHOK {
	return &PatchAllSamlDomainsUsingPATCHOK{}
}

/*PatchAllSamlDomainsUsingPATCHOK handles this case with default header values.

OK
*/
type PatchAllSamlDomainsUsingPATCHOK struct {
}

func (o *PatchAllSamlDomainsUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /saml-domains][%d] patchAllSamlDomainsUsingPATCHOK ", 200)
}

func (o *PatchAllSamlDomainsUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAllSamlDomainsUsingPATCHNoContent creates a PatchAllSamlDomainsUsingPATCHNoContent with default headers values
func NewPatchAllSamlDomainsUsingPATCHNoContent() *PatchAllSamlDomainsUsingPATCHNoContent {
	return &PatchAllSamlDomainsUsingPATCHNoContent{}
}

/*PatchAllSamlDomainsUsingPATCHNoContent handles this case with default header values.

No Content
*/
type PatchAllSamlDomainsUsingPATCHNoContent struct {
}

func (o *PatchAllSamlDomainsUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /saml-domains][%d] patchAllSamlDomainsUsingPATCHNoContent ", 204)
}

func (o *PatchAllSamlDomainsUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAllSamlDomainsUsingPATCHUnauthorized creates a PatchAllSamlDomainsUsingPATCHUnauthorized with default headers values
func NewPatchAllSamlDomainsUsingPATCHUnauthorized() *PatchAllSamlDomainsUsingPATCHUnauthorized {
	return &PatchAllSamlDomainsUsingPATCHUnauthorized{}
}

/*PatchAllSamlDomainsUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchAllSamlDomainsUsingPATCHUnauthorized struct {
}

func (o *PatchAllSamlDomainsUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /saml-domains][%d] patchAllSamlDomainsUsingPATCHUnauthorized ", 401)
}

func (o *PatchAllSamlDomainsUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAllSamlDomainsUsingPATCHForbidden creates a PatchAllSamlDomainsUsingPATCHForbidden with default headers values
func NewPatchAllSamlDomainsUsingPATCHForbidden() *PatchAllSamlDomainsUsingPATCHForbidden {
	return &PatchAllSamlDomainsUsingPATCHForbidden{}
}

/*PatchAllSamlDomainsUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type PatchAllSamlDomainsUsingPATCHForbidden struct {
}

func (o *PatchAllSamlDomainsUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /saml-domains][%d] patchAllSamlDomainsUsingPATCHForbidden ", 403)
}

func (o *PatchAllSamlDomainsUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
