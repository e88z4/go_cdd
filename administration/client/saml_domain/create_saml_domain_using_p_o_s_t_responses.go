// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// CreateSamlDomainUsingPOSTReader is a Reader for the CreateSamlDomainUsingPOST structure.
type CreateSamlDomainUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSamlDomainUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSamlDomainUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateSamlDomainUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateSamlDomainUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSamlDomainUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSamlDomainUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSamlDomainUsingPOSTOK creates a CreateSamlDomainUsingPOSTOK with default headers values
func NewCreateSamlDomainUsingPOSTOK() *CreateSamlDomainUsingPOSTOK {
	return &CreateSamlDomainUsingPOSTOK{}
}

/*CreateSamlDomainUsingPOSTOK handles this case with default header values.

OK
*/
type CreateSamlDomainUsingPOSTOK struct {
	Payload *models.SamlDomainDto
}

func (o *CreateSamlDomainUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /saml-domains][%d] createSamlDomainUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateSamlDomainUsingPOSTOK) GetPayload() *models.SamlDomainDto {
	return o.Payload
}

func (o *CreateSamlDomainUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SamlDomainDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSamlDomainUsingPOSTCreated creates a CreateSamlDomainUsingPOSTCreated with default headers values
func NewCreateSamlDomainUsingPOSTCreated() *CreateSamlDomainUsingPOSTCreated {
	return &CreateSamlDomainUsingPOSTCreated{}
}

/*CreateSamlDomainUsingPOSTCreated handles this case with default header values.

Created
*/
type CreateSamlDomainUsingPOSTCreated struct {
}

func (o *CreateSamlDomainUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /saml-domains][%d] createSamlDomainUsingPOSTCreated ", 201)
}

func (o *CreateSamlDomainUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSamlDomainUsingPOSTUnauthorized creates a CreateSamlDomainUsingPOSTUnauthorized with default headers values
func NewCreateSamlDomainUsingPOSTUnauthorized() *CreateSamlDomainUsingPOSTUnauthorized {
	return &CreateSamlDomainUsingPOSTUnauthorized{}
}

/*CreateSamlDomainUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateSamlDomainUsingPOSTUnauthorized struct {
}

func (o *CreateSamlDomainUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /saml-domains][%d] createSamlDomainUsingPOSTUnauthorized ", 401)
}

func (o *CreateSamlDomainUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSamlDomainUsingPOSTForbidden creates a CreateSamlDomainUsingPOSTForbidden with default headers values
func NewCreateSamlDomainUsingPOSTForbidden() *CreateSamlDomainUsingPOSTForbidden {
	return &CreateSamlDomainUsingPOSTForbidden{}
}

/*CreateSamlDomainUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type CreateSamlDomainUsingPOSTForbidden struct {
}

func (o *CreateSamlDomainUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /saml-domains][%d] createSamlDomainUsingPOSTForbidden ", 403)
}

func (o *CreateSamlDomainUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSamlDomainUsingPOSTNotFound creates a CreateSamlDomainUsingPOSTNotFound with default headers values
func NewCreateSamlDomainUsingPOSTNotFound() *CreateSamlDomainUsingPOSTNotFound {
	return &CreateSamlDomainUsingPOSTNotFound{}
}

/*CreateSamlDomainUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type CreateSamlDomainUsingPOSTNotFound struct {
}

func (o *CreateSamlDomainUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /saml-domains][%d] createSamlDomainUsingPOSTNotFound ", 404)
}

func (o *CreateSamlDomainUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
