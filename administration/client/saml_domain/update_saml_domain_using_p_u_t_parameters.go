// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewUpdateSamlDomainUsingPUTParams creates a new UpdateSamlDomainUsingPUTParams object
// with the default values initialized.
func NewUpdateSamlDomainUsingPUTParams() *UpdateSamlDomainUsingPUTParams {
	var ()
	return &UpdateSamlDomainUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSamlDomainUsingPUTParamsWithTimeout creates a new UpdateSamlDomainUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateSamlDomainUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateSamlDomainUsingPUTParams {
	var ()
	return &UpdateSamlDomainUsingPUTParams{

		timeout: timeout,
	}
}

// NewUpdateSamlDomainUsingPUTParamsWithContext creates a new UpdateSamlDomainUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateSamlDomainUsingPUTParamsWithContext(ctx context.Context) *UpdateSamlDomainUsingPUTParams {
	var ()
	return &UpdateSamlDomainUsingPUTParams{

		Context: ctx,
	}
}

// NewUpdateSamlDomainUsingPUTParamsWithHTTPClient creates a new UpdateSamlDomainUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateSamlDomainUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateSamlDomainUsingPUTParams {
	var ()
	return &UpdateSamlDomainUsingPUTParams{
		HTTPClient: client,
	}
}

/*UpdateSamlDomainUsingPUTParams contains all the parameters to send to the API endpoint
for the update saml domain using p u t operation typically these are written to a http.Request
*/
type UpdateSamlDomainUsingPUTParams struct {

	/*SamlDomainDto
	  samlDomainDto

	*/
	SamlDomainDto *models.SamlDomainDto
	/*SamlDomainID
	  samlDomainId

	*/
	SamlDomainID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateSamlDomainUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) WithContext(ctx context.Context) *UpdateSamlDomainUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateSamlDomainUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSamlDomainDto adds the samlDomainDto to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) WithSamlDomainDto(samlDomainDto *models.SamlDomainDto) *UpdateSamlDomainUsingPUTParams {
	o.SetSamlDomainDto(samlDomainDto)
	return o
}

// SetSamlDomainDto adds the samlDomainDto to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) SetSamlDomainDto(samlDomainDto *models.SamlDomainDto) {
	o.SamlDomainDto = samlDomainDto
}

// WithSamlDomainID adds the samlDomainID to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) WithSamlDomainID(samlDomainID int64) *UpdateSamlDomainUsingPUTParams {
	o.SetSamlDomainID(samlDomainID)
	return o
}

// SetSamlDomainID adds the samlDomainId to the update saml domain using p u t params
func (o *UpdateSamlDomainUsingPUTParams) SetSamlDomainID(samlDomainID int64) {
	o.SamlDomainID = samlDomainID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSamlDomainUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SamlDomainDto != nil {
		if err := r.SetBodyParam(o.SamlDomainDto); err != nil {
			return err
		}
	}

	// path param samlDomainId
	if err := r.SetPathParam("samlDomainId", swag.FormatInt64(o.SamlDomainID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
