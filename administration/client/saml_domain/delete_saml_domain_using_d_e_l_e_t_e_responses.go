// Code generated by go-swagger; DO NOT EDIT.

package saml_domain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSamlDomainUsingDELETEReader is a Reader for the DeleteSamlDomainUsingDELETE structure.
type DeleteSamlDomainUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSamlDomainUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSamlDomainUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteSamlDomainUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteSamlDomainUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteSamlDomainUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSamlDomainUsingDELETEOK creates a DeleteSamlDomainUsingDELETEOK with default headers values
func NewDeleteSamlDomainUsingDELETEOK() *DeleteSamlDomainUsingDELETEOK {
	return &DeleteSamlDomainUsingDELETEOK{}
}

/*DeleteSamlDomainUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteSamlDomainUsingDELETEOK struct {
}

func (o *DeleteSamlDomainUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /saml-domains/{samlDomainId}][%d] deleteSamlDomainUsingDELETEOK ", 200)
}

func (o *DeleteSamlDomainUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSamlDomainUsingDELETENoContent creates a DeleteSamlDomainUsingDELETENoContent with default headers values
func NewDeleteSamlDomainUsingDELETENoContent() *DeleteSamlDomainUsingDELETENoContent {
	return &DeleteSamlDomainUsingDELETENoContent{}
}

/*DeleteSamlDomainUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteSamlDomainUsingDELETENoContent struct {
}

func (o *DeleteSamlDomainUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /saml-domains/{samlDomainId}][%d] deleteSamlDomainUsingDELETENoContent ", 204)
}

func (o *DeleteSamlDomainUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSamlDomainUsingDELETEUnauthorized creates a DeleteSamlDomainUsingDELETEUnauthorized with default headers values
func NewDeleteSamlDomainUsingDELETEUnauthorized() *DeleteSamlDomainUsingDELETEUnauthorized {
	return &DeleteSamlDomainUsingDELETEUnauthorized{}
}

/*DeleteSamlDomainUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteSamlDomainUsingDELETEUnauthorized struct {
}

func (o *DeleteSamlDomainUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /saml-domains/{samlDomainId}][%d] deleteSamlDomainUsingDELETEUnauthorized ", 401)
}

func (o *DeleteSamlDomainUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSamlDomainUsingDELETEForbidden creates a DeleteSamlDomainUsingDELETEForbidden with default headers values
func NewDeleteSamlDomainUsingDELETEForbidden() *DeleteSamlDomainUsingDELETEForbidden {
	return &DeleteSamlDomainUsingDELETEForbidden{}
}

/*DeleteSamlDomainUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteSamlDomainUsingDELETEForbidden struct {
}

func (o *DeleteSamlDomainUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /saml-domains/{samlDomainId}][%d] deleteSamlDomainUsingDELETEForbidden ", 403)
}

func (o *DeleteSamlDomainUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
