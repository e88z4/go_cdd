// Code generated by go-swagger; DO NOT EDIT.

package system_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewTestMicroservicesConnectivityUsingPOSTParams creates a new TestMicroservicesConnectivityUsingPOSTParams object
// with the default values initialized.
func NewTestMicroservicesConnectivityUsingPOSTParams() *TestMicroservicesConnectivityUsingPOSTParams {
	var ()
	return &TestMicroservicesConnectivityUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTestMicroservicesConnectivityUsingPOSTParamsWithTimeout creates a new TestMicroservicesConnectivityUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTestMicroservicesConnectivityUsingPOSTParamsWithTimeout(timeout time.Duration) *TestMicroservicesConnectivityUsingPOSTParams {
	var ()
	return &TestMicroservicesConnectivityUsingPOSTParams{

		timeout: timeout,
	}
}

// NewTestMicroservicesConnectivityUsingPOSTParamsWithContext creates a new TestMicroservicesConnectivityUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewTestMicroservicesConnectivityUsingPOSTParamsWithContext(ctx context.Context) *TestMicroservicesConnectivityUsingPOSTParams {
	var ()
	return &TestMicroservicesConnectivityUsingPOSTParams{

		Context: ctx,
	}
}

// NewTestMicroservicesConnectivityUsingPOSTParamsWithHTTPClient creates a new TestMicroservicesConnectivityUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTestMicroservicesConnectivityUsingPOSTParamsWithHTTPClient(client *http.Client) *TestMicroservicesConnectivityUsingPOSTParams {
	var ()
	return &TestMicroservicesConnectivityUsingPOSTParams{
		HTTPClient: client,
	}
}

/*TestMicroservicesConnectivityUsingPOSTParams contains all the parameters to send to the API endpoint
for the test microservices connectivity using p o s t operation typically these are written to a http.Request
*/
type TestMicroservicesConnectivityUsingPOSTParams struct {

	/*ServicesDto
	  servicesDto

	*/
	ServicesDto *models.MicroservicesDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) WithTimeout(timeout time.Duration) *TestMicroservicesConnectivityUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) WithContext(ctx context.Context) *TestMicroservicesConnectivityUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) WithHTTPClient(client *http.Client) *TestMicroservicesConnectivityUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServicesDto adds the servicesDto to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) WithServicesDto(servicesDto *models.MicroservicesDto) *TestMicroservicesConnectivityUsingPOSTParams {
	o.SetServicesDto(servicesDto)
	return o
}

// SetServicesDto adds the servicesDto to the test microservices connectivity using p o s t params
func (o *TestMicroservicesConnectivityUsingPOSTParams) SetServicesDto(servicesDto *models.MicroservicesDto) {
	o.ServicesDto = servicesDto
}

// WriteToRequest writes these params to a swagger request
func (o *TestMicroservicesConnectivityUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ServicesDto != nil {
		if err := r.SetBodyParam(o.ServicesDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
