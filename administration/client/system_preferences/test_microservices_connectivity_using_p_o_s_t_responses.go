// Code generated by go-swagger; DO NOT EDIT.

package system_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// TestMicroservicesConnectivityUsingPOSTReader is a Reader for the TestMicroservicesConnectivityUsingPOST structure.
type TestMicroservicesConnectivityUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestMicroservicesConnectivityUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestMicroservicesConnectivityUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewTestMicroservicesConnectivityUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTestMicroservicesConnectivityUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTestMicroservicesConnectivityUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTestMicroservicesConnectivityUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTestMicroservicesConnectivityUsingPOSTOK creates a TestMicroservicesConnectivityUsingPOSTOK with default headers values
func NewTestMicroservicesConnectivityUsingPOSTOK() *TestMicroservicesConnectivityUsingPOSTOK {
	return &TestMicroservicesConnectivityUsingPOSTOK{}
}

/*TestMicroservicesConnectivityUsingPOSTOK handles this case with default header values.

OK
*/
type TestMicroservicesConnectivityUsingPOSTOK struct {
	Payload *models.ConnectableEntityDto
}

func (o *TestMicroservicesConnectivityUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /adaptive-testing/connectivity-tests][%d] testMicroservicesConnectivityUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *TestMicroservicesConnectivityUsingPOSTOK) GetPayload() *models.ConnectableEntityDto {
	return o.Payload
}

func (o *TestMicroservicesConnectivityUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConnectableEntityDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestMicroservicesConnectivityUsingPOSTCreated creates a TestMicroservicesConnectivityUsingPOSTCreated with default headers values
func NewTestMicroservicesConnectivityUsingPOSTCreated() *TestMicroservicesConnectivityUsingPOSTCreated {
	return &TestMicroservicesConnectivityUsingPOSTCreated{}
}

/*TestMicroservicesConnectivityUsingPOSTCreated handles this case with default header values.

Created
*/
type TestMicroservicesConnectivityUsingPOSTCreated struct {
}

func (o *TestMicroservicesConnectivityUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /adaptive-testing/connectivity-tests][%d] testMicroservicesConnectivityUsingPOSTCreated ", 201)
}

func (o *TestMicroservicesConnectivityUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestMicroservicesConnectivityUsingPOSTUnauthorized creates a TestMicroservicesConnectivityUsingPOSTUnauthorized with default headers values
func NewTestMicroservicesConnectivityUsingPOSTUnauthorized() *TestMicroservicesConnectivityUsingPOSTUnauthorized {
	return &TestMicroservicesConnectivityUsingPOSTUnauthorized{}
}

/*TestMicroservicesConnectivityUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type TestMicroservicesConnectivityUsingPOSTUnauthorized struct {
}

func (o *TestMicroservicesConnectivityUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /adaptive-testing/connectivity-tests][%d] testMicroservicesConnectivityUsingPOSTUnauthorized ", 401)
}

func (o *TestMicroservicesConnectivityUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestMicroservicesConnectivityUsingPOSTForbidden creates a TestMicroservicesConnectivityUsingPOSTForbidden with default headers values
func NewTestMicroservicesConnectivityUsingPOSTForbidden() *TestMicroservicesConnectivityUsingPOSTForbidden {
	return &TestMicroservicesConnectivityUsingPOSTForbidden{}
}

/*TestMicroservicesConnectivityUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type TestMicroservicesConnectivityUsingPOSTForbidden struct {
}

func (o *TestMicroservicesConnectivityUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /adaptive-testing/connectivity-tests][%d] testMicroservicesConnectivityUsingPOSTForbidden ", 403)
}

func (o *TestMicroservicesConnectivityUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTestMicroservicesConnectivityUsingPOSTNotFound creates a TestMicroservicesConnectivityUsingPOSTNotFound with default headers values
func NewTestMicroservicesConnectivityUsingPOSTNotFound() *TestMicroservicesConnectivityUsingPOSTNotFound {
	return &TestMicroservicesConnectivityUsingPOSTNotFound{}
}

/*TestMicroservicesConnectivityUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type TestMicroservicesConnectivityUsingPOSTNotFound struct {
}

func (o *TestMicroservicesConnectivityUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /adaptive-testing/connectivity-tests][%d] testMicroservicesConnectivityUsingPOSTNotFound ", 404)
}

func (o *TestMicroservicesConnectivityUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
