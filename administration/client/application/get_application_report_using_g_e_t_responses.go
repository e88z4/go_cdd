// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetApplicationReportUsingGETReader is a Reader for the GetApplicationReportUsingGET structure.
type GetApplicationReportUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationReportUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationReportUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationReportUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationReportUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationReportUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetApplicationReportUsingGETOK creates a GetApplicationReportUsingGETOK with default headers values
func NewGetApplicationReportUsingGETOK() *GetApplicationReportUsingGETOK {
	return &GetApplicationReportUsingGETOK{}
}

/*GetApplicationReportUsingGETOK handles this case with default header values.

OK
*/
type GetApplicationReportUsingGETOK struct {
	Payload *models.ApplicationReportDto
}

func (o *GetApplicationReportUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/environments-version][%d] getApplicationReportUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetApplicationReportUsingGETOK) GetPayload() *models.ApplicationReportDto {
	return o.Payload
}

func (o *GetApplicationReportUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationReportDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationReportUsingGETUnauthorized creates a GetApplicationReportUsingGETUnauthorized with default headers values
func NewGetApplicationReportUsingGETUnauthorized() *GetApplicationReportUsingGETUnauthorized {
	return &GetApplicationReportUsingGETUnauthorized{}
}

/*GetApplicationReportUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetApplicationReportUsingGETUnauthorized struct {
}

func (o *GetApplicationReportUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/environments-version][%d] getApplicationReportUsingGETUnauthorized ", 401)
}

func (o *GetApplicationReportUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationReportUsingGETForbidden creates a GetApplicationReportUsingGETForbidden with default headers values
func NewGetApplicationReportUsingGETForbidden() *GetApplicationReportUsingGETForbidden {
	return &GetApplicationReportUsingGETForbidden{}
}

/*GetApplicationReportUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetApplicationReportUsingGETForbidden struct {
}

func (o *GetApplicationReportUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/environments-version][%d] getApplicationReportUsingGETForbidden ", 403)
}

func (o *GetApplicationReportUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationReportUsingGETNotFound creates a GetApplicationReportUsingGETNotFound with default headers values
func NewGetApplicationReportUsingGETNotFound() *GetApplicationReportUsingGETNotFound {
	return &GetApplicationReportUsingGETNotFound{}
}

/*GetApplicationReportUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetApplicationReportUsingGETNotFound struct {
}

func (o *GetApplicationReportUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/environments-version][%d] getApplicationReportUsingGETNotFound ", 404)
}

func (o *GetApplicationReportUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
