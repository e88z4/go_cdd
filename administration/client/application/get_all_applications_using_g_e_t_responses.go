// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetAllApplicationsUsingGETReader is a Reader for the GetAllApplicationsUsingGET structure.
type GetAllApplicationsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllApplicationsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllApplicationsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllApplicationsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllApplicationsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllApplicationsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAllApplicationsUsingGETOK creates a GetAllApplicationsUsingGETOK with default headers values
func NewGetAllApplicationsUsingGETOK() *GetAllApplicationsUsingGETOK {
	return &GetAllApplicationsUsingGETOK{}
}

/*GetAllApplicationsUsingGETOK handles this case with default header values.

OK
*/
type GetAllApplicationsUsingGETOK struct {
	Payload *models.PagedResultDtoApplicationDto
}

func (o *GetAllApplicationsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications][%d] getAllApplicationsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetAllApplicationsUsingGETOK) GetPayload() *models.PagedResultDtoApplicationDto {
	return o.Payload
}

func (o *GetAllApplicationsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoApplicationDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllApplicationsUsingGETUnauthorized creates a GetAllApplicationsUsingGETUnauthorized with default headers values
func NewGetAllApplicationsUsingGETUnauthorized() *GetAllApplicationsUsingGETUnauthorized {
	return &GetAllApplicationsUsingGETUnauthorized{}
}

/*GetAllApplicationsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetAllApplicationsUsingGETUnauthorized struct {
}

func (o *GetAllApplicationsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications][%d] getAllApplicationsUsingGETUnauthorized ", 401)
}

func (o *GetAllApplicationsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationsUsingGETForbidden creates a GetAllApplicationsUsingGETForbidden with default headers values
func NewGetAllApplicationsUsingGETForbidden() *GetAllApplicationsUsingGETForbidden {
	return &GetAllApplicationsUsingGETForbidden{}
}

/*GetAllApplicationsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetAllApplicationsUsingGETForbidden struct {
}

func (o *GetAllApplicationsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications][%d] getAllApplicationsUsingGETForbidden ", 403)
}

func (o *GetAllApplicationsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationsUsingGETNotFound creates a GetAllApplicationsUsingGETNotFound with default headers values
func NewGetAllApplicationsUsingGETNotFound() *GetAllApplicationsUsingGETNotFound {
	return &GetAllApplicationsUsingGETNotFound{}
}

/*GetAllApplicationsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetAllApplicationsUsingGETNotFound struct {
}

func (o *GetAllApplicationsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications][%d] getAllApplicationsUsingGETNotFound ", 404)
}

func (o *GetAllApplicationsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
