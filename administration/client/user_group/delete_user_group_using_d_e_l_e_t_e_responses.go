// Code generated by go-swagger; DO NOT EDIT.

package user_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteUserGroupUsingDELETEReader is a Reader for the DeleteUserGroupUsingDELETE structure.
type DeleteUserGroupUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserGroupUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserGroupUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteUserGroupUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteUserGroupUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteUserGroupUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteUserGroupUsingDELETEOK creates a DeleteUserGroupUsingDELETEOK with default headers values
func NewDeleteUserGroupUsingDELETEOK() *DeleteUserGroupUsingDELETEOK {
	return &DeleteUserGroupUsingDELETEOK{}
}

/*DeleteUserGroupUsingDELETEOK handles this case with default header values.

OK
*/
type DeleteUserGroupUsingDELETEOK struct {
}

func (o *DeleteUserGroupUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /user-groups/{userGroupId}][%d] deleteUserGroupUsingDELETEOK ", 200)
}

func (o *DeleteUserGroupUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserGroupUsingDELETENoContent creates a DeleteUserGroupUsingDELETENoContent with default headers values
func NewDeleteUserGroupUsingDELETENoContent() *DeleteUserGroupUsingDELETENoContent {
	return &DeleteUserGroupUsingDELETENoContent{}
}

/*DeleteUserGroupUsingDELETENoContent handles this case with default header values.

No Content
*/
type DeleteUserGroupUsingDELETENoContent struct {
}

func (o *DeleteUserGroupUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /user-groups/{userGroupId}][%d] deleteUserGroupUsingDELETENoContent ", 204)
}

func (o *DeleteUserGroupUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserGroupUsingDELETEUnauthorized creates a DeleteUserGroupUsingDELETEUnauthorized with default headers values
func NewDeleteUserGroupUsingDELETEUnauthorized() *DeleteUserGroupUsingDELETEUnauthorized {
	return &DeleteUserGroupUsingDELETEUnauthorized{}
}

/*DeleteUserGroupUsingDELETEUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteUserGroupUsingDELETEUnauthorized struct {
}

func (o *DeleteUserGroupUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /user-groups/{userGroupId}][%d] deleteUserGroupUsingDELETEUnauthorized ", 401)
}

func (o *DeleteUserGroupUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteUserGroupUsingDELETEForbidden creates a DeleteUserGroupUsingDELETEForbidden with default headers values
func NewDeleteUserGroupUsingDELETEForbidden() *DeleteUserGroupUsingDELETEForbidden {
	return &DeleteUserGroupUsingDELETEForbidden{}
}

/*DeleteUserGroupUsingDELETEForbidden handles this case with default header values.

Forbidden
*/
type DeleteUserGroupUsingDELETEForbidden struct {
}

func (o *DeleteUserGroupUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /user-groups/{userGroupId}][%d] deleteUserGroupUsingDELETEForbidden ", 403)
}

func (o *DeleteUserGroupUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
