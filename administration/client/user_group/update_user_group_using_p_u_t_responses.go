// Code generated by go-swagger; DO NOT EDIT.

package user_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateUserGroupUsingPUTReader is a Reader for the UpdateUserGroupUsingPUT structure.
type UpdateUserGroupUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserGroupUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserGroupUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateUserGroupUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserGroupUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserGroupUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserGroupUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserGroupUsingPUTOK creates a UpdateUserGroupUsingPUTOK with default headers values
func NewUpdateUserGroupUsingPUTOK() *UpdateUserGroupUsingPUTOK {
	return &UpdateUserGroupUsingPUTOK{}
}

/*UpdateUserGroupUsingPUTOK handles this case with default header values.

OK
*/
type UpdateUserGroupUsingPUTOK struct {
	Payload *models.UserGroupDto
}

func (o *UpdateUserGroupUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /user-groups/{userGroupId}][%d] updateUserGroupUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateUserGroupUsingPUTOK) GetPayload() *models.UserGroupDto {
	return o.Payload
}

func (o *UpdateUserGroupUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroupDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserGroupUsingPUTCreated creates a UpdateUserGroupUsingPUTCreated with default headers values
func NewUpdateUserGroupUsingPUTCreated() *UpdateUserGroupUsingPUTCreated {
	return &UpdateUserGroupUsingPUTCreated{}
}

/*UpdateUserGroupUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateUserGroupUsingPUTCreated struct {
}

func (o *UpdateUserGroupUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /user-groups/{userGroupId}][%d] updateUserGroupUsingPUTCreated ", 201)
}

func (o *UpdateUserGroupUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupUsingPUTUnauthorized creates a UpdateUserGroupUsingPUTUnauthorized with default headers values
func NewUpdateUserGroupUsingPUTUnauthorized() *UpdateUserGroupUsingPUTUnauthorized {
	return &UpdateUserGroupUsingPUTUnauthorized{}
}

/*UpdateUserGroupUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserGroupUsingPUTUnauthorized struct {
}

func (o *UpdateUserGroupUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user-groups/{userGroupId}][%d] updateUserGroupUsingPUTUnauthorized ", 401)
}

func (o *UpdateUserGroupUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupUsingPUTForbidden creates a UpdateUserGroupUsingPUTForbidden with default headers values
func NewUpdateUserGroupUsingPUTForbidden() *UpdateUserGroupUsingPUTForbidden {
	return &UpdateUserGroupUsingPUTForbidden{}
}

/*UpdateUserGroupUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserGroupUsingPUTForbidden struct {
}

func (o *UpdateUserGroupUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /user-groups/{userGroupId}][%d] updateUserGroupUsingPUTForbidden ", 403)
}

func (o *UpdateUserGroupUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupUsingPUTNotFound creates a UpdateUserGroupUsingPUTNotFound with default headers values
func NewUpdateUserGroupUsingPUTNotFound() *UpdateUserGroupUsingPUTNotFound {
	return &UpdateUserGroupUsingPUTNotFound{}
}

/*UpdateUserGroupUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateUserGroupUsingPUTNotFound struct {
}

func (o *UpdateUserGroupUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /user-groups/{userGroupId}][%d] updateUserGroupUsingPUTNotFound ", 404)
}

func (o *UpdateUserGroupUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
