// Code generated by go-swagger; DO NOT EDIT.

package user_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateUserGroupsUsingPUTReader is a Reader for the UpdateUserGroupsUsingPUT structure.
type UpdateUserGroupsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserGroupsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserGroupsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateUserGroupsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserGroupsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserGroupsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserGroupsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserGroupsUsingPUTOK creates a UpdateUserGroupsUsingPUTOK with default headers values
func NewUpdateUserGroupsUsingPUTOK() *UpdateUserGroupsUsingPUTOK {
	return &UpdateUserGroupsUsingPUTOK{}
}

/*UpdateUserGroupsUsingPUTOK handles this case with default header values.

OK
*/
type UpdateUserGroupsUsingPUTOK struct {
	Payload *models.ListHolderDtoUserGroupDto
}

func (o *UpdateUserGroupsUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /user-groups][%d] updateUserGroupsUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateUserGroupsUsingPUTOK) GetPayload() *models.ListHolderDtoUserGroupDto {
	return o.Payload
}

func (o *UpdateUserGroupsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListHolderDtoUserGroupDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserGroupsUsingPUTCreated creates a UpdateUserGroupsUsingPUTCreated with default headers values
func NewUpdateUserGroupsUsingPUTCreated() *UpdateUserGroupsUsingPUTCreated {
	return &UpdateUserGroupsUsingPUTCreated{}
}

/*UpdateUserGroupsUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateUserGroupsUsingPUTCreated struct {
}

func (o *UpdateUserGroupsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /user-groups][%d] updateUserGroupsUsingPUTCreated ", 201)
}

func (o *UpdateUserGroupsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupsUsingPUTUnauthorized creates a UpdateUserGroupsUsingPUTUnauthorized with default headers values
func NewUpdateUserGroupsUsingPUTUnauthorized() *UpdateUserGroupsUsingPUTUnauthorized {
	return &UpdateUserGroupsUsingPUTUnauthorized{}
}

/*UpdateUserGroupsUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserGroupsUsingPUTUnauthorized struct {
}

func (o *UpdateUserGroupsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user-groups][%d] updateUserGroupsUsingPUTUnauthorized ", 401)
}

func (o *UpdateUserGroupsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupsUsingPUTForbidden creates a UpdateUserGroupsUsingPUTForbidden with default headers values
func NewUpdateUserGroupsUsingPUTForbidden() *UpdateUserGroupsUsingPUTForbidden {
	return &UpdateUserGroupsUsingPUTForbidden{}
}

/*UpdateUserGroupsUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserGroupsUsingPUTForbidden struct {
}

func (o *UpdateUserGroupsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /user-groups][%d] updateUserGroupsUsingPUTForbidden ", 403)
}

func (o *UpdateUserGroupsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserGroupsUsingPUTNotFound creates a UpdateUserGroupsUsingPUTNotFound with default headers values
func NewUpdateUserGroupsUsingPUTNotFound() *UpdateUserGroupsUsingPUTNotFound {
	return &UpdateUserGroupsUsingPUTNotFound{}
}

/*UpdateUserGroupsUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateUserGroupsUsingPUTNotFound struct {
}

func (o *UpdateUserGroupsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /user-groups][%d] updateUserGroupsUsingPUTNotFound ", 404)
}

func (o *UpdateUserGroupsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
