// Code generated by go-swagger; DO NOT EDIT.

package user_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetUserGroupUsingGETReader is a Reader for the GetUserGroupUsingGET structure.
type GetUserGroupUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserGroupUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserGroupUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserGroupUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserGroupUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserGroupUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUserGroupUsingGETOK creates a GetUserGroupUsingGETOK with default headers values
func NewGetUserGroupUsingGETOK() *GetUserGroupUsingGETOK {
	return &GetUserGroupUsingGETOK{}
}

/*GetUserGroupUsingGETOK handles this case with default header values.

OK
*/
type GetUserGroupUsingGETOK struct {
	Payload *models.UserGroupDto
}

func (o *GetUserGroupUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /user-groups/{userGroupId}][%d] getUserGroupUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserGroupUsingGETOK) GetPayload() *models.UserGroupDto {
	return o.Payload
}

func (o *GetUserGroupUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroupDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupUsingGETUnauthorized creates a GetUserGroupUsingGETUnauthorized with default headers values
func NewGetUserGroupUsingGETUnauthorized() *GetUserGroupUsingGETUnauthorized {
	return &GetUserGroupUsingGETUnauthorized{}
}

/*GetUserGroupUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetUserGroupUsingGETUnauthorized struct {
}

func (o *GetUserGroupUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user-groups/{userGroupId}][%d] getUserGroupUsingGETUnauthorized ", 401)
}

func (o *GetUserGroupUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupUsingGETForbidden creates a GetUserGroupUsingGETForbidden with default headers values
func NewGetUserGroupUsingGETForbidden() *GetUserGroupUsingGETForbidden {
	return &GetUserGroupUsingGETForbidden{}
}

/*GetUserGroupUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetUserGroupUsingGETForbidden struct {
}

func (o *GetUserGroupUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /user-groups/{userGroupId}][%d] getUserGroupUsingGETForbidden ", 403)
}

func (o *GetUserGroupUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserGroupUsingGETNotFound creates a GetUserGroupUsingGETNotFound with default headers values
func NewGetUserGroupUsingGETNotFound() *GetUserGroupUsingGETNotFound {
	return &GetUserGroupUsingGETNotFound{}
}

/*GetUserGroupUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetUserGroupUsingGETNotFound struct {
}

func (o *GetUserGroupUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /user-groups/{userGroupId}][%d] getUserGroupUsingGETNotFound ", 404)
}

func (o *GetUserGroupUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
