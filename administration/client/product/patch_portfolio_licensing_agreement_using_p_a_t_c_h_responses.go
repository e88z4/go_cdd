// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// PatchPortfolioLicensingAgreementUsingPATCHReader is a Reader for the PatchPortfolioLicensingAgreementUsingPATCH structure.
type PatchPortfolioLicensingAgreementUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchPortfolioLicensingAgreementUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchPortfolioLicensingAgreementUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewPatchPortfolioLicensingAgreementUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchPortfolioLicensingAgreementUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchPortfolioLicensingAgreementUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchPortfolioLicensingAgreementUsingPATCHOK creates a PatchPortfolioLicensingAgreementUsingPATCHOK with default headers values
func NewPatchPortfolioLicensingAgreementUsingPATCHOK() *PatchPortfolioLicensingAgreementUsingPATCHOK {
	return &PatchPortfolioLicensingAgreementUsingPATCHOK{}
}

/*PatchPortfolioLicensingAgreementUsingPATCHOK handles this case with default header values.

OK
*/
type PatchPortfolioLicensingAgreementUsingPATCHOK struct {
	Payload *models.PortfolioLicensingAgreementDto
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /product/license][%d] patchPortfolioLicensingAgreementUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHOK) GetPayload() *models.PortfolioLicensingAgreementDto {
	return o.Payload
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PortfolioLicensingAgreementDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPortfolioLicensingAgreementUsingPATCHNoContent creates a PatchPortfolioLicensingAgreementUsingPATCHNoContent with default headers values
func NewPatchPortfolioLicensingAgreementUsingPATCHNoContent() *PatchPortfolioLicensingAgreementUsingPATCHNoContent {
	return &PatchPortfolioLicensingAgreementUsingPATCHNoContent{}
}

/*PatchPortfolioLicensingAgreementUsingPATCHNoContent handles this case with default header values.

No Content
*/
type PatchPortfolioLicensingAgreementUsingPATCHNoContent struct {
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /product/license][%d] patchPortfolioLicensingAgreementUsingPATCHNoContent ", 204)
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchPortfolioLicensingAgreementUsingPATCHUnauthorized creates a PatchPortfolioLicensingAgreementUsingPATCHUnauthorized with default headers values
func NewPatchPortfolioLicensingAgreementUsingPATCHUnauthorized() *PatchPortfolioLicensingAgreementUsingPATCHUnauthorized {
	return &PatchPortfolioLicensingAgreementUsingPATCHUnauthorized{}
}

/*PatchPortfolioLicensingAgreementUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type PatchPortfolioLicensingAgreementUsingPATCHUnauthorized struct {
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /product/license][%d] patchPortfolioLicensingAgreementUsingPATCHUnauthorized ", 401)
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchPortfolioLicensingAgreementUsingPATCHForbidden creates a PatchPortfolioLicensingAgreementUsingPATCHForbidden with default headers values
func NewPatchPortfolioLicensingAgreementUsingPATCHForbidden() *PatchPortfolioLicensingAgreementUsingPATCHForbidden {
	return &PatchPortfolioLicensingAgreementUsingPATCHForbidden{}
}

/*PatchPortfolioLicensingAgreementUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type PatchPortfolioLicensingAgreementUsingPATCHForbidden struct {
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /product/license][%d] patchPortfolioLicensingAgreementUsingPATCHForbidden ", 403)
}

func (o *PatchPortfolioLicensingAgreementUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
