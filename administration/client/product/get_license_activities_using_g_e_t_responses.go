// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetLicenseActivitiesUsingGETReader is a Reader for the GetLicenseActivitiesUsingGET structure.
type GetLicenseActivitiesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLicenseActivitiesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLicenseActivitiesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLicenseActivitiesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLicenseActivitiesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLicenseActivitiesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLicenseActivitiesUsingGETOK creates a GetLicenseActivitiesUsingGETOK with default headers values
func NewGetLicenseActivitiesUsingGETOK() *GetLicenseActivitiesUsingGETOK {
	return &GetLicenseActivitiesUsingGETOK{}
}

/*GetLicenseActivitiesUsingGETOK handles this case with default header values.

OK
*/
type GetLicenseActivitiesUsingGETOK struct {
	Payload *models.PagedResultDtoLicenseActivityDto
}

func (o *GetLicenseActivitiesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /product/license/activities][%d] getLicenseActivitiesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetLicenseActivitiesUsingGETOK) GetPayload() *models.PagedResultDtoLicenseActivityDto {
	return o.Payload
}

func (o *GetLicenseActivitiesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoLicenseActivityDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLicenseActivitiesUsingGETUnauthorized creates a GetLicenseActivitiesUsingGETUnauthorized with default headers values
func NewGetLicenseActivitiesUsingGETUnauthorized() *GetLicenseActivitiesUsingGETUnauthorized {
	return &GetLicenseActivitiesUsingGETUnauthorized{}
}

/*GetLicenseActivitiesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetLicenseActivitiesUsingGETUnauthorized struct {
}

func (o *GetLicenseActivitiesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /product/license/activities][%d] getLicenseActivitiesUsingGETUnauthorized ", 401)
}

func (o *GetLicenseActivitiesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLicenseActivitiesUsingGETForbidden creates a GetLicenseActivitiesUsingGETForbidden with default headers values
func NewGetLicenseActivitiesUsingGETForbidden() *GetLicenseActivitiesUsingGETForbidden {
	return &GetLicenseActivitiesUsingGETForbidden{}
}

/*GetLicenseActivitiesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetLicenseActivitiesUsingGETForbidden struct {
}

func (o *GetLicenseActivitiesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /product/license/activities][%d] getLicenseActivitiesUsingGETForbidden ", 403)
}

func (o *GetLicenseActivitiesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLicenseActivitiesUsingGETNotFound creates a GetLicenseActivitiesUsingGETNotFound with default headers values
func NewGetLicenseActivitiesUsingGETNotFound() *GetLicenseActivitiesUsingGETNotFound {
	return &GetLicenseActivitiesUsingGETNotFound{}
}

/*GetLicenseActivitiesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetLicenseActivitiesUsingGETNotFound struct {
}

func (o *GetLicenseActivitiesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /product/license/activities][%d] getLicenseActivitiesUsingGETNotFound ", 404)
}

func (o *GetLicenseActivitiesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
