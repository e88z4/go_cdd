// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewCreateCustomerFeedbackUsingPOSTParams creates a new CreateCustomerFeedbackUsingPOSTParams object
// with the default values initialized.
func NewCreateCustomerFeedbackUsingPOSTParams() *CreateCustomerFeedbackUsingPOSTParams {
	var ()
	return &CreateCustomerFeedbackUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCustomerFeedbackUsingPOSTParamsWithTimeout creates a new CreateCustomerFeedbackUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateCustomerFeedbackUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateCustomerFeedbackUsingPOSTParams {
	var ()
	return &CreateCustomerFeedbackUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateCustomerFeedbackUsingPOSTParamsWithContext creates a new CreateCustomerFeedbackUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateCustomerFeedbackUsingPOSTParamsWithContext(ctx context.Context) *CreateCustomerFeedbackUsingPOSTParams {
	var ()
	return &CreateCustomerFeedbackUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateCustomerFeedbackUsingPOSTParamsWithHTTPClient creates a new CreateCustomerFeedbackUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateCustomerFeedbackUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateCustomerFeedbackUsingPOSTParams {
	var ()
	return &CreateCustomerFeedbackUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateCustomerFeedbackUsingPOSTParams contains all the parameters to send to the API endpoint
for the create customer feedback using p o s t operation typically these are written to a http.Request
*/
type CreateCustomerFeedbackUsingPOSTParams struct {

	/*MessageDto
	  messageDto

	*/
	MessageDto *models.MessageDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateCustomerFeedbackUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) WithContext(ctx context.Context) *CreateCustomerFeedbackUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateCustomerFeedbackUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMessageDto adds the messageDto to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) WithMessageDto(messageDto *models.MessageDto) *CreateCustomerFeedbackUsingPOSTParams {
	o.SetMessageDto(messageDto)
	return o
}

// SetMessageDto adds the messageDto to the create customer feedback using p o s t params
func (o *CreateCustomerFeedbackUsingPOSTParams) SetMessageDto(messageDto *models.MessageDto) {
	o.MessageDto = messageDto
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCustomerFeedbackUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MessageDto != nil {
		if err := r.SetBodyParam(o.MessageDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
