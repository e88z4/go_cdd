// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// ChangeUserPasswordUsingPOSTReader is a Reader for the ChangeUserPasswordUsingPOST structure.
type ChangeUserPasswordUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeUserPasswordUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeUserPasswordUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewChangeUserPasswordUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewChangeUserPasswordUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangeUserPasswordUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangeUserPasswordUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeUserPasswordUsingPOSTOK creates a ChangeUserPasswordUsingPOSTOK with default headers values
func NewChangeUserPasswordUsingPOSTOK() *ChangeUserPasswordUsingPOSTOK {
	return &ChangeUserPasswordUsingPOSTOK{}
}

/*ChangeUserPasswordUsingPOSTOK handles this case with default header values.

OK
*/
type ChangeUserPasswordUsingPOSTOK struct {
	Payload *models.UserDto
}

func (o *ChangeUserPasswordUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /users/current/password/reset][%d] changeUserPasswordUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *ChangeUserPasswordUsingPOSTOK) GetPayload() *models.UserDto {
	return o.Payload
}

func (o *ChangeUserPasswordUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeUserPasswordUsingPOSTCreated creates a ChangeUserPasswordUsingPOSTCreated with default headers values
func NewChangeUserPasswordUsingPOSTCreated() *ChangeUserPasswordUsingPOSTCreated {
	return &ChangeUserPasswordUsingPOSTCreated{}
}

/*ChangeUserPasswordUsingPOSTCreated handles this case with default header values.

Created
*/
type ChangeUserPasswordUsingPOSTCreated struct {
}

func (o *ChangeUserPasswordUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /users/current/password/reset][%d] changeUserPasswordUsingPOSTCreated ", 201)
}

func (o *ChangeUserPasswordUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPOSTUnauthorized creates a ChangeUserPasswordUsingPOSTUnauthorized with default headers values
func NewChangeUserPasswordUsingPOSTUnauthorized() *ChangeUserPasswordUsingPOSTUnauthorized {
	return &ChangeUserPasswordUsingPOSTUnauthorized{}
}

/*ChangeUserPasswordUsingPOSTUnauthorized handles this case with default header values.

Unauthorized
*/
type ChangeUserPasswordUsingPOSTUnauthorized struct {
}

func (o *ChangeUserPasswordUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /users/current/password/reset][%d] changeUserPasswordUsingPOSTUnauthorized ", 401)
}

func (o *ChangeUserPasswordUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPOSTForbidden creates a ChangeUserPasswordUsingPOSTForbidden with default headers values
func NewChangeUserPasswordUsingPOSTForbidden() *ChangeUserPasswordUsingPOSTForbidden {
	return &ChangeUserPasswordUsingPOSTForbidden{}
}

/*ChangeUserPasswordUsingPOSTForbidden handles this case with default header values.

Forbidden
*/
type ChangeUserPasswordUsingPOSTForbidden struct {
}

func (o *ChangeUserPasswordUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /users/current/password/reset][%d] changeUserPasswordUsingPOSTForbidden ", 403)
}

func (o *ChangeUserPasswordUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPOSTNotFound creates a ChangeUserPasswordUsingPOSTNotFound with default headers values
func NewChangeUserPasswordUsingPOSTNotFound() *ChangeUserPasswordUsingPOSTNotFound {
	return &ChangeUserPasswordUsingPOSTNotFound{}
}

/*ChangeUserPasswordUsingPOSTNotFound handles this case with default header values.

Not Found
*/
type ChangeUserPasswordUsingPOSTNotFound struct {
}

func (o *ChangeUserPasswordUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /users/current/password/reset][%d] changeUserPasswordUsingPOSTNotFound ", 404)
}

func (o *ChangeUserPasswordUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
