// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// ChangeUserPasswordUsingPUTReader is a Reader for the ChangeUserPasswordUsingPUT structure.
type ChangeUserPasswordUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeUserPasswordUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeUserPasswordUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewChangeUserPasswordUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewChangeUserPasswordUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangeUserPasswordUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewChangeUserPasswordUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeUserPasswordUsingPUTOK creates a ChangeUserPasswordUsingPUTOK with default headers values
func NewChangeUserPasswordUsingPUTOK() *ChangeUserPasswordUsingPUTOK {
	return &ChangeUserPasswordUsingPUTOK{}
}

/*ChangeUserPasswordUsingPUTOK handles this case with default header values.

OK
*/
type ChangeUserPasswordUsingPUTOK struct {
	Payload *models.UserDto
}

func (o *ChangeUserPasswordUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}/password][%d] changeUserPasswordUsingPUTOK  %+v", 200, o.Payload)
}

func (o *ChangeUserPasswordUsingPUTOK) GetPayload() *models.UserDto {
	return o.Payload
}

func (o *ChangeUserPasswordUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeUserPasswordUsingPUTCreated creates a ChangeUserPasswordUsingPUTCreated with default headers values
func NewChangeUserPasswordUsingPUTCreated() *ChangeUserPasswordUsingPUTCreated {
	return &ChangeUserPasswordUsingPUTCreated{}
}

/*ChangeUserPasswordUsingPUTCreated handles this case with default header values.

Created
*/
type ChangeUserPasswordUsingPUTCreated struct {
}

func (o *ChangeUserPasswordUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}/password][%d] changeUserPasswordUsingPUTCreated ", 201)
}

func (o *ChangeUserPasswordUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPUTUnauthorized creates a ChangeUserPasswordUsingPUTUnauthorized with default headers values
func NewChangeUserPasswordUsingPUTUnauthorized() *ChangeUserPasswordUsingPUTUnauthorized {
	return &ChangeUserPasswordUsingPUTUnauthorized{}
}

/*ChangeUserPasswordUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type ChangeUserPasswordUsingPUTUnauthorized struct {
}

func (o *ChangeUserPasswordUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}/password][%d] changeUserPasswordUsingPUTUnauthorized ", 401)
}

func (o *ChangeUserPasswordUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPUTForbidden creates a ChangeUserPasswordUsingPUTForbidden with default headers values
func NewChangeUserPasswordUsingPUTForbidden() *ChangeUserPasswordUsingPUTForbidden {
	return &ChangeUserPasswordUsingPUTForbidden{}
}

/*ChangeUserPasswordUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type ChangeUserPasswordUsingPUTForbidden struct {
}

func (o *ChangeUserPasswordUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}/password][%d] changeUserPasswordUsingPUTForbidden ", 403)
}

func (o *ChangeUserPasswordUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeUserPasswordUsingPUTNotFound creates a ChangeUserPasswordUsingPUTNotFound with default headers values
func NewChangeUserPasswordUsingPUTNotFound() *ChangeUserPasswordUsingPUTNotFound {
	return &ChangeUserPasswordUsingPUTNotFound{}
}

/*ChangeUserPasswordUsingPUTNotFound handles this case with default header values.

Not Found
*/
type ChangeUserPasswordUsingPUTNotFound struct {
}

func (o *ChangeUserPasswordUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}/password][%d] changeUserPasswordUsingPUTNotFound ", 404)
}

func (o *ChangeUserPasswordUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
