// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateUserUsingPUTReader is a Reader for the UpdateUserUsingPUT structure.
type UpdateUserUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateUserUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateUserUsingPUTOK creates a UpdateUserUsingPUTOK with default headers values
func NewUpdateUserUsingPUTOK() *UpdateUserUsingPUTOK {
	return &UpdateUserUsingPUTOK{}
}

/*UpdateUserUsingPUTOK handles this case with default header values.

OK
*/
type UpdateUserUsingPUTOK struct {
	Payload *models.UserDto
}

func (o *UpdateUserUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}][%d] updateUserUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateUserUsingPUTOK) GetPayload() *models.UserDto {
	return o.Payload
}

func (o *UpdateUserUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserUsingPUTCreated creates a UpdateUserUsingPUTCreated with default headers values
func NewUpdateUserUsingPUTCreated() *UpdateUserUsingPUTCreated {
	return &UpdateUserUsingPUTCreated{}
}

/*UpdateUserUsingPUTCreated handles this case with default header values.

Created
*/
type UpdateUserUsingPUTCreated struct {
}

func (o *UpdateUserUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}][%d] updateUserUsingPUTCreated ", 201)
}

func (o *UpdateUserUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserUsingPUTUnauthorized creates a UpdateUserUsingPUTUnauthorized with default headers values
func NewUpdateUserUsingPUTUnauthorized() *UpdateUserUsingPUTUnauthorized {
	return &UpdateUserUsingPUTUnauthorized{}
}

/*UpdateUserUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateUserUsingPUTUnauthorized struct {
}

func (o *UpdateUserUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}][%d] updateUserUsingPUTUnauthorized ", 401)
}

func (o *UpdateUserUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserUsingPUTForbidden creates a UpdateUserUsingPUTForbidden with default headers values
func NewUpdateUserUsingPUTForbidden() *UpdateUserUsingPUTForbidden {
	return &UpdateUserUsingPUTForbidden{}
}

/*UpdateUserUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type UpdateUserUsingPUTForbidden struct {
}

func (o *UpdateUserUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}][%d] updateUserUsingPUTForbidden ", 403)
}

func (o *UpdateUserUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserUsingPUTNotFound creates a UpdateUserUsingPUTNotFound with default headers values
func NewUpdateUserUsingPUTNotFound() *UpdateUserUsingPUTNotFound {
	return &UpdateUserUsingPUTNotFound{}
}

/*UpdateUserUsingPUTNotFound handles this case with default header values.

Not Found
*/
type UpdateUserUsingPUTNotFound struct {
}

func (o *UpdateUserUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /users/{userId}][%d] updateUserUsingPUTNotFound ", 404)
}

func (o *UpdateUserUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
