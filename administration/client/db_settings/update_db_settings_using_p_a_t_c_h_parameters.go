// Code generated by go-swagger; DO NOT EDIT.

package db_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// NewUpdateDbSettingsUsingPATCHParams creates a new UpdateDbSettingsUsingPATCHParams object
// with the default values initialized.
func NewUpdateDbSettingsUsingPATCHParams() *UpdateDbSettingsUsingPATCHParams {
	var ()
	return &UpdateDbSettingsUsingPATCHParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateDbSettingsUsingPATCHParamsWithTimeout creates a new UpdateDbSettingsUsingPATCHParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateDbSettingsUsingPATCHParamsWithTimeout(timeout time.Duration) *UpdateDbSettingsUsingPATCHParams {
	var ()
	return &UpdateDbSettingsUsingPATCHParams{

		timeout: timeout,
	}
}

// NewUpdateDbSettingsUsingPATCHParamsWithContext creates a new UpdateDbSettingsUsingPATCHParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateDbSettingsUsingPATCHParamsWithContext(ctx context.Context) *UpdateDbSettingsUsingPATCHParams {
	var ()
	return &UpdateDbSettingsUsingPATCHParams{

		Context: ctx,
	}
}

// NewUpdateDbSettingsUsingPATCHParamsWithHTTPClient creates a new UpdateDbSettingsUsingPATCHParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateDbSettingsUsingPATCHParamsWithHTTPClient(client *http.Client) *UpdateDbSettingsUsingPATCHParams {
	var ()
	return &UpdateDbSettingsUsingPATCHParams{
		HTTPClient: client,
	}
}

/*UpdateDbSettingsUsingPATCHParams contains all the parameters to send to the API endpoint
for the update db settings using p a t c h operation typically these are written to a http.Request
*/
type UpdateDbSettingsUsingPATCHParams struct {

	/*DbSettingsDto
	  dbSettingsDto

	*/
	DbSettingsDto *models.DbPropertiesSettingsDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) WithTimeout(timeout time.Duration) *UpdateDbSettingsUsingPATCHParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) WithContext(ctx context.Context) *UpdateDbSettingsUsingPATCHParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) WithHTTPClient(client *http.Client) *UpdateDbSettingsUsingPATCHParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDbSettingsDto adds the dbSettingsDto to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) WithDbSettingsDto(dbSettingsDto *models.DbPropertiesSettingsDto) *UpdateDbSettingsUsingPATCHParams {
	o.SetDbSettingsDto(dbSettingsDto)
	return o
}

// SetDbSettingsDto adds the dbSettingsDto to the update db settings using p a t c h params
func (o *UpdateDbSettingsUsingPATCHParams) SetDbSettingsDto(dbSettingsDto *models.DbPropertiesSettingsDto) {
	o.DbSettingsDto = dbSettingsDto
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateDbSettingsUsingPATCHParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DbSettingsDto != nil {
		if err := r.SetBodyParam(o.DbSettingsDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
