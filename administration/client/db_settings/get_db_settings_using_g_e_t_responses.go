// Code generated by go-swagger; DO NOT EDIT.

package db_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// GetDbSettingsUsingGETReader is a Reader for the GetDbSettingsUsingGET structure.
type GetDbSettingsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDbSettingsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDbSettingsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDbSettingsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDbSettingsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDbSettingsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDbSettingsUsingGETOK creates a GetDbSettingsUsingGETOK with default headers values
func NewGetDbSettingsUsingGETOK() *GetDbSettingsUsingGETOK {
	return &GetDbSettingsUsingGETOK{}
}

/*GetDbSettingsUsingGETOK handles this case with default header values.

OK
*/
type GetDbSettingsUsingGETOK struct {
	Payload *models.DbPropertiesSettingsDto
}

func (o *GetDbSettingsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /product/settings/database-server-settings][%d] getDbSettingsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetDbSettingsUsingGETOK) GetPayload() *models.DbPropertiesSettingsDto {
	return o.Payload
}

func (o *GetDbSettingsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DbPropertiesSettingsDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDbSettingsUsingGETUnauthorized creates a GetDbSettingsUsingGETUnauthorized with default headers values
func NewGetDbSettingsUsingGETUnauthorized() *GetDbSettingsUsingGETUnauthorized {
	return &GetDbSettingsUsingGETUnauthorized{}
}

/*GetDbSettingsUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetDbSettingsUsingGETUnauthorized struct {
}

func (o *GetDbSettingsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /product/settings/database-server-settings][%d] getDbSettingsUsingGETUnauthorized ", 401)
}

func (o *GetDbSettingsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDbSettingsUsingGETForbidden creates a GetDbSettingsUsingGETForbidden with default headers values
func NewGetDbSettingsUsingGETForbidden() *GetDbSettingsUsingGETForbidden {
	return &GetDbSettingsUsingGETForbidden{}
}

/*GetDbSettingsUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetDbSettingsUsingGETForbidden struct {
}

func (o *GetDbSettingsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /product/settings/database-server-settings][%d] getDbSettingsUsingGETForbidden ", 403)
}

func (o *GetDbSettingsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDbSettingsUsingGETNotFound creates a GetDbSettingsUsingGETNotFound with default headers values
func NewGetDbSettingsUsingGETNotFound() *GetDbSettingsUsingGETNotFound {
	return &GetDbSettingsUsingGETNotFound{}
}

/*GetDbSettingsUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetDbSettingsUsingGETNotFound struct {
}

func (o *GetDbSettingsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /product/settings/database-server-settings][%d] getDbSettingsUsingGETNotFound ", 404)
}

func (o *GetDbSettingsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
