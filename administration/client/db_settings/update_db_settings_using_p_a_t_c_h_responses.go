// Code generated by go-swagger; DO NOT EDIT.

package db_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/administration/models"
)

// UpdateDbSettingsUsingPATCHReader is a Reader for the UpdateDbSettingsUsingPATCH structure.
type UpdateDbSettingsUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDbSettingsUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDbSettingsUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateDbSettingsUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateDbSettingsUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateDbSettingsUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateDbSettingsUsingPATCHOK creates a UpdateDbSettingsUsingPATCHOK with default headers values
func NewUpdateDbSettingsUsingPATCHOK() *UpdateDbSettingsUsingPATCHOK {
	return &UpdateDbSettingsUsingPATCHOK{}
}

/*UpdateDbSettingsUsingPATCHOK handles this case with default header values.

OK
*/
type UpdateDbSettingsUsingPATCHOK struct {
	Payload *models.DbPropertiesSettingsDto
}

func (o *UpdateDbSettingsUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /product/settings/database-server-settings][%d] updateDbSettingsUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *UpdateDbSettingsUsingPATCHOK) GetPayload() *models.DbPropertiesSettingsDto {
	return o.Payload
}

func (o *UpdateDbSettingsUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DbPropertiesSettingsDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDbSettingsUsingPATCHNoContent creates a UpdateDbSettingsUsingPATCHNoContent with default headers values
func NewUpdateDbSettingsUsingPATCHNoContent() *UpdateDbSettingsUsingPATCHNoContent {
	return &UpdateDbSettingsUsingPATCHNoContent{}
}

/*UpdateDbSettingsUsingPATCHNoContent handles this case with default header values.

No Content
*/
type UpdateDbSettingsUsingPATCHNoContent struct {
}

func (o *UpdateDbSettingsUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /product/settings/database-server-settings][%d] updateDbSettingsUsingPATCHNoContent ", 204)
}

func (o *UpdateDbSettingsUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDbSettingsUsingPATCHUnauthorized creates a UpdateDbSettingsUsingPATCHUnauthorized with default headers values
func NewUpdateDbSettingsUsingPATCHUnauthorized() *UpdateDbSettingsUsingPATCHUnauthorized {
	return &UpdateDbSettingsUsingPATCHUnauthorized{}
}

/*UpdateDbSettingsUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateDbSettingsUsingPATCHUnauthorized struct {
}

func (o *UpdateDbSettingsUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /product/settings/database-server-settings][%d] updateDbSettingsUsingPATCHUnauthorized ", 401)
}

func (o *UpdateDbSettingsUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDbSettingsUsingPATCHForbidden creates a UpdateDbSettingsUsingPATCHForbidden with default headers values
func NewUpdateDbSettingsUsingPATCHForbidden() *UpdateDbSettingsUsingPATCHForbidden {
	return &UpdateDbSettingsUsingPATCHForbidden{}
}

/*UpdateDbSettingsUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type UpdateDbSettingsUsingPATCHForbidden struct {
}

func (o *UpdateDbSettingsUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /product/settings/database-server-settings][%d] updateDbSettingsUsingPATCHForbidden ", 403)
}

func (o *UpdateDbSettingsUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
