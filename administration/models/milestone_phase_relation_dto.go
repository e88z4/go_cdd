// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MilestonePhaseRelationDto milestone phase relation dto
// swagger:model MilestonePhaseRelationDto
type MilestonePhaseRelationDto struct {

	// final status
	// Enum: [DONE FAILED PENDING_APPROVAL APPROVED ACTIVE]
	FinalStatus string `json:"finalStatus,omitempty"`

	// milestone
	Milestone *MilestoneDto `json:"milestone,omitempty"`
}

// Validate validates this milestone phase relation dto
func (m *MilestonePhaseRelationDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFinalStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMilestone(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var milestonePhaseRelationDtoTypeFinalStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DONE","FAILED","PENDING_APPROVAL","APPROVED","ACTIVE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		milestonePhaseRelationDtoTypeFinalStatusPropEnum = append(milestonePhaseRelationDtoTypeFinalStatusPropEnum, v)
	}
}

const (

	// MilestonePhaseRelationDtoFinalStatusDONE captures enum value "DONE"
	MilestonePhaseRelationDtoFinalStatusDONE string = "DONE"

	// MilestonePhaseRelationDtoFinalStatusFAILED captures enum value "FAILED"
	MilestonePhaseRelationDtoFinalStatusFAILED string = "FAILED"

	// MilestonePhaseRelationDtoFinalStatusPENDINGAPPROVAL captures enum value "PENDING_APPROVAL"
	MilestonePhaseRelationDtoFinalStatusPENDINGAPPROVAL string = "PENDING_APPROVAL"

	// MilestonePhaseRelationDtoFinalStatusAPPROVED captures enum value "APPROVED"
	MilestonePhaseRelationDtoFinalStatusAPPROVED string = "APPROVED"

	// MilestonePhaseRelationDtoFinalStatusACTIVE captures enum value "ACTIVE"
	MilestonePhaseRelationDtoFinalStatusACTIVE string = "ACTIVE"
)

// prop value enum
func (m *MilestonePhaseRelationDto) validateFinalStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, milestonePhaseRelationDtoTypeFinalStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MilestonePhaseRelationDto) validateFinalStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.FinalStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateFinalStatusEnum("finalStatus", "body", m.FinalStatus); err != nil {
		return err
	}

	return nil
}

func (m *MilestonePhaseRelationDto) validateMilestone(formats strfmt.Registry) error {

	if swag.IsZero(m.Milestone) { // not required
		return nil
	}

	if m.Milestone != nil {
		if err := m.Milestone.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("milestone")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MilestonePhaseRelationDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MilestonePhaseRelationDto) UnmarshalBinary(b []byte) error {
	var res MilestonePhaseRelationDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
