// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PortfolioLicensingAgreementDto portfolio licensing agreement dto
// swagger:model PortfolioLicensingAgreementDto
type PortfolioLicensingAgreementDto struct {

	// company email domain
	CompanyEmailDomain string `json:"companyEmailDomain,omitempty"`

	// concurrent running releases
	ConcurrentRunningReleases int32 `json:"concurrentRunningReleases,omitempty"`

	// covered by broadcom subscription p l a
	CoveredByBroadcomSubscriptionPLA bool `json:"coveredByBroadcomSubscriptionPLA,omitempty"`

	// department charge identifier
	DepartmentChargeIdentifier string `json:"departmentChargeIdentifier,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// enterprise site Id
	EnterpriseSiteID int64 `json:"enterpriseSiteId,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// instance Id
	InstanceID string `json:"instanceId,omitempty"`

	// last collection date
	LastCollectionDate int64 `json:"lastCollectionDate,omitempty"`

	// last collection status
	LastCollectionStatus string `json:"lastCollectionStatus,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// product version name
	ProductVersionName string `json:"productVersionName,omitempty"`

	// proxy password
	ProxyPassword string `json:"proxyPassword,omitempty"`

	// proxy URL
	ProxyURL string `json:"proxyURL,omitempty"`

	// proxy username
	ProxyUsername string `json:"proxyUsername,omitempty"`

	// use proxy
	UseProxy bool `json:"useProxy,omitempty"`
}

// Validate validates this portfolio licensing agreement dto
func (m *PortfolioLicensingAgreementDto) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PortfolioLicensingAgreementDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortfolioLicensingAgreementDto) UnmarshalBinary(b []byte) error {
	var res PortfolioLicensingAgreementDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
