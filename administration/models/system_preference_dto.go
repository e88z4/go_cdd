// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SystemPreferenceDto system preference dto
// swagger:model SystemPreferenceDto
type SystemPreferenceDto struct {

	// category
	Category string `json:"category,omitempty"`

	// default value
	DefaultValue string `json:"defaultValue,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// maximum value
	MaximumValue int64 `json:"maximumValue,omitempty"`

	// minimum value
	MinimumValue int64 `json:"minimumValue,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// optional
	Optional bool `json:"optional,omitempty"`

	// possible values
	PossibleValues []string `json:"possibleValues"`

	// type
	// Enum: [STRING PASSWORD NUMBER]
	Type string `json:"type,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this system preference dto
func (m *SystemPreferenceDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var systemPreferenceDtoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["STRING","PASSWORD","NUMBER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		systemPreferenceDtoTypeTypePropEnum = append(systemPreferenceDtoTypeTypePropEnum, v)
	}
}

const (

	// SystemPreferenceDtoTypeSTRING captures enum value "STRING"
	SystemPreferenceDtoTypeSTRING string = "STRING"

	// SystemPreferenceDtoTypePASSWORD captures enum value "PASSWORD"
	SystemPreferenceDtoTypePASSWORD string = "PASSWORD"

	// SystemPreferenceDtoTypeNUMBER captures enum value "NUMBER"
	SystemPreferenceDtoTypeNUMBER string = "NUMBER"
)

// prop value enum
func (m *SystemPreferenceDto) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, systemPreferenceDtoTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *SystemPreferenceDto) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SystemPreferenceDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemPreferenceDto) UnmarshalBinary(b []byte) error {
	var res SystemPreferenceDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
