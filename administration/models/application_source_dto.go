// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ApplicationSourceDto application source dto
// swagger:model ApplicationSourceDto
type ApplicationSourceDto struct {

	// deletable
	Deletable bool `json:"deletable,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// end point
	EndPoint *EndpointDto `json:"endPoint,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// last success sync
	LastSuccessSync int64 `json:"lastSuccessSync,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// support adding application manually
	SupportAddingApplicationManually bool `json:"supportAddingApplicationManually,omitempty"`

	// syncable
	Syncable bool `json:"syncable,omitempty"`
}

// Validate validates this application source dto
func (m *ApplicationSourceDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndPoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationSourceDto) validateEndPoint(formats strfmt.Registry) error {

	if swag.IsZero(m.EndPoint) { // not required
		return nil
	}

	if m.EndPoint != nil {
		if err := m.EndPoint.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("endPoint")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationSourceDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationSourceDto) UnmarshalBinary(b []byte) error {
	var res ApplicationSourceDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
