// Code generated by go-swagger; DO NOT EDIT.

package test_suite

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/tar/models"
)

// GetTestSuitesUsingGETReader is a Reader for the GetTestSuitesUsingGET structure.
type GetTestSuitesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTestSuitesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTestSuitesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTestSuitesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTestSuitesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTestSuitesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTestSuitesUsingGETOK creates a GetTestSuitesUsingGETOK with default headers values
func NewGetTestSuitesUsingGETOK() *GetTestSuitesUsingGETOK {
	return &GetTestSuitesUsingGETOK{}
}

/*GetTestSuitesUsingGETOK handles this case with default header values.

OK
*/
type GetTestSuitesUsingGETOK struct {
	Payload *models.PagedResultDtoTestSuiteDto
}

func (o *GetTestSuitesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-suites][%d] getTestSuitesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTestSuitesUsingGETOK) GetPayload() *models.PagedResultDtoTestSuiteDto {
	return o.Payload
}

func (o *GetTestSuitesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoTestSuiteDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestSuitesUsingGETUnauthorized creates a GetTestSuitesUsingGETUnauthorized with default headers values
func NewGetTestSuitesUsingGETUnauthorized() *GetTestSuitesUsingGETUnauthorized {
	return &GetTestSuitesUsingGETUnauthorized{}
}

/*GetTestSuitesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTestSuitesUsingGETUnauthorized struct {
}

func (o *GetTestSuitesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-suites][%d] getTestSuitesUsingGETUnauthorized ", 401)
}

func (o *GetTestSuitesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTestSuitesUsingGETForbidden creates a GetTestSuitesUsingGETForbidden with default headers values
func NewGetTestSuitesUsingGETForbidden() *GetTestSuitesUsingGETForbidden {
	return &GetTestSuitesUsingGETForbidden{}
}

/*GetTestSuitesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetTestSuitesUsingGETForbidden struct {
}

func (o *GetTestSuitesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-suites][%d] getTestSuitesUsingGETForbidden ", 403)
}

func (o *GetTestSuitesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTestSuitesUsingGETNotFound creates a GetTestSuitesUsingGETNotFound with default headers values
func NewGetTestSuitesUsingGETNotFound() *GetTestSuitesUsingGETNotFound {
	return &GetTestSuitesUsingGETNotFound{}
}

/*GetTestSuitesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetTestSuitesUsingGETNotFound struct {
}

func (o *GetTestSuitesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/test-suites][%d] getTestSuitesUsingGETNotFound ", 404)
}

func (o *GetTestSuitesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
