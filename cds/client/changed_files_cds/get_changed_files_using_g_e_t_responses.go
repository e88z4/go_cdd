// Code generated by go-swagger; DO NOT EDIT.

package changed_files_cds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/cds/models"
)

// GetChangedFilesUsingGETReader is a Reader for the GetChangedFilesUsingGET structure.
type GetChangedFilesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChangedFilesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChangedFilesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChangedFilesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChangedFilesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChangedFilesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetChangedFilesUsingGETOK creates a GetChangedFilesUsingGETOK with default headers values
func NewGetChangedFilesUsingGETOK() *GetChangedFilesUsingGETOK {
	return &GetChangedFilesUsingGETOK{}
}

/*GetChangedFilesUsingGETOK handles this case with default header values.

OK
*/
type GetChangedFilesUsingGETOK struct {
	Payload *models.PagedResultDtoChangedFileDto
}

func (o *GetChangedFilesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/changed-files][%d] getChangedFilesUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetChangedFilesUsingGETOK) GetPayload() *models.PagedResultDtoChangedFileDto {
	return o.Payload
}

func (o *GetChangedFilesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PagedResultDtoChangedFileDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChangedFilesUsingGETUnauthorized creates a GetChangedFilesUsingGETUnauthorized with default headers values
func NewGetChangedFilesUsingGETUnauthorized() *GetChangedFilesUsingGETUnauthorized {
	return &GetChangedFilesUsingGETUnauthorized{}
}

/*GetChangedFilesUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetChangedFilesUsingGETUnauthorized struct {
}

func (o *GetChangedFilesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/changed-files][%d] getChangedFilesUsingGETUnauthorized ", 401)
}

func (o *GetChangedFilesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChangedFilesUsingGETForbidden creates a GetChangedFilesUsingGETForbidden with default headers values
func NewGetChangedFilesUsingGETForbidden() *GetChangedFilesUsingGETForbidden {
	return &GetChangedFilesUsingGETForbidden{}
}

/*GetChangedFilesUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetChangedFilesUsingGETForbidden struct {
}

func (o *GetChangedFilesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/changed-files][%d] getChangedFilesUsingGETForbidden ", 403)
}

func (o *GetChangedFilesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChangedFilesUsingGETNotFound creates a GetChangedFilesUsingGETNotFound with default headers values
func NewGetChangedFilesUsingGETNotFound() *GetChangedFilesUsingGETNotFound {
	return &GetChangedFilesUsingGETNotFound{}
}

/*GetChangedFilesUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetChangedFilesUsingGETNotFound struct {
}

func (o *GetChangedFilesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /applications/{applicationId}/application-versions/{applicationVersionId}/changed-files][%d] getChangedFilesUsingGETNotFound ", 404)
}

func (o *GetChangedFilesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
