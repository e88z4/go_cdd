// Code generated by go-swagger; DO NOT EDIT.

package changed_files_cds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetChangedFilesUsingGETParams creates a new GetChangedFilesUsingGETParams object
// with the default values initialized.
func NewGetChangedFilesUsingGETParams() *GetChangedFilesUsingGETParams {
	var ()
	return &GetChangedFilesUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetChangedFilesUsingGETParamsWithTimeout creates a new GetChangedFilesUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetChangedFilesUsingGETParamsWithTimeout(timeout time.Duration) *GetChangedFilesUsingGETParams {
	var ()
	return &GetChangedFilesUsingGETParams{

		timeout: timeout,
	}
}

// NewGetChangedFilesUsingGETParamsWithContext creates a new GetChangedFilesUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetChangedFilesUsingGETParamsWithContext(ctx context.Context) *GetChangedFilesUsingGETParams {
	var ()
	return &GetChangedFilesUsingGETParams{

		Context: ctx,
	}
}

// NewGetChangedFilesUsingGETParamsWithHTTPClient creates a new GetChangedFilesUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetChangedFilesUsingGETParamsWithHTTPClient(client *http.Client) *GetChangedFilesUsingGETParams {
	var ()
	return &GetChangedFilesUsingGETParams{
		HTTPClient: client,
	}
}

/*GetChangedFilesUsingGETParams contains all the parameters to send to the API endpoint
for the get changed files using g e t operation typically these are written to a http.Request
*/
type GetChangedFilesUsingGETParams struct {

	/*ApplicationID
	  applicationId

	*/
	ApplicationID int64
	/*ApplicationVersionID
	  applicationVersionId

	*/
	ApplicationVersionID int64
	/*IsAccessed
	  isAccessed

	*/
	IsAccessed *bool
	/*IsExcluded
	  isExcluded

	*/
	IsExcluded *bool
	/*PageNumber
	  pageNumber

	*/
	PageNumber *int32
	/*PageSize
	  pageSize

	*/
	PageSize *int32
	/*Status
	  fileStatuses

	*/
	Status []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithTimeout(timeout time.Duration) *GetChangedFilesUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithContext(ctx context.Context) *GetChangedFilesUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithHTTPClient(client *http.Client) *GetChangedFilesUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithApplicationID(applicationID int64) *GetChangedFilesUsingGETParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetApplicationID(applicationID int64) {
	o.ApplicationID = applicationID
}

// WithApplicationVersionID adds the applicationVersionID to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithApplicationVersionID(applicationVersionID int64) *GetChangedFilesUsingGETParams {
	o.SetApplicationVersionID(applicationVersionID)
	return o
}

// SetApplicationVersionID adds the applicationVersionId to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetApplicationVersionID(applicationVersionID int64) {
	o.ApplicationVersionID = applicationVersionID
}

// WithIsAccessed adds the isAccessed to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithIsAccessed(isAccessed *bool) *GetChangedFilesUsingGETParams {
	o.SetIsAccessed(isAccessed)
	return o
}

// SetIsAccessed adds the isAccessed to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetIsAccessed(isAccessed *bool) {
	o.IsAccessed = isAccessed
}

// WithIsExcluded adds the isExcluded to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithIsExcluded(isExcluded *bool) *GetChangedFilesUsingGETParams {
	o.SetIsExcluded(isExcluded)
	return o
}

// SetIsExcluded adds the isExcluded to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetIsExcluded(isExcluded *bool) {
	o.IsExcluded = isExcluded
}

// WithPageNumber adds the pageNumber to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithPageNumber(pageNumber *int32) *GetChangedFilesUsingGETParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetPageNumber(pageNumber *int32) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithPageSize(pageSize *int32) *GetChangedFilesUsingGETParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithStatus adds the status to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) WithStatus(status []string) *GetChangedFilesUsingGETParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the get changed files using g e t params
func (o *GetChangedFilesUsingGETParams) SetStatus(status []string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *GetChangedFilesUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param applicationId
	if err := r.SetPathParam("applicationId", swag.FormatInt64(o.ApplicationID)); err != nil {
		return err
	}

	// path param applicationVersionId
	if err := r.SetPathParam("applicationVersionId", swag.FormatInt64(o.ApplicationVersionID)); err != nil {
		return err
	}

	if o.IsAccessed != nil {

		// query param is_accessed
		var qrIsAccessed bool
		if o.IsAccessed != nil {
			qrIsAccessed = *o.IsAccessed
		}
		qIsAccessed := swag.FormatBool(qrIsAccessed)
		if qIsAccessed != "" {
			if err := r.SetQueryParam("is_accessed", qIsAccessed); err != nil {
				return err
			}
		}

	}

	if o.IsExcluded != nil {

		// query param is_excluded
		var qrIsExcluded bool
		if o.IsExcluded != nil {
			qrIsExcluded = *o.IsExcluded
		}
		qIsExcluded := swag.FormatBool(qrIsExcluded)
		if qIsExcluded != "" {
			if err := r.SetQueryParam("is_excluded", qIsExcluded); err != nil {
				return err
			}
		}

	}

	if o.PageNumber != nil {

		// query param page_number
		var qrPageNumber int32
		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt32(qrPageNumber)
		if qPageNumber != "" {
			if err := r.SetQueryParam("page_number", qPageNumber); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int32
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	valuesStatus := o.Status

	joinedStatus := swag.JoinByFormat(valuesStatus, "multi")
	// query array param status
	if err := r.SetQueryParam("status", joinedStatus...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
