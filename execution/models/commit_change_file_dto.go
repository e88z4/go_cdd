// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommitChangeFileDto commit change file dto
// swagger:model CommitChangeFileDto
type CommitChangeFileDto struct {

	// change Id
	ChangeID string `json:"changeId,omitempty"`

	// commit Id
	CommitID string `json:"commitId,omitempty"`

	// filename
	Filename string `json:"filename,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// is covered
	IsCovered bool `json:"isCovered,omitempty"`

	// is excluded
	IsExcluded bool `json:"isExcluded,omitempty"`

	// test suites
	TestSuites []*TestSuiteDto `json:"testSuites"`
}

// Validate validates this commit change file dto
func (m *CommitChangeFileDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTestSuites(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CommitChangeFileDto) validateTestSuites(formats strfmt.Registry) error {

	if swag.IsZero(m.TestSuites) { // not required
		return nil
	}

	for i := 0; i < len(m.TestSuites); i++ {
		if swag.IsZero(m.TestSuites[i]) { // not required
			continue
		}

		if m.TestSuites[i] != nil {
			if err := m.TestSuites[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("testSuites" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CommitChangeFileDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommitChangeFileDto) UnmarshalBinary(b []byte) error {
	var res CommitChangeFileDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
