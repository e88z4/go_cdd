// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/execution/models"
)

// NewCreateReleaseManifestUsingPOSTParams creates a new CreateReleaseManifestUsingPOSTParams object
// with the default values initialized.
func NewCreateReleaseManifestUsingPOSTParams() *CreateReleaseManifestUsingPOSTParams {
	var ()
	return &CreateReleaseManifestUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateReleaseManifestUsingPOSTParamsWithTimeout creates a new CreateReleaseManifestUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateReleaseManifestUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateReleaseManifestUsingPOSTParams {
	var ()
	return &CreateReleaseManifestUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateReleaseManifestUsingPOSTParamsWithContext creates a new CreateReleaseManifestUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateReleaseManifestUsingPOSTParamsWithContext(ctx context.Context) *CreateReleaseManifestUsingPOSTParams {
	var ()
	return &CreateReleaseManifestUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateReleaseManifestUsingPOSTParamsWithHTTPClient creates a new CreateReleaseManifestUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateReleaseManifestUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateReleaseManifestUsingPOSTParams {
	var ()
	return &CreateReleaseManifestUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateReleaseManifestUsingPOSTParams contains all the parameters to send to the API endpoint
for the create release manifest using p o s t operation typically these are written to a http.Request
*/
type CreateReleaseManifestUsingPOSTParams struct {

	/*ReleaseID
	  releaseId

	*/
	ReleaseID int64
	/*ReleaseManifestDto
	  releaseManifestDto

	*/
	ReleaseManifestDto *models.ReleaseManifestDto

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateReleaseManifestUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) WithContext(ctx context.Context) *CreateReleaseManifestUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateReleaseManifestUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithReleaseID adds the releaseID to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) WithReleaseID(releaseID int64) *CreateReleaseManifestUsingPOSTParams {
	o.SetReleaseID(releaseID)
	return o
}

// SetReleaseID adds the releaseId to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) SetReleaseID(releaseID int64) {
	o.ReleaseID = releaseID
}

// WithReleaseManifestDto adds the releaseManifestDto to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) WithReleaseManifestDto(releaseManifestDto *models.ReleaseManifestDto) *CreateReleaseManifestUsingPOSTParams {
	o.SetReleaseManifestDto(releaseManifestDto)
	return o
}

// SetReleaseManifestDto adds the releaseManifestDto to the create release manifest using p o s t params
func (o *CreateReleaseManifestUsingPOSTParams) SetReleaseManifestDto(releaseManifestDto *models.ReleaseManifestDto) {
	o.ReleaseManifestDto = releaseManifestDto
}

// WriteToRequest writes these params to a swagger request
func (o *CreateReleaseManifestUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param releaseId
	if err := r.SetPathParam("releaseId", swag.FormatInt64(o.ReleaseID)); err != nil {
		return err
	}

	if o.ReleaseManifestDto != nil {
		if err := r.SetBodyParam(o.ReleaseManifestDto); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
