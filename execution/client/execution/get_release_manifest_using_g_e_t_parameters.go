// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetReleaseManifestUsingGETParams creates a new GetReleaseManifestUsingGETParams object
// with the default values initialized.
func NewGetReleaseManifestUsingGETParams() *GetReleaseManifestUsingGETParams {
	var ()
	return &GetReleaseManifestUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetReleaseManifestUsingGETParamsWithTimeout creates a new GetReleaseManifestUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetReleaseManifestUsingGETParamsWithTimeout(timeout time.Duration) *GetReleaseManifestUsingGETParams {
	var ()
	return &GetReleaseManifestUsingGETParams{

		timeout: timeout,
	}
}

// NewGetReleaseManifestUsingGETParamsWithContext creates a new GetReleaseManifestUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetReleaseManifestUsingGETParamsWithContext(ctx context.Context) *GetReleaseManifestUsingGETParams {
	var ()
	return &GetReleaseManifestUsingGETParams{

		Context: ctx,
	}
}

// NewGetReleaseManifestUsingGETParamsWithHTTPClient creates a new GetReleaseManifestUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetReleaseManifestUsingGETParamsWithHTTPClient(client *http.Client) *GetReleaseManifestUsingGETParams {
	var ()
	return &GetReleaseManifestUsingGETParams{
		HTTPClient: client,
	}
}

/*GetReleaseManifestUsingGETParams contains all the parameters to send to the API endpoint
for the get release manifest using g e t operation typically these are written to a http.Request
*/
type GetReleaseManifestUsingGETParams struct {

	/*ManifestID
	  manifestId

	*/
	ManifestID int64
	/*ReleaseID
	  releaseId

	*/
	ReleaseID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) WithTimeout(timeout time.Duration) *GetReleaseManifestUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) WithContext(ctx context.Context) *GetReleaseManifestUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) WithHTTPClient(client *http.Client) *GetReleaseManifestUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithManifestID adds the manifestID to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) WithManifestID(manifestID int64) *GetReleaseManifestUsingGETParams {
	o.SetManifestID(manifestID)
	return o
}

// SetManifestID adds the manifestId to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) SetManifestID(manifestID int64) {
	o.ManifestID = manifestID
}

// WithReleaseID adds the releaseID to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) WithReleaseID(releaseID int64) *GetReleaseManifestUsingGETParams {
	o.SetReleaseID(releaseID)
	return o
}

// SetReleaseID adds the releaseId to the get release manifest using g e t params
func (o *GetReleaseManifestUsingGETParams) SetReleaseID(releaseID int64) {
	o.ReleaseID = releaseID
}

// WriteToRequest writes these params to a swagger request
func (o *GetReleaseManifestUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param manifestId
	if err := r.SetPathParam("manifestId", swag.FormatInt64(o.ManifestID)); err != nil {
		return err
	}

	// path param releaseId
	if err := r.SetPathParam("releaseId", swag.FormatInt64(o.ReleaseID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
