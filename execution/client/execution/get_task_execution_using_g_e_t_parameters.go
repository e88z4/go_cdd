// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTaskExecutionUsingGETParams creates a new GetTaskExecutionUsingGETParams object
// with the default values initialized.
func NewGetTaskExecutionUsingGETParams() *GetTaskExecutionUsingGETParams {
	var ()
	return &GetTaskExecutionUsingGETParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTaskExecutionUsingGETParamsWithTimeout creates a new GetTaskExecutionUsingGETParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTaskExecutionUsingGETParamsWithTimeout(timeout time.Duration) *GetTaskExecutionUsingGETParams {
	var ()
	return &GetTaskExecutionUsingGETParams{

		timeout: timeout,
	}
}

// NewGetTaskExecutionUsingGETParamsWithContext creates a new GetTaskExecutionUsingGETParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTaskExecutionUsingGETParamsWithContext(ctx context.Context) *GetTaskExecutionUsingGETParams {
	var ()
	return &GetTaskExecutionUsingGETParams{

		Context: ctx,
	}
}

// NewGetTaskExecutionUsingGETParamsWithHTTPClient creates a new GetTaskExecutionUsingGETParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTaskExecutionUsingGETParamsWithHTTPClient(client *http.Client) *GetTaskExecutionUsingGETParams {
	var ()
	return &GetTaskExecutionUsingGETParams{
		HTTPClient: client,
	}
}

/*GetTaskExecutionUsingGETParams contains all the parameters to send to the API endpoint
for the get task execution using g e t operation typically these are written to a http.Request
*/
type GetTaskExecutionUsingGETParams struct {

	/*PhaseID
	  phaseId

	*/
	PhaseID int64
	/*ReleaseID
	  releaseId

	*/
	ReleaseID int64
	/*TaskID
	  taskId

	*/
	TaskID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithTimeout(timeout time.Duration) *GetTaskExecutionUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithContext(ctx context.Context) *GetTaskExecutionUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithHTTPClient(client *http.Client) *GetTaskExecutionUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPhaseID adds the phaseID to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithPhaseID(phaseID int64) *GetTaskExecutionUsingGETParams {
	o.SetPhaseID(phaseID)
	return o
}

// SetPhaseID adds the phaseId to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetPhaseID(phaseID int64) {
	o.PhaseID = phaseID
}

// WithReleaseID adds the releaseID to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithReleaseID(releaseID int64) *GetTaskExecutionUsingGETParams {
	o.SetReleaseID(releaseID)
	return o
}

// SetReleaseID adds the releaseId to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetReleaseID(releaseID int64) {
	o.ReleaseID = releaseID
}

// WithTaskID adds the taskID to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) WithTaskID(taskID int64) *GetTaskExecutionUsingGETParams {
	o.SetTaskID(taskID)
	return o
}

// SetTaskID adds the taskId to the get task execution using g e t params
func (o *GetTaskExecutionUsingGETParams) SetTaskID(taskID int64) {
	o.TaskID = taskID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTaskExecutionUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param phaseId
	if err := r.SetPathParam("phaseId", swag.FormatInt64(o.PhaseID)); err != nil {
		return err
	}

	// path param releaseId
	if err := r.SetPathParam("releaseId", swag.FormatInt64(o.ReleaseID)); err != nil {
		return err
	}

	// path param taskId
	if err := r.SetPathParam("taskId", swag.FormatInt64(o.TaskID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
