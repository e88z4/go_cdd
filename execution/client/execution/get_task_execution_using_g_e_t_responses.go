// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/execution/models"
)

// GetTaskExecutionUsingGETReader is a Reader for the GetTaskExecutionUsingGET structure.
type GetTaskExecutionUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTaskExecutionUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTaskExecutionUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTaskExecutionUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTaskExecutionUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTaskExecutionUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTaskExecutionUsingGETOK creates a GetTaskExecutionUsingGETOK with default headers values
func NewGetTaskExecutionUsingGETOK() *GetTaskExecutionUsingGETOK {
	return &GetTaskExecutionUsingGETOK{}
}

/*GetTaskExecutionUsingGETOK handles this case with default header values.

OK
*/
type GetTaskExecutionUsingGETOK struct {
	Payload *models.TaskExecutionDto
}

func (o *GetTaskExecutionUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}/tasks-execution/{taskId}][%d] getTaskExecutionUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTaskExecutionUsingGETOK) GetPayload() *models.TaskExecutionDto {
	return o.Payload
}

func (o *GetTaskExecutionUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskExecutionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTaskExecutionUsingGETUnauthorized creates a GetTaskExecutionUsingGETUnauthorized with default headers values
func NewGetTaskExecutionUsingGETUnauthorized() *GetTaskExecutionUsingGETUnauthorized {
	return &GetTaskExecutionUsingGETUnauthorized{}
}

/*GetTaskExecutionUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetTaskExecutionUsingGETUnauthorized struct {
}

func (o *GetTaskExecutionUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}/tasks-execution/{taskId}][%d] getTaskExecutionUsingGETUnauthorized ", 401)
}

func (o *GetTaskExecutionUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskExecutionUsingGETForbidden creates a GetTaskExecutionUsingGETForbidden with default headers values
func NewGetTaskExecutionUsingGETForbidden() *GetTaskExecutionUsingGETForbidden {
	return &GetTaskExecutionUsingGETForbidden{}
}

/*GetTaskExecutionUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetTaskExecutionUsingGETForbidden struct {
}

func (o *GetTaskExecutionUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}/tasks-execution/{taskId}][%d] getTaskExecutionUsingGETForbidden ", 403)
}

func (o *GetTaskExecutionUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTaskExecutionUsingGETNotFound creates a GetTaskExecutionUsingGETNotFound with default headers values
func NewGetTaskExecutionUsingGETNotFound() *GetTaskExecutionUsingGETNotFound {
	return &GetTaskExecutionUsingGETNotFound{}
}

/*GetTaskExecutionUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetTaskExecutionUsingGETNotFound struct {
}

func (o *GetTaskExecutionUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}/tasks-execution/{taskId}][%d] getTaskExecutionUsingGETNotFound ", 404)
}

func (o *GetTaskExecutionUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
