// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/execution/models"
)

// ChangeReleaseExecutionUsingPATCHReader is a Reader for the ChangeReleaseExecutionUsingPATCH structure.
type ChangeReleaseExecutionUsingPATCHReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeReleaseExecutionUsingPATCHReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeReleaseExecutionUsingPATCHOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewChangeReleaseExecutionUsingPATCHNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewChangeReleaseExecutionUsingPATCHUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangeReleaseExecutionUsingPATCHForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeReleaseExecutionUsingPATCHOK creates a ChangeReleaseExecutionUsingPATCHOK with default headers values
func NewChangeReleaseExecutionUsingPATCHOK() *ChangeReleaseExecutionUsingPATCHOK {
	return &ChangeReleaseExecutionUsingPATCHOK{}
}

/*ChangeReleaseExecutionUsingPATCHOK handles this case with default header values.

OK
*/
type ChangeReleaseExecutionUsingPATCHOK struct {
	Payload *models.ReleaseExecutionDto
}

func (o *ChangeReleaseExecutionUsingPATCHOK) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseId}][%d] changeReleaseExecutionUsingPATCHOK  %+v", 200, o.Payload)
}

func (o *ChangeReleaseExecutionUsingPATCHOK) GetPayload() *models.ReleaseExecutionDto {
	return o.Payload
}

func (o *ChangeReleaseExecutionUsingPATCHOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseExecutionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeReleaseExecutionUsingPATCHNoContent creates a ChangeReleaseExecutionUsingPATCHNoContent with default headers values
func NewChangeReleaseExecutionUsingPATCHNoContent() *ChangeReleaseExecutionUsingPATCHNoContent {
	return &ChangeReleaseExecutionUsingPATCHNoContent{}
}

/*ChangeReleaseExecutionUsingPATCHNoContent handles this case with default header values.

No Content
*/
type ChangeReleaseExecutionUsingPATCHNoContent struct {
}

func (o *ChangeReleaseExecutionUsingPATCHNoContent) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseId}][%d] changeReleaseExecutionUsingPATCHNoContent ", 204)
}

func (o *ChangeReleaseExecutionUsingPATCHNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeReleaseExecutionUsingPATCHUnauthorized creates a ChangeReleaseExecutionUsingPATCHUnauthorized with default headers values
func NewChangeReleaseExecutionUsingPATCHUnauthorized() *ChangeReleaseExecutionUsingPATCHUnauthorized {
	return &ChangeReleaseExecutionUsingPATCHUnauthorized{}
}

/*ChangeReleaseExecutionUsingPATCHUnauthorized handles this case with default header values.

Unauthorized
*/
type ChangeReleaseExecutionUsingPATCHUnauthorized struct {
}

func (o *ChangeReleaseExecutionUsingPATCHUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseId}][%d] changeReleaseExecutionUsingPATCHUnauthorized ", 401)
}

func (o *ChangeReleaseExecutionUsingPATCHUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangeReleaseExecutionUsingPATCHForbidden creates a ChangeReleaseExecutionUsingPATCHForbidden with default headers values
func NewChangeReleaseExecutionUsingPATCHForbidden() *ChangeReleaseExecutionUsingPATCHForbidden {
	return &ChangeReleaseExecutionUsingPATCHForbidden{}
}

/*ChangeReleaseExecutionUsingPATCHForbidden handles this case with default header values.

Forbidden
*/
type ChangeReleaseExecutionUsingPATCHForbidden struct {
}

func (o *ChangeReleaseExecutionUsingPATCHForbidden) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseId}][%d] changeReleaseExecutionUsingPATCHForbidden ", 403)
}

func (o *ChangeReleaseExecutionUsingPATCHForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
