// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/execution/models"
)

// ChangePhaseExecutionUsingPATCH1Reader is a Reader for the ChangePhaseExecutionUsingPATCH1 structure.
type ChangePhaseExecutionUsingPATCH1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangePhaseExecutionUsingPATCH1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangePhaseExecutionUsingPATCH1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewChangePhaseExecutionUsingPATCH1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewChangePhaseExecutionUsingPATCH1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewChangePhaseExecutionUsingPATCH1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangePhaseExecutionUsingPATCH1OK creates a ChangePhaseExecutionUsingPATCH1OK with default headers values
func NewChangePhaseExecutionUsingPATCH1OK() *ChangePhaseExecutionUsingPATCH1OK {
	return &ChangePhaseExecutionUsingPATCH1OK{}
}

/*ChangePhaseExecutionUsingPATCH1OK handles this case with default header values.

OK
*/
type ChangePhaseExecutionUsingPATCH1OK struct {
	Payload *models.PhaseExecutionDto
}

func (o *ChangePhaseExecutionUsingPATCH1OK) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseName}/{releaseVersionName}/phases-execution/{phaseName}][%d] changePhaseExecutionUsingPATCH1OK  %+v", 200, o.Payload)
}

func (o *ChangePhaseExecutionUsingPATCH1OK) GetPayload() *models.PhaseExecutionDto {
	return o.Payload
}

func (o *ChangePhaseExecutionUsingPATCH1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PhaseExecutionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangePhaseExecutionUsingPATCH1NoContent creates a ChangePhaseExecutionUsingPATCH1NoContent with default headers values
func NewChangePhaseExecutionUsingPATCH1NoContent() *ChangePhaseExecutionUsingPATCH1NoContent {
	return &ChangePhaseExecutionUsingPATCH1NoContent{}
}

/*ChangePhaseExecutionUsingPATCH1NoContent handles this case with default header values.

No Content
*/
type ChangePhaseExecutionUsingPATCH1NoContent struct {
}

func (o *ChangePhaseExecutionUsingPATCH1NoContent) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseName}/{releaseVersionName}/phases-execution/{phaseName}][%d] changePhaseExecutionUsingPATCH1NoContent ", 204)
}

func (o *ChangePhaseExecutionUsingPATCH1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePhaseExecutionUsingPATCH1Unauthorized creates a ChangePhaseExecutionUsingPATCH1Unauthorized with default headers values
func NewChangePhaseExecutionUsingPATCH1Unauthorized() *ChangePhaseExecutionUsingPATCH1Unauthorized {
	return &ChangePhaseExecutionUsingPATCH1Unauthorized{}
}

/*ChangePhaseExecutionUsingPATCH1Unauthorized handles this case with default header values.

Unauthorized
*/
type ChangePhaseExecutionUsingPATCH1Unauthorized struct {
}

func (o *ChangePhaseExecutionUsingPATCH1Unauthorized) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseName}/{releaseVersionName}/phases-execution/{phaseName}][%d] changePhaseExecutionUsingPATCH1Unauthorized ", 401)
}

func (o *ChangePhaseExecutionUsingPATCH1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewChangePhaseExecutionUsingPATCH1Forbidden creates a ChangePhaseExecutionUsingPATCH1Forbidden with default headers values
func NewChangePhaseExecutionUsingPATCH1Forbidden() *ChangePhaseExecutionUsingPATCH1Forbidden {
	return &ChangePhaseExecutionUsingPATCH1Forbidden{}
}

/*ChangePhaseExecutionUsingPATCH1Forbidden handles this case with default header values.

Forbidden
*/
type ChangePhaseExecutionUsingPATCH1Forbidden struct {
}

func (o *ChangePhaseExecutionUsingPATCH1Forbidden) Error() string {
	return fmt.Sprintf("[PATCH /releases-execution/{releaseName}/{releaseVersionName}/phases-execution/{phaseName}][%d] changePhaseExecutionUsingPATCH1Forbidden ", 403)
}

func (o *ChangePhaseExecutionUsingPATCH1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
