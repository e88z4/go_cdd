// Code generated by go-swagger; DO NOT EDIT.

package execution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/e88z4/go_cdd/execution/models"
)

// GetPhaseExecutionUsingGETReader is a Reader for the GetPhaseExecutionUsingGET structure.
type GetPhaseExecutionUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPhaseExecutionUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPhaseExecutionUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPhaseExecutionUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPhaseExecutionUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPhaseExecutionUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPhaseExecutionUsingGETOK creates a GetPhaseExecutionUsingGETOK with default headers values
func NewGetPhaseExecutionUsingGETOK() *GetPhaseExecutionUsingGETOK {
	return &GetPhaseExecutionUsingGETOK{}
}

/*GetPhaseExecutionUsingGETOK handles this case with default header values.

OK
*/
type GetPhaseExecutionUsingGETOK struct {
	Payload *models.PhaseExecutionDto
}

func (o *GetPhaseExecutionUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}][%d] getPhaseExecutionUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetPhaseExecutionUsingGETOK) GetPayload() *models.PhaseExecutionDto {
	return o.Payload
}

func (o *GetPhaseExecutionUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PhaseExecutionDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPhaseExecutionUsingGETUnauthorized creates a GetPhaseExecutionUsingGETUnauthorized with default headers values
func NewGetPhaseExecutionUsingGETUnauthorized() *GetPhaseExecutionUsingGETUnauthorized {
	return &GetPhaseExecutionUsingGETUnauthorized{}
}

/*GetPhaseExecutionUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type GetPhaseExecutionUsingGETUnauthorized struct {
}

func (o *GetPhaseExecutionUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}][%d] getPhaseExecutionUsingGETUnauthorized ", 401)
}

func (o *GetPhaseExecutionUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhaseExecutionUsingGETForbidden creates a GetPhaseExecutionUsingGETForbidden with default headers values
func NewGetPhaseExecutionUsingGETForbidden() *GetPhaseExecutionUsingGETForbidden {
	return &GetPhaseExecutionUsingGETForbidden{}
}

/*GetPhaseExecutionUsingGETForbidden handles this case with default header values.

Forbidden
*/
type GetPhaseExecutionUsingGETForbidden struct {
}

func (o *GetPhaseExecutionUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}][%d] getPhaseExecutionUsingGETForbidden ", 403)
}

func (o *GetPhaseExecutionUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPhaseExecutionUsingGETNotFound creates a GetPhaseExecutionUsingGETNotFound with default headers values
func NewGetPhaseExecutionUsingGETNotFound() *GetPhaseExecutionUsingGETNotFound {
	return &GetPhaseExecutionUsingGETNotFound{}
}

/*GetPhaseExecutionUsingGETNotFound handles this case with default header values.

Not Found
*/
type GetPhaseExecutionUsingGETNotFound struct {
}

func (o *GetPhaseExecutionUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /releases-execution/{releaseId}/phases-execution/{phaseId}][%d] getPhaseExecutionUsingGETNotFound ", 404)
}

func (o *GetPhaseExecutionUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
